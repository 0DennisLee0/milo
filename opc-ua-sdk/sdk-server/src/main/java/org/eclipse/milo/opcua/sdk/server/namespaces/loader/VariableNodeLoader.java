/*
 * Copyright (c) 2019 the Eclipse Milo Authors
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 */

package org.eclipse.milo.opcua.sdk.server.namespaces.loader;

import java.io.IOException;
import java.io.StringReader;

import org.eclipse.milo.opcua.sdk.core.Reference;
import org.eclipse.milo.opcua.sdk.server.api.NodeManager;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.BaseDataVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.BuildInfoTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.ConditionVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.DataTypeDescriptionTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.DataTypeDictionaryTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.FiniteStateVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.FiniteTransitionVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.ProgramDiagnosticTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.PropertyTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SamplingIntervalDiagnosticsArrayTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SamplingIntervalDiagnosticsTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.ServerDiagnosticsSummaryTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.ServerStatusTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.ServerVendorCapabilityTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SessionDiagnosticsArrayTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SessionDiagnosticsVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SessionSecurityDiagnosticsArrayTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SessionSecurityDiagnosticsTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.StateVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SubscriptionDiagnosticsArrayTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SubscriptionDiagnosticsTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.TransitionVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.TwoStateVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.nodes.UaNode;
import org.eclipse.milo.opcua.sdk.server.nodes.UaNodeContext;
import org.eclipse.milo.opcua.stack.core.serialization.OpcUaXmlStreamDecoder;
import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;
import org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId;
import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;
import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;
import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;
import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;
import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;
import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;
import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UShort;
import org.xml.sax.SAXException;

class VariableNodeLoader {
    private final UaNodeContext context;

    private final NodeManager<UaNode> nodeManager;

    VariableNodeLoader(UaNodeContext context, NodeManager<UaNode> nodeManager) {
        this.context = context;
        this.nodeManager = nodeManager;
    }

    private void loadNode0() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8208), new QualifiedName(0, "RedundantServerDataType"), new LocalizedText("en", "RedundantServerDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8208), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8208), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">RedundantServerDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8211), new QualifiedName(0, "SamplingIntervalDiagnosticsDataType"), new LocalizedText("en", "SamplingIntervalDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8211), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8211), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">SamplingIntervalDiagnosticsDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode2() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8214), new QualifiedName(0, "ServerDiagnosticsSummaryDataType"), new LocalizedText("en", "ServerDiagnosticsSummaryDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8214), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8214), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">ServerDiagnosticsSummaryDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode3() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8217), new QualifiedName(0, "ServerStatusDataType"), new LocalizedText("en", "ServerStatusDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8217), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8217), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">ServerStatusDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode4() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8220), new QualifiedName(0, "SessionDiagnosticsDataType"), new LocalizedText("en", "SessionDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8220), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8220), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">SessionDiagnosticsDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode5() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8223), new QualifiedName(0, "SessionSecurityDiagnosticsDataType"), new LocalizedText("en", "SessionSecurityDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8223), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8223), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">SessionSecurityDiagnosticsDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode6() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8226), new QualifiedName(0, "ServiceCounterDataType"), new LocalizedText("en", "ServiceCounterDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8226), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8226), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">ServiceCounterDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode7() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8229), new QualifiedName(0, "SubscriptionDiagnosticsDataType"), new LocalizedText("en", "SubscriptionDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8229), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8229), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">SubscriptionDiagnosticsDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode8() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8232), new QualifiedName(0, "ModelChangeStructureDataType"), new LocalizedText("en", "ModelChangeStructureDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8232), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8232), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">ModelChangeStructureDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode9() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8235), new QualifiedName(0, "SemanticChangeStructureDataType"), new LocalizedText("en", "SemanticChangeStructureDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8235), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8235), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">SemanticChangeStructureDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode10() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8238), new QualifiedName(0, "Range"), new LocalizedText("en", "Range"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8238), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8238), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">Range</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode11() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8241), new QualifiedName(0, "EUInformation"), new LocalizedText("en", "EUInformation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8241), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8241), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">EUInformation</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode12() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8244), new QualifiedName(0, "Annotation"), new LocalizedText("en", "Annotation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8244), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8244), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">Annotation</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode13() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8247), new QualifiedName(0, "ProgramDiagnosticDataType"), new LocalizedText("en", "ProgramDiagnosticDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8247), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8247), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">ProgramDiagnosticDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode14() throws IOException, SAXException {
        DataTypeDictionaryTypeNode node = new DataTypeDictionaryTypeNode(this.context, new NodeId(0, 8252), new QualifiedName(0, "Opc.Ua"), new LocalizedText("en", "Opc.Ua"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8254), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12677), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8285), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8291), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12759), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12762), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8918), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8300), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12201), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8297), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8303), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8417), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12894), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12897), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8333), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8306), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8309), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8312), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8315), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8318), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8363), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8366), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8369), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8372), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12712), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12715), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8321), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8564), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8567), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8570), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8573), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8576), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8579), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8582), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8639), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8702), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8708), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8711), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8807), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8327), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8843), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11951), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11954), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8846), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8849), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8852), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8855), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8858), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8861), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8294), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8864), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8867), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8870), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8873), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8876), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12175), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12178), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12083), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12086), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8882), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8879), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(92), UInteger.valueOf(0)), false));
        node.addReference(new Reference(new NodeId(0, 8252), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(72), UInteger.valueOf(0)), true));
        StringBuilder sb = new StringBuilder();
        sb.append("<ByteString xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">");
        sb.append("");
        sb.append("");
        sb.append("");
        sb.append("");
        sb.append("");
        sb.append("");
        sb.append("z4NCiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0iU3VzcGVuZGVkXzMiIC8+DQogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9IlNodXRkb3duXzQiIC8+DQogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9IlRlc3RfNSIgLz4NCiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0iQ29tbXVuaWNhdGlvbkZhdWx0XzYiIC8+DQogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9IlVua25vd25fNyIgLz4NCiAgICA8L3hzOnJlc3RyaWN0aW9uPg0KICA8L3hzOnNpbXBsZVR5cGU+DQogIDx4czplbGVtZW50IG5hbWU9IlNlcnZlclN0YXRlIiB0eXBlPSJ0bnM6U2VydmVyU3RhdGUiIC8+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IlJlZHVuZGFudFNlcnZlckRhdGFUeXBlIj4NCiAgICA8eHM6c2VxdWVuY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJTZXJ2ZXJJZCIgdHlwZT0ieHM6c3RyaW5nIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iU2VydmljZUxldmVsIiB0eXBlPSJ4czp1bnNpZ25lZEJ5dGUiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlNlcnZlclN0YXRlIiB0eXBlPSJ0bnM6U2VydmVyU3RhdGUiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICA8L3hzOnNlcXVlbmNlPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KICA8eHM6ZWxlbWVudCBuYW1lPSJSZWR1bmRhbnRTZXJ2ZXJEYXRhVHlwZSIgdHlwZT0idG5zOlJlZHVuZGFudFNlcnZlckRhdGFUeXBlIiAvPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJMaXN0T2ZSZWR1bmRhbnRTZXJ2ZXJEYXRhVHlwZSI+DQogICAgPHhzOnNlcXVlbmNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iUmVkdW5kYW50U2VydmVyRGF0YVR5cGUiIHR5cGU9InRuczpSZWR1bmRhbnRTZXJ2ZXJEYXRhVHlwZSIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9InVuYm91bmRlZCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgPC94czpzZXF1ZW5jZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iTGlzdE9mUmVkdW5kYW50U2VydmVyRGF0YVR5cGUiIHR5cGU9InRuczpMaXN0T2ZSZWR1bmRhbnRTZXJ2ZXJEYXRhVHlwZSIgbmlsbGFibGU9InRydWUiPjwveHM6ZWxlbWVudD4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iRW5kcG9pbnRVcmxMaXN0RGF0YVR5cGUiPg0KICAgIDx4czpzZXF1ZW5jZT4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IkVuZHBvaW50VXJsTGlzdCIgdHlwZT0idWE6TGlzdE9mU3RyaW5nIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgIDwveHM6c2VxdWVuY2U+DQogIDwveHM6Y29tcGxleFR5cGU+DQogIDx4czplbGVtZW50IG5hbWU9IkVuZHBvaW50VXJsTGlzdERhdGFUeXBlIiB0eXBlPSJ0bnM6RW5kcG9pbnRVcmxMaXN0RGF0YVR5cGUiIC8+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9Ikxpc3RPZkVuZHBvaW50VXJsTGlzdERhdGFUeXBlIj4NCiAgICA8eHM6c2VxdWVuY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJFbmRwb2ludFVybExpc3REYXRhVHlwZSIgdHlwZT0idG5zOkVuZHBvaW50VXJsTGlzdERhdGFUeXBlIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICA8L3hzOnNlcXVlbmNlPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KICA8eHM6ZWxlbWVudCBuYW1lPSJMaXN0T2ZFbmRwb2ludFVybExpc3REYXRhVHlwZSIgdHlwZT0idG5zOkxpc3RPZkVuZHBvaW50VXJsTGlzdERhdGFUeXBlIiBuaWxsYWJsZT0idHJ1ZSI+PC94czplbGVtZW50Pg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJOZXR3b3JrR3JvdXBEYXRhVHlwZSI+DQogICAgPHhzOnNlcXVlbmNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iU2VydmVyVXJpIiB0eXBlPSJ4czpzdHJpbmciIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJOZXR3b3JrUGF0aHMiIHR5cGU9InRuczpMaXN0T2ZFbmRwb2ludFVybExpc3REYXRhVHlwZSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICA8L3hzOnNlcXVlbmNlPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KICA8eHM6ZWxlbWVudCBuYW1lPSJOZXR3b3JrR3JvdXBEYXRhVHlwZSIgdHlwZT0idG5zOk5ldHdvcmtHcm91cERhdGFUeXBlIiAvPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJMaXN0T2ZOZXR3b3JrR3JvdXBEYXRhVHlwZSI+DQogICAgPHhzOnNlcXVlbmNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iTmV0d29ya0dyb3VwRGF0YVR5cGUiIHR5cGU9InRuczpOZXR3b3JrR3JvdXBEYXRhVHlwZSIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9InVuYm91bmRlZCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgPC94czpzZXF1ZW5jZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iTGlzdE9mTmV0d29ya0dyb3VwRGF0YVR5cGUiIHR5cGU9InRuczpMaXN0T2ZOZXR3b3JrR3JvdXBEYXRhVHlwZSIgbmlsbGFibGU9InRydWUiPjwveHM6ZWxlbWVudD4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iU2FtcGxpbmdJbnRlcnZhbERpYWdub3N0aWNzRGF0YVR5cGUiPg0KICAgIDx4czpzZXF1ZW5jZT4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlNhbXBsaW5nSW50ZXJ2YWwiIHR5cGU9InhzOmRvdWJsZSIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iTW9uaXRvcmVkSXRlbUNvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iTWF4TW9uaXRvcmVkSXRlbUNvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iRGlzYWJsZWRNb25pdG9yZWRJdGVtQ291bnQiIHR5cGU9InhzOnVuc2lnbmVkSW50IiBtaW5PY2N1cnM9IjAiIC8+DQogICAgPC94czpzZXF1ZW5jZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iU2FtcGxpbmdJbnRlcnZhbERpYWdub3N0aWNzRGF0YVR5cGUiIHR5cGU9InRuczpTYW1wbGluZ0ludGVydmFsRGlhZ25vc3RpY3NEYXRhVHlwZSIgLz4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iTGlzdE9mU2FtcGxpbmdJbnRlcnZhbERpYWdub3N0aWNzRGF0YVR5cGUiPg0KICAgIDx4czpzZXF1ZW5jZT4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlNhbXBsaW5nSW50ZXJ2YWxEaWFnbm9zdGljc0RhdGFUeXBlIiB0eXBlPSJ0bnM6U2FtcGxpbmdJbnRlcnZhbERpYWdub3N0aWNzRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgIDwveHM6c2VxdWVuY2U+DQogIDwveHM6Y29tcGxleFR5cGU+DQogIDx4czplbGVtZW50IG5hbWU9Ikxpc3RPZlNhbXBsaW5nSW50ZXJ2YWxEaWFnbm9zdGljc0RhdGFUeXBlIiB0eXBlPSJ0bnM6TGlzdE9mU2FtcGxpbmdJbnRlcnZhbERpYWdub3N0aWNzRGF0YVR5cGUiIG5pbGxhYmxlPSJ0cnVlIj48L3hzOmVsZW1lbnQ+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IlNlcnZlckRpYWdub3N0aWNzU3VtbWFyeURhdGFUeXBlIj4NCiAgICA8eHM6c2VxdWVuY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJTZXJ2ZXJWaWV3Q291bnQiIHR5cGU9InhzOnVuc2lnbmVkSW50IiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJDdXJyZW50U2Vzc2lvbkNvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQ3VtdWxhdGVkU2Vzc2lvbkNvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iU2VjdXJpdHlSZWplY3RlZFNlc3Npb25Db3VudCIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlJlamVjdGVkU2Vzc2lvbkNvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iU2Vzc2lvblRpbWVvdXRDb3VudCIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlNlc3Npb25BYm9ydENvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQ3VycmVudFN1YnNjcmlwdGlvbkNvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQ3VtdWxhdGVkU3Vic2NyaXB0aW9uQ291bnQiIHR5cGU9InhzOnVuc2lnbmVkSW50IiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJQdWJsaXNoaW5nSW50ZXJ2YWxDb3VudCIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlNlY3VyaXR5UmVqZWN0ZWRSZXF1ZXN0c0NvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iUmVqZWN0ZWRSZXF1ZXN0c0NvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgIDwveHM6c2VxdWVuY2U+DQogIDwveHM6Y29tcGxleFR5cGU+DQogIDx4czplbGVtZW50IG5hbWU9IlNlcnZlckRpYWdub3N0aWNzU3VtbWFyeURhdGFUeXBlIiB0eXBlPSJ0bnM6U2VydmVyRGlhZ25vc3RpY3NTdW1tYXJ5RGF0YVR5cGUiIC8+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IlNlcnZlclN0YXR1c0RhdGFUeXBlIj4NCiAgICA8eHM6c2VxdWVuY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJTdGFydFRpbWUiIHR5cGU9InhzOmRhdGVUaW1lIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJDdXJyZW50VGltZSIgdHlwZT0ieHM6ZGF0ZVRpbWUiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlN0YXRlIiB0eXBlPSJ0bnM6U2VydmVyU3RhdGUiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IkJ1aWxkSW5mbyIgdHlwZT0idG5zOkJ1aWxkSW5mbyIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlNlY29uZHNUaWxsU2h1dGRvd24iIHR5cGU9InhzOnVuc2lnbmVkSW50IiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJTaHV0ZG93blJlYXNvbiIgdHlwZT0idWE6TG9jYWxpemVkVGV4dCIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICA8L3hzOnNlcXVlbmNlPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KICA8eHM6ZWxlbWVudCBuYW1lPSJTZXJ2ZXJTdGF0dXNEYXRhVHlwZSIgdHlwZT0idG5zOlNlcnZlclN0YXR1c0RhdGFUeXBlIiAvPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJTZXNzaW9uRGlhZ25vc3RpY3NEYXRhVHlwZSI+DQogICAgPHhzOnNlcXVlbmNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iU2Vzc2lvbklkIiB0eXBlPSJ1YTpOb2RlSWQiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJTZXNzaW9uTmFtZSIgdHlwZT0ieHM6c3RyaW5nIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQ2xpZW50RGVzY3JpcHRpb24iIHR5cGU9InRuczpBcHBsaWNhdGlvbkRlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iU2VydmVyVXJpIiB0eXBlPSJ4czpzdHJpbmciIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJFbmRwb2ludFVybCIgdHlwZT0ieHM6c3RyaW5nIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iTG9jYWxlSWRzIiB0eXBlPSJ1YTpMaXN0T2ZTdHJpbmciIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJBY3R1YWxTZXNzaW9uVGltZW91dCIgdHlwZT0ieHM6ZG91YmxlIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJNYXhSZXNwb25zZU1lc3NhZ2VTaXplIiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQ2xpZW50Q29ubmVjdGlvblRpbWUiIHR5cGU9InhzOmRhdGVUaW1lIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJDbGllbnRMYXN0Q29udGFjdFRpbWUiIHR5cGU9InhzOmRhdGVUaW1lIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJDdXJyZW50U3Vic2NyaXB0aW9uc0NvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQ3VycmVudE1vbml0b3JlZEl0ZW1zQ291bnQiIHR5cGU9InhzOnVuc2lnbmVkSW50IiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJDdXJyZW50UHVibGlzaFJlcXVlc3RzSW5RdWV1ZSIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlRvdGFsUmVxdWVzdENvdW50IiB0eXBlPSJ0bnM6U2VydmljZUNvdW50ZXJEYXRhVHlwZSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlVuYXV0aG9yaXplZFJlcXVlc3RDb3VudCIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlJlYWRDb3VudCIgdHlwZT0idG5zOlNlcnZpY2VDb3VudGVyRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJIaXN0b3J5UmVhZENvdW50IiB0eXBlPSJ0bnM6U2VydmljZUNvdW50ZXJEYXRhVHlwZSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IldyaXRlQ291bnQiIHR5cGU9InRuczpTZXJ2aWNlQ291bnRlckRhdGFUeXBlIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iSGlzdG9yeVVwZGF0ZUNvdW50IiB0eXBlPSJ0bnM6U2VydmljZUNvdW50ZXJEYXRhVHlwZSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IkNhbGxDb3VudCIgdHlwZT0idG5zOlNlcnZpY2VDb3VudGVyRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJDcmVhdGVNb25pdG9yZWRJdGVtc0NvdW50IiB0eXBlPSJ0bnM6U2VydmljZUNvdW50ZXJEYXRhVHlwZSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9Ik1vZGlmeU1vbml0b3JlZEl0ZW1zQ291bnQiIHR5cGU9InRuczpTZXJ2aWNlQ291bnRlckRhdGFUeXBlIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iU2V0TW9uaXRvcmluZ01vZGVDb3VudCIgdHlwZT0idG5zOlNlcnZpY2VDb3VudGVyRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJTZXRUcmlnZ2VyaW5nQ291bnQiIHR5cGU9InRuczpTZXJ2aWNlQ291bnRlckRhdGFUeXBlIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iRGVsZXRlTW9uaXRvcmVkSXRlbXNDb3VudCIgdHlwZT0idG5zOlNlcnZpY2VDb3VudGVyRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJDcmVhdGVTdWJzY3JpcHRpb25Db3VudCIgdHlwZT0idG5zOlNlcnZpY2VDb3VudGVyRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJNb2RpZnlTdWJzY3JpcHRpb25Db3VudCIgdHlwZT0idG5zOlNlcnZpY2VDb3VudGVyRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJTZXRQdWJsaXNoaW5nTW9kZUNvdW50IiB0eXBlPSJ0bnM6U2VydmljZUNvdW50ZXJEYXRhVHlwZSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlB1Ymxpc2hDb3VudCIgdHlwZT0idG5zOlNlcnZpY2VDb3VudGVyRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJSZXB1Ymxpc2hDb3VudCIgdHlwZT0idG5zOlNlcnZpY2VDb3VudGVyRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJUcmFuc2ZlclN1YnNjcmlwdGlvbnNDb3VudCIgdHlwZT0idG5zOlNlcnZpY2VDb3VudGVyRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJEZWxldGVTdWJzY3JpcHRpb25zQ291bnQiIHR5cGU9InRuczpTZXJ2aWNlQ291bnRlckRhdGFUeXBlIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQWRkTm9kZXNDb3VudCIgdHlwZT0idG5zOlNlcnZpY2VDb3VudGVyRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJBZGRSZWZlcmVuY2VzQ291bnQiIHR5cGU9InRuczpTZXJ2aWNlQ291bnRlckRhdGFUeXBlIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iRGVsZXRlTm9kZXNDb3VudCIgdHlwZT0idG5zOlNlcnZpY2VDb3VudGVyRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJEZWxldGVSZWZlcmVuY2VzQ291bnQiIHR5cGU9InRuczpTZXJ2aWNlQ291bnRlckRhdGFUeXBlIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQnJvd3NlQ291bnQiIHR5cGU9InRuczpTZXJ2aWNlQ291bnRlckRhdGFUeXBlIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQnJvd3NlTmV4dENvdW50IiB0eXBlPSJ0bnM6U2VydmljZUNvdW50ZXJEYXRhVHlwZSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlRyYW5zbGF0ZUJyb3dzZVBhdGhzVG9Ob2RlSWRzQ291bnQiIHR5cGU9InRuczpTZXJ2aWNlQ291bnRlckRhdGFUeXBlIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iUXVlcnlGaXJzdENvdW50IiB0eXBlPSJ0bnM6U2VydmljZUNvdW50ZXJEYXRhVHlwZSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlF1ZXJ5TmV4dENvdW50IiB0eXBlPSJ0bnM6U2VydmljZUNvdW50ZXJEYXRhVHlwZSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlJlZ2lzdGVyTm9kZXNDb3VudCIgdHlwZT0idG5zOlNlcnZpY2VDb3VudGVyRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJVbnJlZ2lzdGVyTm9kZXNDb3VudCIgdHlwZT0idG5zOlNlcnZpY2VDb3VudGVyRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgPC94czpzZXF1ZW5jZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iU2Vzc2lvbkRpYWdub3N0aWNzRGF0YVR5cGUiIHR5cGU9InRuczpTZXNzaW9uRGlhZ25vc3RpY3NEYXRhVHlwZSIgLz4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iTGlzdE9mU2Vzc2lvbkRpYWdub3N0aWNzRGF0YVR5cGUiPg0KICAgIDx4czpzZXF1ZW5jZT4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlNlc3Npb25EaWFnbm9zdGljc0RhdGFUeXBlIiB0eXBlPSJ0bnM6U2Vzc2lvbkRpYWdub3N0aWNzRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgIDwveHM6c2VxdWVuY2U+DQogIDwveHM6Y29tcGxleFR5cGU+DQogIDx4czplbGVtZW50IG5hbWU9Ikxpc3RPZlNlc3Npb25EaWFnbm9zdGljc0RhdGFUeXBlIiB0eXBlPSJ0bnM6TGlzdE9mU2Vzc2lvbkRpYWdub3N0aWNzRGF0YVR5cGUiIG5pbGxhYmxlPSJ0cnVlIj48L3hzOmVsZW1lbnQ+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IlNlc3Npb25TZWN1cml0eURpYWdub3N0aWNzRGF0YVR5cGUiPg0KICAgIDx4czpzZXF1ZW5jZT4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlNlc3Npb25JZCIgdHlwZT0idWE6Tm9kZUlkIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQ2xpZW50VXNlcklkT2ZTZXNzaW9uIiB0eXBlPSJ4czpzdHJpbmciIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJDbGllbnRVc2VySWRIaXN0b3J5IiB0eXBlPSJ1YTpMaXN0T2ZTdHJpbmciIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJBdXRoZW50aWNhdGlvbk1lY2hhbmlzbSIgdHlwZT0ieHM6c3RyaW5nIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iRW5jb2RpbmciIHR5cGU9InhzOnN0cmluZyIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlRyYW5zcG9ydFByb3RvY29sIiB0eXBlPSJ4czpzdHJpbmciIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJTZWN1cml0eU1vZGUiIHR5cGU9InRuczpNZXNzYWdlU2VjdXJpdHlNb2RlIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJTZWN1cml0eVBvbGljeVVyaSIgdHlwZT0ieHM6c3RyaW5nIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQ2xpZW50Q2VydGlmaWNhdGUiIHR5cGU9InhzOmJhc2U2NEJpbmFyeSIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICA8L3hzOnNlcXVlbmNlPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KICA8eHM6ZWxlbWVudCBuYW1lPSJTZXNzaW9uU2VjdXJpdHlEaWFnbm9zdGljc0RhdGFUeXBlIiB0eXBlPSJ0bnM6U2Vzc2lvblNlY3VyaXR5RGlhZ25vc3RpY3NEYXRhVHlwZSIgLz4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iTGlzdE9mU2Vzc2lvblNlY3VyaXR5RGlhZ25vc3RpY3NEYXRhVHlwZSI+DQogICAgPHhzOnNlcXVlbmNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iU2Vzc2lvblNlY3VyaXR5RGlhZ25vc3RpY3NEYXRhVHlwZSIgdHlwZT0idG5zOlNlc3Npb25TZWN1cml0eURpYWdub3N0aWNzRGF0YVR5cGUiIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgIDwveHM6c2VxdWVuY2U+DQogIDwveHM6Y29tcGxleFR5cGU+DQogIDx4czplbGVtZW50IG5hbWU9Ikxpc3RPZlNlc3Npb25TZWN1cml0eURpYWdub3N0aWNzRGF0YVR5cGUiIHR5cGU9InRuczpMaXN0T2ZTZXNzaW9uU2VjdXJpdHlEaWFnbm9zdGljc0RhdGFUeXBlIiBuaWxsYWJsZT0idHJ1ZSI+PC94czplbGVtZW50Pg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJTZXJ2aWNlQ291bnRlckRhdGFUeXBlIj4NCiAgICA8eHM6c2VxdWVuY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJUb3RhbENvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iRXJyb3JDb3VudCIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICA8L3hzOnNlcXVlbmNlPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KICA8eHM6ZWxlbWVudCBuYW1lPSJTZXJ2aWNlQ291bnRlckRhdGFUeXBlIiB0eXBlPSJ0bnM6U2VydmljZUNvdW50ZXJEYXRhVHlwZSIgLz4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iU3RhdHVzUmVzdWx0Ij4NCiAgICA8eHM6c2VxdWVuY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJTdGF0dXNDb2RlIiB0eXBlPSJ1YTpTdGF0dXNDb2RlIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJEaWFnbm9zdGljSW5mbyIgdHlwZT0idWE6RGlhZ25vc3RpY0luZm8iIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgPC94czpzZXF1ZW5jZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iU3RhdHVzUmVzdWx0IiB0eXBlPSJ0bnM6U3RhdHVzUmVzdWx0IiAvPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJMaXN0T2ZTdGF0dXNSZXN1bHQiPg0KICAgIDx4czpzZXF1ZW5jZT4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlN0YXR1c1Jlc3VsdCIgdHlwZT0idG5zOlN0YXR1c1Jlc3VsdCIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9InVuYm91bmRlZCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgPC94czpzZXF1ZW5jZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iTGlzdE9mU3RhdHVzUmVzdWx0IiB0eXBlPSJ0bnM6TGlzdE9mU3RhdHVzUmVzdWx0IiBuaWxsYWJsZT0idHJ1ZSI+PC94czplbGVtZW50Pg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJTdWJzY3JpcHRpb25EaWFnbm9zdGljc0RhdGFUeXBlIj4NCiAgICA8eHM6c2VxdWVuY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJTZXNzaW9uSWQiIHR5cGU9InVhOk5vZGVJZCIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlN1YnNjcmlwdGlvbklkIiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iUHJpb3JpdHkiIHR5cGU9InhzOnVuc2lnbmVkQnl0ZSIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iUHVibGlzaGluZ0ludGVydmFsIiB0eXBlPSJ4czpkb3VibGUiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9Ik1heEtlZXBBbGl2ZUNvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iTWF4TGlmZXRpbWVDb3VudCIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9Ik1heE5vdGlmaWNhdGlvbnNQZXJQdWJsaXNoIiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iUHVibGlzaGluZ0VuYWJsZWQiIHR5cGU9InhzOmJvb2xlYW4iIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9Ik1vZGlmeUNvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iRW5hYmxlQ291bnQiIHR5cGU9InhzOnVuc2lnbmVkSW50IiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJEaXNhYmxlQ291bnQiIHR5cGU9InhzOnVuc2lnbmVkSW50IiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJSZXB1Ymxpc2hSZXF1ZXN0Q291bnQiIHR5cGU9InhzOnVuc2lnbmVkSW50IiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJSZXB1Ymxpc2hNZXNzYWdlUmVxdWVzdENvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iUmVwdWJsaXNoTWVzc2FnZUNvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iVHJhbnNmZXJSZXF1ZXN0Q291bnQiIHR5cGU9InhzOnVuc2lnbmVkSW50IiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJUcmFuc2ZlcnJlZFRvQWx0Q2xpZW50Q291bnQiIHR5cGU9InhzOnVuc2lnbmVkSW50IiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJUcmFuc2ZlcnJlZFRvU2FtZUNsaWVudENvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iUHVibGlzaFJlcXVlc3RDb3VudCIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IkRhdGFDaGFuZ2VOb3RpZmljYXRpb25zQ291bnQiIHR5cGU9InhzOnVuc2lnbmVkSW50IiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJFdmVudE5vdGlmaWNhdGlvbnNDb3VudCIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9Ik5vdGlmaWNhdGlvbnNDb3VudCIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IkxhdGVQdWJsaXNoUmVxdWVzdENvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQ3VycmVudEtlZXBBbGl2ZUNvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQ3VycmVudExpZmV0aW1lQ291bnQiIHR5cGU9InhzOnVuc2lnbmVkSW50IiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJVbmFja25vd2xlZGdlZE1lc3NhZ2VDb3VudCIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IkRpc2NhcmRlZE1lc3NhZ2VDb3VudCIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9Ik1vbml0b3JlZEl0ZW1Db3VudCIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IkRpc2FibGVkTW9uaXRvcmVkSXRlbUNvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iTW9uaXRvcmluZ1F1ZXVlT3ZlcmZsb3dDb3VudCIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9Ik5leHRTZXF1ZW5jZU51bWJlciIgdHlwZT0ieHM6dW5zaWduZWRJbnQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IkV2ZW50UXVldWVPdmVyRmxvd0NvdW50IiB0eXBlPSJ4czp1bnNpZ25lZEludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgIDwveHM6c2VxdWVuY2U+DQogIDwveHM6Y29tcGxleFR5cGU+DQogIDx4czplbGVtZW50IG5hbWU9IlN1YnNjcmlwdGlvbkRpYWdub3N0aWNzRGF0YVR5cGUiIHR5cGU9InRuczpTdWJzY3JpcHRpb25EaWFnbm9zdGljc0RhdGFUeXBlIiAvPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJMaXN0T2ZTdWJzY3JpcHRpb25EaWFnbm9zdGljc0RhdGFUeXBlIj4NCiAgICA8eHM6c2VxdWVuY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJTdWJzY3JpcHRpb25EaWFnbm9zdGljc0RhdGFUeXBlIiB0eXBlPSJ0bnM6U3Vic2NyaXB0aW9uRGlhZ25vc3RpY3NEYXRhVHlwZSIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9InVuYm91bmRlZCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgPC94czpzZXF1ZW5jZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iTGlzdE9mU3Vic2NyaXB0aW9uRGlhZ25vc3RpY3NEYXRhVHlwZSIgdHlwZT0idG5zOkxpc3RPZlN1YnNjcmlwdGlvbkRpYWdub3N0aWNzRGF0YVR5cGUiIG5pbGxhYmxlPSJ0cnVlIj48L3hzOmVsZW1lbnQ+DQoNCiAgPHhzOnNpbXBsZVR5cGUgIG5hbWU9Ik1vZGVsQ2hhbmdlU3RydWN0dXJlVmVyYk1hc2siPg0KICAgIDx4czpyZXN0cmljdGlvbiBiYXNlPSJ4czpzdHJpbmciPg0KICAgICAgPHhzOmVudW1lcmF0aW9uIHZhbHVlPSJOb2RlQWRkZWRfMSIgLz4NCiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0iTm9kZURlbGV0ZWRfMiIgLz4NCiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0iUmVmZXJlbmNlQWRkZWRfNCIgLz4NCiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0iUmVmZXJlbmNlRGVsZXRlZF84IiAvPg0KICAgICAgPHhzOmVudW1lcmF0aW9uIHZhbHVlPSJEYXRhVHlwZUNoYW5nZWRfMTYiIC8+DQogICAgPC94czpyZXN0cmljdGlvbj4NCiAgPC94czpzaW1wbGVUeXBlPg0KICA8eHM6ZWxlbWVudCBuYW1lPSJNb2RlbENoYW5nZVN0cnVjdHVyZVZlcmJNYXNrIiB0eXBlPSJ0bnM6TW9kZWxDaGFuZ2VTdHJ1Y3R1cmVWZXJiTWFzayIgLz4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iTW9kZWxDaGFuZ2VTdHJ1Y3R1cmVEYXRhVHlwZSI+DQogICAgPHhzOnNlcXVlbmNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQWZmZWN0ZWQiIHR5cGU9InVhOk5vZGVJZCIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IkFmZmVjdGVkVHlwZSIgdHlwZT0idWE6Tm9kZUlkIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iVmVyYiIgdHlwZT0ieHM6dW5zaWduZWRCeXRlIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgPC94czpzZXF1ZW5jZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iTW9kZWxDaGFuZ2VTdHJ1Y3R1cmVEYXRhVHlwZSIgdHlwZT0idG5zOk1vZGVsQ2hhbmdlU3RydWN0dXJlRGF0YVR5cGUiIC8+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9Ikxpc3RPZk1vZGVsQ2hhbmdlU3RydWN0dXJlRGF0YVR5cGUiPg0KICAgIDx4czpzZXF1ZW5jZT4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9Ik1vZGVsQ2hhbmdlU3RydWN0dXJlRGF0YVR5cGUiIHR5cGU9InRuczpNb2RlbENoYW5nZVN0cnVjdHVyZURhdGFUeXBlIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICA8L3hzOnNlcXVlbmNlPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KICA8eHM6ZWxlbWVudCBuYW1lPSJMaXN0T2ZNb2RlbENoYW5nZVN0cnVjdHVyZURhdGFUeXBlIiB0eXBlPSJ0bnM6TGlzdE9mTW9kZWxDaGFuZ2VTdHJ1Y3R1cmVEYXRhVHlwZSIgbmlsbGFibGU9InRydWUiPjwveHM6ZWxlbWVudD4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iU2VtYW50aWNDaGFuZ2VTdHJ1Y3R1cmVEYXRhVHlwZSI+DQogICAgPHhzOnNlcXVlbmNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQWZmZWN0ZWQiIHR5cGU9InVhOk5vZGVJZCIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IkFmZmVjdGVkVHlwZSIgdHlwZT0idWE6Tm9kZUlkIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgIDwveHM6c2VxdWVuY2U+DQogIDwveHM6Y29tcGxleFR5cGU+DQogIDx4czplbGVtZW50IG5hbWU9IlNlbWFudGljQ2hhbmdlU3RydWN0dXJlRGF0YVR5cGUiIHR5cGU9InRuczpTZW1hbnRpY0NoYW5nZVN0cnVjdHVyZURhdGFUeXBlIiAvPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJMaXN0T2ZTZW1hbnRpY0NoYW5nZVN0cnVjdHVyZURhdGFUeXBlIj4NCiAgICA8eHM6c2VxdWVuY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJTZW1hbnRpY0NoYW5nZVN0cnVjdHVyZURhdGFUeXBlIiB0eXBlPSJ0bnM6U2VtYW50aWNDaGFuZ2VTdHJ1Y3R1cmVEYXRhVHlwZSIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9InVuYm91bmRlZCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgPC94czpzZXF1ZW5jZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iTGlzdE9mU2VtYW50aWNDaGFuZ2VTdHJ1Y3R1cmVEYXRhVHlwZSIgdHlwZT0idG5zOkxpc3RPZlNlbWFudGljQ2hhbmdlU3RydWN0dXJlRGF0YVR5cGUiIG5pbGxhYmxlPSJ0cnVlIj48L3hzOmVsZW1lbnQ+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IlJhbmdlIj4NCiAgICA8eHM6c2VxdWVuY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJMb3ciIHR5cGU9InhzOmRvdWJsZSIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iSGlnaCIgdHlwZT0ieHM6ZG91YmxlIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgPC94czpzZXF1ZW5jZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iUmFuZ2UiIHR5cGU9InRuczpSYW5nZSIgLz4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iRVVJbmZvcm1hdGlvbiI+DQogICAgPHhzOnNlcXVlbmNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iTmFtZXNwYWNlVXJpIiB0eXBlPSJ4czpzdHJpbmciIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJVbml0SWQiIHR5cGU9InhzOmludCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iRGlzcGxheU5hbWUiIHR5cGU9InVhOkxvY2FsaXplZFRleHQiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJEZXNjcmlwdGlvbiIgdHlwZT0idWE6TG9jYWxpemVkVGV4dCIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICA8L3hzOnNlcXVlbmNlPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KICA8eHM6ZWxlbWVudCBuYW1lPSJFVUluZm9ybWF0aW9uIiB0eXBlPSJ0bnM6RVVJbmZvcm1hdGlvbiIgLz4NCg0KICA8eHM6c2ltcGxlVHlwZSAgbmFtZT0iQXhpc1NjYWxlRW51bWVyYXRpb24iPg0KICAgIDx4czpyZXN0cmljdGlvbiBiYXNlPSJ4czpzdHJpbmciPg0KICAgICAgPHhzOmVudW1lcmF0aW9uIHZhbHVlPSJMaW5lYXJfMCIgLz4NCiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0iTG9nXzEiIC8+DQogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9IkxuXzIiIC8+DQogICAgPC94czpyZXN0cmljdGlvbj4NCiAgPC94czpzaW1wbGVUeXBlPg0KICA8eHM6ZWxlbWVudCBuYW1lPSJBeGlzU2NhbGVFbnVtZXJhdGlvbiIgdHlwZT0idG5zOkF4aXNTY2FsZUVudW1lcmF0aW9uIiAvPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJDb21wbGV4TnVtYmVyVHlwZSI+DQogICAgPHhzOnNlcXVlbmNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iUmVhbCIgdHlwZT0ieHM6ZmxvYXQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IkltYWdpbmFyeSIgdHlwZT0ieHM6ZmxvYXQiIG1pbk9jY3Vycz0iMCIgLz4NCiAgICA8L3hzOnNlcXVlbmNlPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KICA8eHM6ZWxlbWVudCBuYW1lPSJDb21wbGV4TnVtYmVyVHlwZSIgdHlwZT0idG5zOkNvbXBsZXhOdW1iZXJUeXBlIiAvPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJEb3VibGVDb21wbGV4TnVtYmVyVHlwZSI+DQogICAgPHhzOnNlcXVlbmNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iUmVhbCIgdHlwZT0ieHM6ZG91YmxlIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJJbWFnaW5hcnkiIHR5cGU9InhzOmRvdWJsZSIgbWluT2NjdXJzPSIwIiAvPg0KICAgIDwveHM6c2VxdWVuY2U+DQogIDwveHM6Y29tcGxleFR5cGU+DQogIDx4czplbGVtZW50IG5hbWU9IkRvdWJsZUNvbXBsZXhOdW1iZXJUeXBlIiB0eXBlPSJ0bnM6RG91YmxlQ29tcGxleE51bWJlclR5cGUiIC8+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IkF4aXNJbmZvcm1hdGlvbiI+DQogICAgPHhzOnNlcXVlbmNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iRW5naW5lZXJpbmdVbml0cyIgdHlwZT0idG5zOkVVSW5mb3JtYXRpb24iIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJFVVJhbmdlIiB0eXBlPSJ0bnM6UmFuZ2UiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJUaXRsZSIgdHlwZT0idWE6TG9jYWxpemVkVGV4dCIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IkF4aXNTY2FsZVR5cGUiIHR5cGU9InRuczpBeGlzU2NhbGVFbnVtZXJhdGlvbiIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQXhpc1N0ZXBzIiB0eXBlPSJ1YTpMaXN0T2ZEb3VibGUiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgPC94czpzZXF1ZW5jZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iQXhpc0luZm9ybWF0aW9uIiB0eXBlPSJ0bnM6QXhpc0luZm9ybWF0aW9uIiAvPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJYVlR5cGUiPg0KICAgIDx4czpzZXF1ZW5jZT4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IlgiIHR5cGU9InhzOmRvdWJsZSIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iVmFsdWUiIHR5cGU9InhzOmZsb2F0IiBtaW5PY2N1cnM9IjAiIC8+DQogICAgPC94czpzZXF1ZW5jZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iWFZUeXBlIiB0eXBlPSJ0bnM6WFZUeXBlIiAvPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJQcm9ncmFtRGlhZ25vc3RpY0RhdGFUeXBlIj4NCiAgICA8eHM6c2VxdWVuY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJDcmVhdGVTZXNzaW9uSWQiIHR5cGU9InVhOk5vZGVJZCIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9IkNyZWF0ZUNsaWVudE5hbWUiIHR5cGU9InhzOnN0cmluZyIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIgLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9Ikludm9jYXRpb25DcmVhdGlvblRpbWUiIHR5cGU9InhzOmRhdGVUaW1lIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJMYXN0VHJhbnNpdGlvblRpbWUiIHR5cGU9InhzOmRhdGVUaW1lIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJMYXN0TWV0aG9kQ2FsbCIgdHlwZT0ieHM6c3RyaW5nIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iTGFzdE1ldGhvZFNlc3Npb25JZCIgdHlwZT0idWE6Tm9kZUlkIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iTGFzdE1ldGhvZElucHV0QXJndW1lbnRzIiB0eXBlPSJ0bnM6TGlzdE9mQXJndW1lbnQiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJMYXN0TWV0aG9kT3V0cHV0QXJndW1lbnRzIiB0eXBlPSJ0bnM6TGlzdE9mQXJndW1lbnQiIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJMYXN0TWV0aG9kQ2FsbFRpbWUiIHR5cGU9InhzOmRhdGVUaW1lIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJMYXN0TWV0aG9kUmV0dXJuU3RhdHVzIiB0eXBlPSJ0bnM6U3RhdHVzUmVzdWx0IiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgIDwveHM6c2VxdWVuY2U+DQogIDwveHM6Y29tcGxleFR5cGU+DQogIDx4czplbGVtZW50IG5hbWU9IlByb2dyYW1EaWFnbm9zdGljRGF0YVR5cGUiIHR5cGU9InRuczpQcm9ncmFtRGlhZ25vc3RpY0RhdGFUeXBlIiAvPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJBbm5vdGF0aW9uIj4NCiAgICA8eHM6c2VxdWVuY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJNZXNzYWdlIiB0eXBlPSJ4czpzdHJpbmciIG1pbk9jY3Vycz0iMCIgbmlsbGFibGU9InRydWUiIC8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJVc2VyTmFtZSIgdHlwZT0ieHM6c3RyaW5nIiBtaW5PY2N1cnM9IjAiIG5pbGxhYmxlPSJ0cnVlIiAvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iQW5ub3RhdGlvblRpbWUiIHR5cGU9InhzOmRhdGVUaW1lIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgPC94czpzZXF1ZW5jZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iQW5ub3RhdGlvbiIgdHlwZT0idG5zOkFubm90YXRpb24iIC8+DQoNCiAgPHhzOnNpbXBsZVR5cGUgIG5hbWU9IkV4Y2VwdGlvbkRldmlhdGlvbkZvcm1hdCI+DQogICAgPHhzOnJlc3RyaWN0aW9uIGJhc2U9InhzOnN0cmluZyI+DQogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9IkFic29sdXRlVmFsdWVfMCIgLz4NCiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0iUGVyY2VudE9mVmFsdWVfMSIgLz4NCiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0iUGVyY2VudE9mUmFuZ2VfMiIgLz4NCiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0iUGVyY2VudE9mRVVSYW5nZV8zIiAvPg0KICAgICAgPHhzOmVudW1lcmF0aW9uIHZhbHVlPSJVbmtub3duXzQiIC8+DQogICAgPC94czpyZXN0cmljdGlvbj4NCiAgPC94czpzaW1wbGVUeXBlPg0KICA8eHM6ZWxlbWVudCBuYW1lPSJFeGNlcHRpb25EZXZpYXRpb25Gb3JtYXQiIHR5cGU9InRuczpFeGNlcHRpb25EZXZpYXRpb25Gb3JtYXQiIC8+DQoNCjwveHM6c2NoZW1hPg==</ByteString>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode15() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 8254), new QualifiedName(0, "NamespaceUri"), new LocalizedText("en", "NamespaceUri"), new LocalizedText("en", "A URI that uniquely identifies the dictionary."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8254), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8254), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">http://opcfoundation.org/UA/2008/02/Types.xsd</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode16() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 4170), new QualifiedName(0, "EventId"), new LocalizedText("en", "EventId"), new LocalizedText("en", "A globally unique identifier for the event."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 4170), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 4170), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 4170), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2829), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode17() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8285), new QualifiedName(0, "Argument"), new LocalizedText("en", "Argument"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8285), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8285), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='Argument']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode18() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8291), new QualifiedName(0, "EnumValueType"), new LocalizedText("en", "EnumValueType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8291), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8291), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='EnumValueType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode19() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8294), new QualifiedName(0, "StatusResult"), new LocalizedText("en", "StatusResult"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8294), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8294), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='StatusResult']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode20() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 104), new QualifiedName(0, "DataTypeVersion"), new LocalizedText("en", "DataTypeVersion"), new LocalizedText("en", "The version number for the data type description."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 104), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 104), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 104), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode21() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 105), new QualifiedName(0, "DictionaryFragment"), new LocalizedText("en", "DictionaryFragment"), new LocalizedText("en", "A fragment of a data type dictionary that defines the data type."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 105), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 105), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 105), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode22() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8297), new QualifiedName(0, "UserTokenPolicy"), new LocalizedText("en", "UserTokenPolicy"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8297), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8297), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='UserTokenPolicy']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode23() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 106), new QualifiedName(0, "DataTypeVersion"), new LocalizedText("en", "DataTypeVersion"), new LocalizedText("en", "The version number for the data type dictionary."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 106), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 106), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 106), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(72), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode24() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 107), new QualifiedName(0, "NamespaceUri"), new LocalizedText("en", "NamespaceUri"), new LocalizedText("en", "A URI that uniquely identifies the dictionary."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 107), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 107), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 107), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(72), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode25() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8300), new QualifiedName(0, "ApplicationDescription"), new LocalizedText("en", "ApplicationDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8300), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8300), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='ApplicationDescription']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode26() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 111), new QualifiedName(0, "NamingRule"), new LocalizedText("en", "NamingRule"), new LocalizedText("en", "Specified the significances of the BrowseName when a type is instantiated."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 120), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 111), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 111), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 111), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(77), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Int32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">1</Int32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode27() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8303), new QualifiedName(0, "EndpointDescription"), new LocalizedText("en", "EndpointDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8303), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8303), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='EndpointDescription']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode28() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 112), new QualifiedName(0, "NamingRule"), new LocalizedText("en", "NamingRule"), new LocalizedText("en", "Specified the significances of the BrowseName when a type is instantiated."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 120), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 112), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 112), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Int32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">1</Int32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode29() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 113), new QualifiedName(0, "NamingRule"), new LocalizedText("en", "NamingRule"), new LocalizedText("en", "Specified the significances of the BrowseName when a type is instantiated."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 120), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 113), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 113), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Int32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">2</Int32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode30() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 114), new QualifiedName(0, "NamingRule"), new LocalizedText("en", "NamingRule"), new LocalizedText("en", "Specified the significances of the BrowseName when a type is instantiated."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 120), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 114), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 114), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(83), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Int32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">3</Int32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode31() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8306), new QualifiedName(0, "UserIdentityToken"), new LocalizedText("en", "UserIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8306), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8306), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='UserIdentityToken']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode32() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 116), new QualifiedName(0, "NamingRule"), new LocalizedText("en", "NamingRule"), new LocalizedText("en", "Specified the significances of the BrowseName when a type is instantiated."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 120), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 116), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 116), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(79), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Int32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">1</Int32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode33() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8309), new QualifiedName(0, "AnonymousIdentityToken"), new LocalizedText("en", "AnonymousIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8309), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8309), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='AnonymousIdentityToken']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode34() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8312), new QualifiedName(0, "UserNameIdentityToken"), new LocalizedText("en", "UserNameIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8312), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8312), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='UserNameIdentityToken']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode35() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8315), new QualifiedName(0, "X509IdentityToken"), new LocalizedText("en", "X509IdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8315), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8315), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='X509IdentityToken']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode36() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8318), new QualifiedName(0, "IssuedIdentityToken"), new LocalizedText("en", "IssuedIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8318), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8318), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='IssuedIdentityToken']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode37() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8321), new QualifiedName(0, "EndpointConfiguration"), new LocalizedText("en", "EndpointConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8321), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8321), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='EndpointConfiguration']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode38() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8327), new QualifiedName(0, "BuildInfo"), new LocalizedText("en", "BuildInfo"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8327), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8327), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='BuildInfo']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode39() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8333), new QualifiedName(0, "SignedSoftwareCertificate"), new LocalizedText("en", "SignedSoftwareCertificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8333), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8333), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='SignedSoftwareCertificate']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode40() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8363), new QualifiedName(0, "AddNodesItem"), new LocalizedText("en", "AddNodesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8363), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8363), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='AddNodesItem']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode41() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8366), new QualifiedName(0, "AddReferencesItem"), new LocalizedText("en", "AddReferencesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8366), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8366), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='AddReferencesItem']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode42() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8369), new QualifiedName(0, "DeleteNodesItem"), new LocalizedText("en", "DeleteNodesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8369), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8369), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='DeleteNodesItem']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode43() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8372), new QualifiedName(0, "DeleteReferencesItem"), new LocalizedText("en", "DeleteReferencesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8372), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8372), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='DeleteReferencesItem']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode44() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12502), new QualifiedName(0, "Context"), new LocalizedText("en", "Context"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12502), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12502), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12502), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11436), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode45() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12503), new QualifiedName(0, "Progress"), new LocalizedText("en", "Progress"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12503), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12503), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12503), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11436), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode46() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8417), new QualifiedName(0, "RegisteredServer"), new LocalizedText("en", "RegisteredServer"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8417), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8417), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='RegisteredServer']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode47() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12542), new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12542), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12542), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12542), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12522), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode48() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12544), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12544), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12544), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12544), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12543), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode49() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12545), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12545), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12545), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12545), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12543), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode50() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12547), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12547), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12547), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12547), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12546), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ApplyChangesRequired</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode51() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12549), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12549), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12549), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12549), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12548), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificate</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode52() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12551), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12551), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12551), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12551), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12550), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Thumbprint</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode53() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12553), new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7594), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12553), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12553), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12553), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12552), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>0</Value><DisplayName><Locale>                </Locale><Text>None</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>TrustedCertificates</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>TrustedCrls</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4</Value><DisplayName><Locale>                </Locale><Text>IssuerCertificates</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>8</Value><DisplayName><Locale>                </Locale><Text>IssuerCrls</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>15</Value><DisplayName><Locale>                </Locale><Text>All</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode54() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12583), new QualifiedName(0, "SupportedPrivateKeyFormats"), new LocalizedText("en", "SupportedPrivateKeyFormats"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12583), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12583), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12583), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12581), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode55() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12584), new QualifiedName(0, "MaxTrustListSize"), new LocalizedText("en", "MaxTrustListSize"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12584), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12584), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12584), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12581), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode56() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12585), new QualifiedName(0, "MulticastDnsEnabled"), new LocalizedText("en", "MulticastDnsEnabled"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12585), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12585), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12585), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12581), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode57() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12617), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12617), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12617), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12617), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12616), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateGroupId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateTypeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificate</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IssuerCertificates</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>PrivateKeyFormat</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>PrivateKey</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode58() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12618), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12618), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12618), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12618), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12616), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ApplyChangesRequired</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode59() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12639), new QualifiedName(0, "SupportedPrivateKeyFormats"), new LocalizedText("en", "SupportedPrivateKeyFormats"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12639), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12639), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12637), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode60() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12640), new QualifiedName(0, "MaxTrustListSize"), new LocalizedText("en", "MaxTrustListSize"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12640), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12640), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12637), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode61() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12641), new QualifiedName(0, "MulticastDnsEnabled"), new LocalizedText("en", "MulticastDnsEnabled"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12641), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12641), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12637), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode62() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12643), new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), new LocalizedText("en", "The size of the file in bytes."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 9), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12643), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12643), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12642), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode63() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12646), new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), new LocalizedText("en", "The current number of open file handles."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12646), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12646), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12642), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode64() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12648), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12648), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12648), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12647), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode65() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12649), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12649), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12649), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12647), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode66() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12651), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12651), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12651), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12650), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode67() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12653), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12653), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12653), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12652), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode68() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12654), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12654), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12654), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12652), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode69() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12656), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12656), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12656), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12655), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode70() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12658), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12658), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12658), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12657), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode71() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12659), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12659), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12659), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12657), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode72() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8564), new QualifiedName(0, "ContentFilterElement"), new LocalizedText("en", "ContentFilterElement"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8564), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8564), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='ContentFilterElement']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode73() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12661), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12661), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12661), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12660), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode74() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12662), new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12662), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12662), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12642), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode75() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8567), new QualifiedName(0, "ContentFilter"), new LocalizedText("en", "ContentFilter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8567), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8567), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='ContentFilter']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode76() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12664), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12664), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12664), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12663), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode77() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12665), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12665), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12665), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12663), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode78() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8570), new QualifiedName(0, "FilterOperand"), new LocalizedText("en", "FilterOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8570), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8570), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='FilterOperand']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode79() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12667), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12667), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12667), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12666), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ApplyChangesRequired</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode80() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12669), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12669), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12669), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12668), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificate</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode81() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8573), new QualifiedName(0, "ElementOperand"), new LocalizedText("en", "ElementOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8573), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8573), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='ElementOperand']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode82() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12671), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12671), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12671), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12670), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Thumbprint</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode83() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8576), new QualifiedName(0, "LiteralOperand"), new LocalizedText("en", "LiteralOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8576), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8576), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='LiteralOperand']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode84() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8579), new QualifiedName(0, "AttributeOperand"), new LocalizedText("en", "AttributeOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8579), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8579), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='AttributeOperand']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode85() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12677), new QualifiedName(0, "TrustListDataType"), new LocalizedText("en", "TrustListDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12677), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12677), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='TrustListDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode86() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8582), new QualifiedName(0, "SimpleAttributeOperand"), new LocalizedText("en", "SimpleAttributeOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8582), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8582), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='SimpleAttributeOperand']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode87() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12681), new QualifiedName(0, "TrustListDataType"), new LocalizedText("en", "TrustListDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12681), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12681), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">TrustListDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode88() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12686), new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), new LocalizedText("en", "Whether the file is writable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12686), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12686), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12686), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11575), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode89() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12687), new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), new LocalizedText("en", "Whether the file is writable by the current user."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12687), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12687), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12687), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11575), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode90() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12690), new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), new LocalizedText("en", "Whether the file is writable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12690), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12690), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12690), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11624), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode91() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12691), new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), new LocalizedText("en", "Whether the file is writable by the current user."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12691), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12691), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12691), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11624), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode92() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12694), new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), new LocalizedText("en", "Whether the file is writable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12694), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12694), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12694), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11675), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode93() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12695), new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), new LocalizedText("en", "Whether the file is writable by the current user."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12695), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12695), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12695), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11675), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode94() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12705), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12705), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12705), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12705), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12546), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode95() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12708), new QualifiedName(0, "ServerCapabilities"), new LocalizedText("en", "ServerCapabilities"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12708), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12708), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12708), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12581), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode96() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12710), new QualifiedName(0, "ServerCapabilities"), new LocalizedText("en", "ServerCapabilities"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12710), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12710), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12637), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode97() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12712), new QualifiedName(0, "RelativePathElement"), new LocalizedText("en", "RelativePathElement"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12712), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12712), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='RelativePathElement']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode98() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12715), new QualifiedName(0, "RelativePath"), new LocalizedText("en", "RelativePath"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12715), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12715), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='RelativePath']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode99() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12718), new QualifiedName(0, "RelativePathElement"), new LocalizedText("en", "RelativePathElement"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12718), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12718), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">RelativePathElement</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode100() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12721), new QualifiedName(0, "RelativePath"), new LocalizedText("en", "RelativePath"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12721), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12721), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">RelativePath</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode101() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12732), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12732), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12732), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12732), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12731), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateGroupId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateTypeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubjectName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>RegeneratePrivateKey</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Nonce</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode102() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12733), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12733), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12733), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12733), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12731), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateRequest</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode103() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8639), new QualifiedName(0, "HistoryEvent"), new LocalizedText("en", "HistoryEvent"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8639), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8639), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='HistoryEvent']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode104() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12738), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12738), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12738), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12737), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateGroupId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateTypeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubjectName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>RegeneratePrivateKey</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Nonce</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode105() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12739), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12739), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12739), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12737), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateRequest</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode106() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12745), new QualifiedName(0, "OptionSetValues"), new LocalizedText("en", "OptionSetValues"), new LocalizedText("en", "Contains the human-readable representation for each bit of the bit mask."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12745), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode107() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12747), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12747), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12747), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12747), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12746), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>LifetimeInHours</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode108() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12748), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12748), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12748), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12748), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12746), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>RevisedLifetimeInHours</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode109() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12750), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12750), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12750), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12749), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>LifetimeInHours</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode110() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12751), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12751), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12751), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12749), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>RevisedLifetimeInHours</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode111() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12759), new QualifiedName(0, "OptionSet"), new LocalizedText("en", "OptionSet"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12759), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12759), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='OptionSet']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode112() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12762), new QualifiedName(0, "Union"), new LocalizedText("en", "Union"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12762), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12762), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='Union']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode113() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12767), new QualifiedName(0, "OptionSet"), new LocalizedText("en", "OptionSet"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12767), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12767), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">OptionSet</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode114() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12770), new QualifiedName(0, "Union"), new LocalizedText("en", "Union"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12770), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12770), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">Union</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode115() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12776), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12776), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12776), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12776), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12775), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificates</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode116() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12778), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12778), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12778), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12777), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificates</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode117() {
        SamplingIntervalDiagnosticsTypeNode node = new SamplingIntervalDiagnosticsTypeNode(this.context, new NodeId(0, 12779), new QualifiedName(0, "SamplingIntervalDiagnostics"), new LocalizedText("en", "SamplingIntervalDiagnostics"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 856), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12779), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12780), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12779), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12781), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12779), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12782), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12779), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12783), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12779), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2165), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12779), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(83), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12779), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2164), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode118() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12780), new QualifiedName(0, "SamplingInterval"), new LocalizedText("en", "SamplingInterval"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12780), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12780), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12780), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12779), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode119() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12781), new QualifiedName(0, "SampledMonitoredItemsCount"), new LocalizedText("en", "SampledMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12781), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12781), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12781), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12779), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode120() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12782), new QualifiedName(0, "MaxSampledMonitoredItemsCount"), new LocalizedText("en", "MaxSampledMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12782), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12782), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12782), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12779), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode121() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12783), new QualifiedName(0, "DisabledMonitoredItemsSamplingCount"), new LocalizedText("en", "DisabledMonitoredItemsSamplingCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12783), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12783), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12783), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12779), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode122() {
        SubscriptionDiagnosticsTypeNode node = new SubscriptionDiagnosticsTypeNode(this.context, new NodeId(0, 12784), new QualifiedName(0, "SubscriptionDiagnostics"), new LocalizedText("en", "SubscriptionDiagnostics"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 874), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12785), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12786), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12787), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12788), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12789), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12790), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12791), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12792), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12793), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12794), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12795), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12796), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12797), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12798), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12799), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12800), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12801), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12802), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12803), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12804), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12805), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12806), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12807), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12808), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12809), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12810), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12811), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12812), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12813), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12814), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12815), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(83), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12784), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2171), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode123() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12785), new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12785), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12785), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12785), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode124() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12786), new QualifiedName(0, "SubscriptionId"), new LocalizedText("en", "SubscriptionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12786), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12786), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12786), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode125() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12787), new QualifiedName(0, "Priority"), new LocalizedText("en", "Priority"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 3), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12787), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12787), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12787), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode126() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12788), new QualifiedName(0, "PublishingInterval"), new LocalizedText("en", "PublishingInterval"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 11), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12788), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12788), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12788), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode127() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12789), new QualifiedName(0, "MaxKeepAliveCount"), new LocalizedText("en", "MaxKeepAliveCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12789), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12789), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12789), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode128() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12790), new QualifiedName(0, "MaxLifetimeCount"), new LocalizedText("en", "MaxLifetimeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12790), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12790), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12790), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode129() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12791), new QualifiedName(0, "MaxNotificationsPerPublish"), new LocalizedText("en", "MaxNotificationsPerPublish"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12791), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12791), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12791), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode130() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12792), new QualifiedName(0, "PublishingEnabled"), new LocalizedText("en", "PublishingEnabled"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12792), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12792), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12792), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode131() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12793), new QualifiedName(0, "ModifyCount"), new LocalizedText("en", "ModifyCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12793), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12793), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12793), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode132() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12794), new QualifiedName(0, "EnableCount"), new LocalizedText("en", "EnableCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12794), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12794), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12794), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode133() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12795), new QualifiedName(0, "DisableCount"), new LocalizedText("en", "DisableCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12795), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12795), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12795), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode134() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12796), new QualifiedName(0, "RepublishRequestCount"), new LocalizedText("en", "RepublishRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12796), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12796), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12796), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode135() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12797), new QualifiedName(0, "RepublishMessageRequestCount"), new LocalizedText("en", "RepublishMessageRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12797), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12797), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12797), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode136() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12798), new QualifiedName(0, "RepublishMessageCount"), new LocalizedText("en", "RepublishMessageCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12798), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12798), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12798), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode137() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8702), new QualifiedName(0, "MonitoringFilter"), new LocalizedText("en", "MonitoringFilter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8702), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8702), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='MonitoringFilter']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode138() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12799), new QualifiedName(0, "TransferRequestCount"), new LocalizedText("en", "TransferRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12799), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12799), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12799), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode139() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12800), new QualifiedName(0, "TransferredToAltClientCount"), new LocalizedText("en", "TransferredToAltClientCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12800), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12800), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12800), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode140() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12801), new QualifiedName(0, "TransferredToSameClientCount"), new LocalizedText("en", "TransferredToSameClientCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12801), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12801), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12801), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode141() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12802), new QualifiedName(0, "PublishRequestCount"), new LocalizedText("en", "PublishRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12802), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12802), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12802), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode142() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12803), new QualifiedName(0, "DataChangeNotificationsCount"), new LocalizedText("en", "DataChangeNotificationsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12803), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12803), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12803), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode143() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12804), new QualifiedName(0, "EventNotificationsCount"), new LocalizedText("en", "EventNotificationsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12804), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12804), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12804), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode144() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8708), new QualifiedName(0, "EventFilter"), new LocalizedText("en", "EventFilter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8708), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8708), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='EventFilter']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode145() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12805), new QualifiedName(0, "NotificationsCount"), new LocalizedText("en", "NotificationsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12805), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12805), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12805), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode146() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12806), new QualifiedName(0, "LatePublishRequestCount"), new LocalizedText("en", "LatePublishRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12806), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12806), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12806), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode147() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12807), new QualifiedName(0, "CurrentKeepAliveCount"), new LocalizedText("en", "CurrentKeepAliveCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12807), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12807), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12807), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode148() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8711), new QualifiedName(0, "AggregateConfiguration"), new LocalizedText("en", "AggregateConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8711), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8711), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='AggregateConfiguration']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode149() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12808), new QualifiedName(0, "CurrentLifetimeCount"), new LocalizedText("en", "CurrentLifetimeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12808), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12808), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12808), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode150() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12809), new QualifiedName(0, "UnacknowledgedMessageCount"), new LocalizedText("en", "UnacknowledgedMessageCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12809), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12809), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12809), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode151() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12810), new QualifiedName(0, "DiscardedMessageCount"), new LocalizedText("en", "DiscardedMessageCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12810), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12810), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12810), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode152() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12811), new QualifiedName(0, "MonitoredItemCount"), new LocalizedText("en", "MonitoredItemCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12811), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12811), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12811), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode153() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12812), new QualifiedName(0, "DisabledMonitoredItemCount"), new LocalizedText("en", "DisabledMonitoredItemCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12812), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12812), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12812), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode154() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12813), new QualifiedName(0, "MonitoringQueueOverflowCount"), new LocalizedText("en", "MonitoringQueueOverflowCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12813), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12813), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12813), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode155() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12814), new QualifiedName(0, "NextSequenceNumber"), new LocalizedText("en", "NextSequenceNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12814), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12814), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12814), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode156() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12815), new QualifiedName(0, "EventQueueOverFlowCount"), new LocalizedText("en", "EventQueueOverFlowCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12815), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12815), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12815), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12784), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode157() {
        SessionDiagnosticsVariableTypeNode node = new SessionDiagnosticsVariableTypeNode(this.context, new NodeId(0, 12816), new QualifiedName(0, "SessionDiagnostics"), new LocalizedText("en", "SessionDiagnostics"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 865), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12817), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12818), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12819), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12820), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12821), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12822), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12823), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12824), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12825), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12826), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12827), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12828), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12829), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12830), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12831), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12832), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12833), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12834), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12835), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12836), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12837), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12838), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12839), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12840), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12841), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12842), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12843), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12844), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12845), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12846), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12847), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12848), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12849), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12850), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12851), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12852), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12853), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12854), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12855), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12856), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12857), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12858), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12859), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(83), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12816), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2196), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode158() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12817), new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12817), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12817), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12817), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode159() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12818), new QualifiedName(0, "SessionName"), new LocalizedText("en", "SessionName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12818), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12818), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12818), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode160() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12819), new QualifiedName(0, "ClientDescription"), new LocalizedText("en", "ClientDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 308), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12819), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12819), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12819), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode161() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12820), new QualifiedName(0, "ServerUri"), new LocalizedText("en", "ServerUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12820), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12820), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12820), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode162() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12821), new QualifiedName(0, "EndpointUrl"), new LocalizedText("en", "EndpointUrl"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12821), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12821), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12821), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode163() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12822), new QualifiedName(0, "LocaleIds"), new LocalizedText("en", "LocaleIds"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 295), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12822), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12822), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12822), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode164() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12823), new QualifiedName(0, "ActualSessionTimeout"), new LocalizedText("en", "ActualSessionTimeout"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12823), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12823), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12823), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode165() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12824), new QualifiedName(0, "MaxResponseMessageSize"), new LocalizedText("en", "MaxResponseMessageSize"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12824), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12824), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12824), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode166() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12825), new QualifiedName(0, "ClientConnectionTime"), new LocalizedText("en", "ClientConnectionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12825), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12825), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12825), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode167() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12826), new QualifiedName(0, "ClientLastContactTime"), new LocalizedText("en", "ClientLastContactTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12826), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12826), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12826), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode168() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12827), new QualifiedName(0, "CurrentSubscriptionsCount"), new LocalizedText("en", "CurrentSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12827), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12827), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12827), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode169() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12828), new QualifiedName(0, "CurrentMonitoredItemsCount"), new LocalizedText("en", "CurrentMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12828), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12828), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12828), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode170() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12829), new QualifiedName(0, "CurrentPublishRequestsInQueue"), new LocalizedText("en", "CurrentPublishRequestsInQueue"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12829), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12829), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12829), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode171() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12830), new QualifiedName(0, "TotalRequestCount"), new LocalizedText("en", "TotalRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12830), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12830), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12830), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode172() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12831), new QualifiedName(0, "UnauthorizedRequestCount"), new LocalizedText("en", "UnauthorizedRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12831), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12831), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12831), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode173() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12832), new QualifiedName(0, "ReadCount"), new LocalizedText("en", "ReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12832), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12832), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12832), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode174() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12833), new QualifiedName(0, "HistoryReadCount"), new LocalizedText("en", "HistoryReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12833), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12833), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12833), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode175() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12834), new QualifiedName(0, "WriteCount"), new LocalizedText("en", "WriteCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12834), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12834), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12834), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode176() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12835), new QualifiedName(0, "HistoryUpdateCount"), new LocalizedText("en", "HistoryUpdateCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12835), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12835), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12835), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode177() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12836), new QualifiedName(0, "CallCount"), new LocalizedText("en", "CallCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12836), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12836), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12836), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode178() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12837), new QualifiedName(0, "CreateMonitoredItemsCount"), new LocalizedText("en", "CreateMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12837), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12837), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12837), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode179() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12838), new QualifiedName(0, "ModifyMonitoredItemsCount"), new LocalizedText("en", "ModifyMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12838), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12838), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12838), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode180() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12839), new QualifiedName(0, "SetMonitoringModeCount"), new LocalizedText("en", "SetMonitoringModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12839), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12839), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12839), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode181() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12840), new QualifiedName(0, "SetTriggeringCount"), new LocalizedText("en", "SetTriggeringCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12840), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12840), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12840), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode182() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12841), new QualifiedName(0, "DeleteMonitoredItemsCount"), new LocalizedText("en", "DeleteMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12841), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12841), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12841), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode183() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12842), new QualifiedName(0, "CreateSubscriptionCount"), new LocalizedText("en", "CreateSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12842), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12842), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12842), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode184() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12843), new QualifiedName(0, "ModifySubscriptionCount"), new LocalizedText("en", "ModifySubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12843), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12843), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12843), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode185() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12844), new QualifiedName(0, "SetPublishingModeCount"), new LocalizedText("en", "SetPublishingModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12844), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12844), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12844), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode186() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12845), new QualifiedName(0, "PublishCount"), new LocalizedText("en", "PublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12845), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12845), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12845), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode187() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12846), new QualifiedName(0, "RepublishCount"), new LocalizedText("en", "RepublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12846), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12846), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12846), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode188() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12847), new QualifiedName(0, "TransferSubscriptionsCount"), new LocalizedText("en", "TransferSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12847), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12847), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12847), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode189() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12848), new QualifiedName(0, "DeleteSubscriptionsCount"), new LocalizedText("en", "DeleteSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12848), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12848), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12848), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode190() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12849), new QualifiedName(0, "AddNodesCount"), new LocalizedText("en", "AddNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12849), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12849), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12849), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode191() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12850), new QualifiedName(0, "AddReferencesCount"), new LocalizedText("en", "AddReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12850), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12850), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12850), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode192() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12851), new QualifiedName(0, "DeleteNodesCount"), new LocalizedText("en", "DeleteNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12851), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12851), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12851), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode193() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12852), new QualifiedName(0, "DeleteReferencesCount"), new LocalizedText("en", "DeleteReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12852), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12852), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12852), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode194() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12853), new QualifiedName(0, "BrowseCount"), new LocalizedText("en", "BrowseCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12853), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12853), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12853), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode195() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12854), new QualifiedName(0, "BrowseNextCount"), new LocalizedText("en", "BrowseNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12854), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12854), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12854), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode196() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12855), new QualifiedName(0, "TranslateBrowsePathsToNodeIdsCount"), new LocalizedText("en", "TranslateBrowsePathsToNodeIdsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12855), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12855), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12855), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode197() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12856), new QualifiedName(0, "QueryFirstCount"), new LocalizedText("en", "QueryFirstCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12856), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12856), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12856), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode198() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12857), new QualifiedName(0, "QueryNextCount"), new LocalizedText("en", "QueryNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12857), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12857), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12857), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode199() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12858), new QualifiedName(0, "RegisterNodesCount"), new LocalizedText("en", "RegisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12858), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12858), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12858), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode200() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12859), new QualifiedName(0, "UnregisterNodesCount"), new LocalizedText("en", "UnregisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12859), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12859), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12859), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12816), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode201() {
        SessionSecurityDiagnosticsTypeNode node = new SessionSecurityDiagnosticsTypeNode(this.context, new NodeId(0, 12860), new QualifiedName(0, "SessionSecurityDiagnostics"), new LocalizedText("en", "SessionSecurityDiagnostics"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 868), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12860), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12861), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12860), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12862), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12860), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12863), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12860), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12864), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12860), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12865), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12860), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12866), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12860), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12867), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12860), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12868), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12860), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12869), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12860), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2244), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12860), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(83), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12860), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2243), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode202() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12861), new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12861), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12861), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12861), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12860), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode203() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12862), new QualifiedName(0, "ClientUserIdOfSession"), new LocalizedText("en", "ClientUserIdOfSession"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12862), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12862), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12862), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12860), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode204() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12863), new QualifiedName(0, "ClientUserIdHistory"), new LocalizedText("en", "ClientUserIdHistory"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12863), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12863), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12863), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12860), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode205() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12864), new QualifiedName(0, "AuthenticationMechanism"), new LocalizedText("en", "AuthenticationMechanism"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12864), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12864), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12864), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12860), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode206() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12865), new QualifiedName(0, "Encoding"), new LocalizedText("en", "Encoding"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12865), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12865), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12865), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12860), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode207() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12866), new QualifiedName(0, "TransportProtocol"), new LocalizedText("en", "TransportProtocol"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12866), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12866), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12866), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12860), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode208() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12867), new QualifiedName(0, "SecurityMode"), new LocalizedText("en", "SecurityMode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 302), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12867), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12867), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12867), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12860), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode209() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12868), new QualifiedName(0, "SecurityPolicyUri"), new LocalizedText("en", "SecurityPolicyUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12868), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12868), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12868), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12860), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode210() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12869), new QualifiedName(0, "ClientCertificate"), new LocalizedText("en", "ClientCertificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12869), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12869), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12869), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12860), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode211() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12872), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12872), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12872), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12872), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12871), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode212() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12874), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12874), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12874), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12873), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode213() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12882), new QualifiedName(0, "EstimatedReturnTime"), new LocalizedText("en", "EstimatedReturnTime"), new LocalizedText("en", "Indicates the time at which the Server is expected to be available in the state RUNNING."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 13), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 12882), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12882), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12882), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2004), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode214() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12884), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12884), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12884), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12884), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12883), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>State</Name><DataType><Identifier>i=852</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>EstimatedReturnTime</Name><DataType><Identifier>i=13</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SecondsTillShutdown</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Reason</Name><DataType><Identifier>i=21</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Restart</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode215() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12885), new QualifiedName(0, "EstimatedReturnTime"), new LocalizedText("en", "EstimatedReturnTime"), new LocalizedText("en", "Indicates the time at which the Server is expected to be available in the state RUNNING."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 13), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 12885), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12885), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2253), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode216() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12887), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12887), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12887), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12886), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>State</Name><DataType><Identifier>i=852</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>EstimatedReturnTime</Name><DataType><Identifier>i=13</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SecondsTillShutdown</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Reason</Name><DataType><Identifier>i=21</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Restart</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode217() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12894), new QualifiedName(0, "DiscoveryConfiguration"), new LocalizedText("en", "DiscoveryConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12894), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12894), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='DiscoveryConfiguration']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode218() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12897), new QualifiedName(0, "MdnsDiscoveryConfiguration"), new LocalizedText("en", "MdnsDiscoveryConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12897), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12897), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='MdnsDiscoveryConfiguration']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode219() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12902), new QualifiedName(0, "DiscoveryConfiguration"), new LocalizedText("en", "DiscoveryConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12902), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12902), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">DiscoveryConfiguration</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode220() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8807), new QualifiedName(0, "HistoryEventFieldList"), new LocalizedText("en", "HistoryEventFieldList"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8807), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8807), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='HistoryEventFieldList']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode221() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12905), new QualifiedName(0, "MdnsDiscoveryConfiguration"), new LocalizedText("en", "MdnsDiscoveryConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12905), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12905), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">MdnsDiscoveryConfiguration</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode222() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12908), new QualifiedName(0, "MaxByteStringLength"), new LocalizedText("en", "MaxByteStringLength"), new LocalizedText("en", "The maximum length for a byte string that can be stored in the owning variable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12908), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode223() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12910), new QualifiedName(0, "MaxByteStringLength"), new LocalizedText("en", "MaxByteStringLength"), new LocalizedText("en", "The maximum length for a byte string value supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12910), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12910), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12910), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2013), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode224() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12911), new QualifiedName(0, "MaxByteStringLength"), new LocalizedText("en", "MaxByteStringLength"), new LocalizedText("en", "The maximum length for a byte string value supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12911), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12911), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2268), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode225() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12913), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12913), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12913), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12913), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12912), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=288</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The identifier for the suscription to refresh.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>MonitoredItemId</Name><DataType><Identifier>i=288</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The identifier for the monitored item to refresh.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode226() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8843), new QualifiedName(0, "RedundantServerDataType"), new LocalizedText("en", "RedundantServerDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8843), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8843), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='RedundantServerDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode227() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8846), new QualifiedName(0, "SamplingIntervalDiagnosticsDataType"), new LocalizedText("en", "SamplingIntervalDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8846), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8846), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='SamplingIntervalDiagnosticsDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode228() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8849), new QualifiedName(0, "ServerDiagnosticsSummaryDataType"), new LocalizedText("en", "ServerDiagnosticsSummaryDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8849), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8849), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='ServerDiagnosticsSummaryDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode229() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8852), new QualifiedName(0, "ServerStatusDataType"), new LocalizedText("en", "ServerStatusDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8852), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8852), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='ServerStatusDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode230() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8855), new QualifiedName(0, "SessionDiagnosticsDataType"), new LocalizedText("en", "SessionDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8855), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8855), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='SessionDiagnosticsDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode231() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8858), new QualifiedName(0, "SessionSecurityDiagnosticsDataType"), new LocalizedText("en", "SessionSecurityDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8858), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8858), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='SessionSecurityDiagnosticsDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode232() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8861), new QualifiedName(0, "ServiceCounterDataType"), new LocalizedText("en", "ServiceCounterDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8861), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8861), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='ServiceCounterDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode233() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8864), new QualifiedName(0, "SubscriptionDiagnosticsDataType"), new LocalizedText("en", "SubscriptionDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8864), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8864), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='SubscriptionDiagnosticsDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode234() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8867), new QualifiedName(0, "ModelChangeStructureDataType"), new LocalizedText("en", "ModelChangeStructureDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8867), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8867), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='ModelChangeStructureDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode235() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8870), new QualifiedName(0, "SemanticChangeStructureDataType"), new LocalizedText("en", "SemanticChangeStructureDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8870), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8870), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='SemanticChangeStructureDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode236() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8873), new QualifiedName(0, "Range"), new LocalizedText("en", "Range"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8873), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8873), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='Range']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode237() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8876), new QualifiedName(0, "EUInformation"), new LocalizedText("en", "EUInformation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8876), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8876), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='EUInformation']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode238() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8879), new QualifiedName(0, "Annotation"), new LocalizedText("en", "Annotation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8879), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8879), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='Annotation']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode239() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8882), new QualifiedName(0, "ProgramDiagnosticDataType"), new LocalizedText("en", "ProgramDiagnosticDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8882), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8882), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='ProgramDiagnosticDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode240() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 8888), new QualifiedName(0, "MaxLifetimeCount"), new LocalizedText("en", "MaxLifetimeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8888), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8888), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8888), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode241() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 8889), new QualifiedName(0, "LatePublishRequestCount"), new LocalizedText("en", "LatePublishRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8889), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8889), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8889), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode242() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 8890), new QualifiedName(0, "CurrentKeepAliveCount"), new LocalizedText("en", "CurrentKeepAliveCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8890), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8890), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8890), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode243() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 8891), new QualifiedName(0, "CurrentLifetimeCount"), new LocalizedText("en", "CurrentLifetimeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8891), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8891), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8891), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode244() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 8892), new QualifiedName(0, "UnacknowledgedMessageCount"), new LocalizedText("en", "UnacknowledgedMessageCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8892), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8892), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8892), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode245() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 8893), new QualifiedName(0, "DiscardedMessageCount"), new LocalizedText("en", "DiscardedMessageCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8893), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8893), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8893), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode246() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 8894), new QualifiedName(0, "MonitoredItemCount"), new LocalizedText("en", "MonitoredItemCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8894), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8894), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8894), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode247() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 8895), new QualifiedName(0, "DisabledMonitoredItemCount"), new LocalizedText("en", "DisabledMonitoredItemCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8895), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8895), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8895), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode248() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 8896), new QualifiedName(0, "MonitoringQueueOverflowCount"), new LocalizedText("en", "MonitoringQueueOverflowCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8896), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8896), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8896), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode249() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 8897), new QualifiedName(0, "NextSequenceNumber"), new LocalizedText("en", "NextSequenceNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8897), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8897), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8897), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode250() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 8898), new QualifiedName(0, "TotalRequestCount"), new LocalizedText("en", "TotalRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8898), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8898), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8898), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode251() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 8900), new QualifiedName(0, "TotalRequestCount"), new LocalizedText("en", "TotalRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8900), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8900), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8900), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode252() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 8902), new QualifiedName(0, "EventQueueOverFlowCount"), new LocalizedText("en", "EventQueueOverFlowCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8902), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8902), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8902), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode253() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8914), new QualifiedName(0, "TimeZoneDataType"), new LocalizedText("en", "TimeZoneDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8914), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8914), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">TimeZoneDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode254() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8918), new QualifiedName(0, "TimeZoneDataType"), new LocalizedText("en", "TimeZoneDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8918), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8918), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='TimeZoneDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode255() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 8945), new QualifiedName(0, "EventId"), new LocalizedText("en", "EventId"), new LocalizedText("en", "A globally unique identifier for the event."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8945), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8945), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8945), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8944), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode256() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 8962), new QualifiedName(0, "EventId"), new LocalizedText("en", "EventId"), new LocalizedText("en", "A globally unique identifier for the event."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8962), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8962), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8962), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8961), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode257() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 8996), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8996), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8996), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8996), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode258() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9000), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9000), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9000), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9000), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode259() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9001), new QualifiedName(0, "EffectiveTransitionTime"), new LocalizedText("en", "EffectiveTransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9001), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9001), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9001), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode260() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9003), new QualifiedName(0, "SourceTimestamp"), new LocalizedText("en", "SourceTimestamp"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9003), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9003), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9003), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9002), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode261() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9009), new QualifiedName(0, "ConditionName"), new LocalizedText("en", "ConditionName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9009), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9009), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9009), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2782), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode262() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9010), new QualifiedName(0, "BranchId"), new LocalizedText("en", "BranchId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9010), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9010), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9010), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2782), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode263() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 9011), new QualifiedName(0, "EnabledState"), new LocalizedText("en", "EnabledState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9011), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9012), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9011), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9015), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9011), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9016), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9011), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9017), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9011), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9011), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9011), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2782), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode264() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9012), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9012), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9012), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9012), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9011), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode265() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9015), new QualifiedName(0, "EffectiveDisplayName"), new LocalizedText("en", "EffectiveDisplayName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9015), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9015), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9015), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9011), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode266() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9016), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9016), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9016), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9016), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9011), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode267() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9017), new QualifiedName(0, "EffectiveTransitionTime"), new LocalizedText("en", "EffectiveTransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9017), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9017), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9017), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9011), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode268() {
        ConditionVariableTypeNode node = new ConditionVariableTypeNode(this.context, new NodeId(0, 9020), new QualifiedName(0, "Quality"), new LocalizedText("en", "Quality"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 19), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9020), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9021), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9020), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9002), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9020), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9020), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2782), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode269() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9021), new QualifiedName(0, "SourceTimestamp"), new LocalizedText("en", "SourceTimestamp"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9021), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9021), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9021), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9020), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode270() {
        ConditionVariableTypeNode node = new ConditionVariableTypeNode(this.context, new NodeId(0, 9022), new QualifiedName(0, "LastSeverity"), new LocalizedText("en", "LastSeverity"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9022), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9023), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9022), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9002), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9022), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9022), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2782), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode271() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9023), new QualifiedName(0, "SourceTimestamp"), new LocalizedText("en", "SourceTimestamp"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9023), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9023), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9023), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9022), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode272() {
        ConditionVariableTypeNode node = new ConditionVariableTypeNode(this.context, new NodeId(0, 9024), new QualifiedName(0, "Comment"), new LocalizedText("en", "Comment"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9024), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9025), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9024), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9002), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9024), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9024), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2782), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode273() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9025), new QualifiedName(0, "SourceTimestamp"), new LocalizedText("en", "SourceTimestamp"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9025), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9025), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9025), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9024), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode274() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9026), new QualifiedName(0, "ClientUserId"), new LocalizedText("en", "ClientUserId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9026), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9026), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9026), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2782), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode275() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9030), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9030), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9030), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9030), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9029), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>EventId</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The identifier for the event to comment.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Comment</Name><DataType><Identifier>i=21</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The comment to add to the condition.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode276() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 9035), new QualifiedName(0, "EnabledState"), new LocalizedText("en", "EnabledState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9035), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9036), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9035), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9055), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9035), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9035), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9035), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2830), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode277() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9036), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9036), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9036), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9036), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9035), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode278() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 9055), new QualifiedName(0, "DialogState"), new LocalizedText("en", "DialogState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9055), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9056), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9055), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9060), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9055), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9035), UInteger.valueOf(0)), false));
        node.addReference(new Reference(new NodeId(0, 9055), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9055), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9055), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2830), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode279() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9056), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9056), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9056), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9056), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9055), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode280() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9060), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9060), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9060), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9060), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9055), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode281() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9064), new QualifiedName(0, "ResponseOptionSet"), new LocalizedText("en", "ResponseOptionSet"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9064), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9064), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9064), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2830), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode282() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9065), new QualifiedName(0, "DefaultResponse"), new LocalizedText("en", "DefaultResponse"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 6), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9065), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9065), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9065), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2830), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode283() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9066), new QualifiedName(0, "OkResponse"), new LocalizedText("en", "OkResponse"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 6), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9066), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9066), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9066), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2830), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode284() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9067), new QualifiedName(0, "CancelResponse"), new LocalizedText("en", "CancelResponse"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 6), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9067), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9067), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9067), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2830), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode285() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9068), new QualifiedName(0, "LastResponse"), new LocalizedText("en", "LastResponse"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 6), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9068), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9068), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9068), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2830), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode286() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9070), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9070), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9070), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9070), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9069), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SelectedResponse</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The response to the dialog condition.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode287() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 9073), new QualifiedName(0, "EnabledState"), new LocalizedText("en", "EnabledState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9073), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9074), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9073), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9093), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9073), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9102), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9073), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9073), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9073), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2881), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode288() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9074), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9074), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9074), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9074), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9073), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode289() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 9093), new QualifiedName(0, "AckedState"), new LocalizedText("en", "AckedState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9093), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9094), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9093), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9098), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9093), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9073), UInteger.valueOf(0)), false));
        node.addReference(new Reference(new NodeId(0, 9093), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9093), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9093), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2881), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode290() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9094), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9094), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9094), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9094), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9093), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode291() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9098), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9098), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9098), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9098), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9093), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode292() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 9102), new QualifiedName(0, "ConfirmedState"), new LocalizedText("en", "ConfirmedState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9102), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9103), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9102), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9107), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9102), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9073), UInteger.valueOf(0)), false));
        node.addReference(new Reference(new NodeId(0, 9102), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9102), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9102), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2881), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode293() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9103), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9103), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9103), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9103), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9102), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode294() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9107), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9107), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9107), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9107), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9102), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode295() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9112), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9112), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9112), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9112), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9111), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>EventId</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The identifier for the event to comment.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Comment</Name><DataType><Identifier>i=21</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The comment to add to the condition.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode296() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9114), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9114), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9114), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9114), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9113), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>EventId</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The identifier for the event to comment.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Comment</Name><DataType><Identifier>i=21</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The comment to add to the condition.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode297() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9115), new QualifiedName(0, "UnshelveTime"), new LocalizedText("en", "UnshelveTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9115), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9115), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9115), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2929), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode298() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 9118), new QualifiedName(0, "EnabledState"), new LocalizedText("en", "EnabledState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9118), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9119), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9118), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9160), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9118), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9169), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9118), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9178), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9118), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9118), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9118), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2915), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode299() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9119), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9119), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9119), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9119), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9118), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode300() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 9160), new QualifiedName(0, "ActiveState"), new LocalizedText("en", "ActiveState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9160), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9161), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9160), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9164), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9160), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9165), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9160), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9166), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9160), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9118), UInteger.valueOf(0)), false));
        node.addReference(new Reference(new NodeId(0, 9160), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9160), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9160), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2915), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode301() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9161), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9161), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9161), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9161), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9160), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode302() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9164), new QualifiedName(0, "EffectiveDisplayName"), new LocalizedText("en", "EffectiveDisplayName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9164), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9164), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9164), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9160), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode303() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9165), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9165), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9165), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9165), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9160), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode304() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9166), new QualifiedName(0, "EffectiveTransitionTime"), new LocalizedText("en", "EffectiveTransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9166), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9166), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9166), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9160), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode305() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 9169), new QualifiedName(0, "SuppressedState"), new LocalizedText("en", "SuppressedState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9169), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9170), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9169), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9174), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9169), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9118), UInteger.valueOf(0)), false));
        node.addReference(new Reference(new NodeId(0, 9169), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9169), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9169), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2915), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode306() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9170), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9170), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9170), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9170), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9169), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode307() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9174), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9174), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9174), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9174), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9169), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode308() {
        FiniteStateVariableTypeNode node = new FiniteStateVariableTypeNode(this.context, new NodeId(0, 9179), new QualifiedName(0, "CurrentState"), new LocalizedText("en", "CurrentState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9179), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9180), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9179), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2760), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9179), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9179), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9178), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode309() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9180), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9180), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9180), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9180), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9179), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode310() {
        FiniteTransitionVariableTypeNode node = new FiniteTransitionVariableTypeNode(this.context, new NodeId(0, 9184), new QualifiedName(0, "LastTransition"), new LocalizedText("en", "LastTransition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9184), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9185), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9184), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9188), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9184), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2767), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9184), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9184), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9178), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode311() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9185), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9185), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9185), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9185), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9184), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode312() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9188), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9188), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9188), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9188), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9184), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode313() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9189), new QualifiedName(0, "UnshelveTime"), new LocalizedText("en", "UnshelveTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9189), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9189), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9189), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9178), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode314() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9214), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9214), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9214), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9214), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9213), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ShelvingTime</Name><DataType><Identifier>i=290</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>If not 0, this parameter specifies a fixed time for which the Alarm is to be shelved.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode315() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9215), new QualifiedName(0, "SuppressedOrShelved"), new LocalizedText("en", "SuppressedOrShelved"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9215), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9215), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9215), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2915), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode316() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9216), new QualifiedName(0, "MaxTimeShelved"), new LocalizedText("en", "MaxTimeShelved"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9216), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9216), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9216), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2915), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode317() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13325), new QualifiedName(0, "ExpirationDate"), new LocalizedText("en", "ExpirationDate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 13), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13325), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13325), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13325), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13225), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode318() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13326), new QualifiedName(0, "CertificateType"), new LocalizedText("en", "CertificateType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13326), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13326), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13326), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13225), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode319() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13327), new QualifiedName(0, "Certificate"), new LocalizedText("en", "Certificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13327), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13327), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13327), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13225), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode320() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13341), new QualifiedName(0, "MimeType"), new LocalizedText("en", "MimeType"), new LocalizedText("en", "The content of the file."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13341), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13341), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13341), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11575), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode321() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13356), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13356), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13356), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13356), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13355), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>DirectoryName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode322() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13357), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13357), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13357), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13357), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13355), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>DirectoryNodeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode323() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13359), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13359), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13359), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13359), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13358), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>RequestFileOpen</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode324() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13360), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13360), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13360), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13360), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13358), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileNodeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode325() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13362), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13362), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13362), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13362), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13361), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ObjectToDelete</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode326() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13364), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13364), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13364), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13364), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13363), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ObjectToMoveOrCopy</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>TargetDirectory</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CreateCopy</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>NewName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode327() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13365), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13365), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13365), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13365), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13363), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>NewNodeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode328() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13367), new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), new LocalizedText("en", "The size of the file in bytes."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 9), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13367), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13367), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13367), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13366), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode329() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13368), new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), new LocalizedText("en", "Whether the file is writable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13368), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13368), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13368), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13366), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode330() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13369), new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), new LocalizedText("en", "Whether the file is writable by the current user."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13369), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13369), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13369), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13366), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode331() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13370), new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), new LocalizedText("en", "The current number of open file handles."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13370), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13370), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13370), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13366), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode332() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13373), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13373), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13373), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13373), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13372), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode333() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13374), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13374), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13374), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13374), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13372), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode334() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13376), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13376), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13376), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13376), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13375), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode335() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13378), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13378), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13378), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13378), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13377), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode336() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13379), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13379), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13379), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13379), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13377), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode337() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13381), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13381), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13381), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13381), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13380), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode338() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13383), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13383), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13383), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13383), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13382), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode339() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13384), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13384), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13384), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13384), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13382), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode340() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13386), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13386), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13386), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13386), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13385), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode341() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13388), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13388), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13388), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13388), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13387), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>DirectoryName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode342() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13389), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13389), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13389), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13389), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13387), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>DirectoryNodeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode343() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13391), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13391), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13391), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13391), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13390), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>RequestFileOpen</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode344() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13392), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13392), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13392), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13392), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13390), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileNodeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode345() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13394), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13394), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13394), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13394), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13393), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ObjectToDelete</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode346() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13396), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13396), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13396), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13396), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13395), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ObjectToMoveOrCopy</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>TargetDirectory</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CreateCopy</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>NewName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode347() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13397), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13397), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13397), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13397), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13395), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>NewNodeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode348() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9330), new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9330), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9330), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9330), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9329), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode349() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9332), new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9332), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9332), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9332), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9331), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode350() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9334), new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9334), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9334), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9334), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9333), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode351() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9336), new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9336), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9336), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9336), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9335), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode352() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 9398), new QualifiedName(0, "ActiveState"), new LocalizedText("en", "ActiveState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9398), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9399), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9398), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9455), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9398), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9398), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9398), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9341), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode353() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9399), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9399), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9399), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9399), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9398), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode354() {
        FiniteStateVariableTypeNode node = new FiniteStateVariableTypeNode(this.context, new NodeId(0, 9456), new QualifiedName(0, "CurrentState"), new LocalizedText("en", "CurrentState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9456), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9457), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9456), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2760), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9456), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9456), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9455), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode355() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9457), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9457), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9457), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9457), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9456), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode356() {
        FiniteTransitionVariableTypeNode node = new FiniteTransitionVariableTypeNode(this.context, new NodeId(0, 9461), new QualifiedName(0, "LastTransition"), new LocalizedText("en", "LastTransition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9461), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9462), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9461), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9465), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9461), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2767), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9461), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9461), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9455), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode357() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9462), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9462), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9462), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9462), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9461), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode358() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9465), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9465), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9465), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9465), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9461), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode359() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13600), new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), new LocalizedText("en", "The size of the file in bytes."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 9), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13600), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13600), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13600), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13599), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode360() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13601), new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), new LocalizedText("en", "Whether the file is writable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13601), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13601), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13601), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13599), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode361() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13602), new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), new LocalizedText("en", "Whether the file is writable by the current user."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13602), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13602), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13602), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13599), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode362() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13603), new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), new LocalizedText("en", "The current number of open file handles."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13603), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13603), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13603), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13599), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode363() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13606), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13606), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13606), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13606), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13605), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode364() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13607), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13607), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13607), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13607), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13605), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode365() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13609), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13609), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13609), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13609), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13608), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode366() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13611), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13611), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13611), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13611), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13610), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode367() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13612), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13612), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13612), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13612), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13610), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode368() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13614), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13614), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13614), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13614), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13613), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode369() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13616), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13616), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13616), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13616), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13615), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode370() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13617), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13617), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13617), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13617), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13615), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode371() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13619), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13619), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13619), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13619), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13618), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode372() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13620), new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13620), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13620), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13620), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13599), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode373() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13622), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13622), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13622), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13622), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13621), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode374() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13623), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13623), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13623), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13623), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13621), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode375() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13631), new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13631), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13631), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13631), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12555), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode376() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13735), new QualifiedName(0, "CertificateGroup"), new LocalizedText("en", "CertificateGroup"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13735), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13735), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13735), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12620), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode377() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13736), new QualifiedName(0, "CertificateType"), new LocalizedText("en", "CertificateType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13736), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13736), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13736), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12620), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode378() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13738), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13738), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13738), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13737), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateGroupId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateTypeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificate</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IssuerCertificates</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>PrivateKeyFormat</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>PrivateKey</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode379() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13739), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13739), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13739), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13737), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ApplyChangesRequired</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode380() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13816), new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), new LocalizedText("en", "The size of the file in bytes."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 9), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13816), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13816), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13816), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13815), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode381() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13817), new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), new LocalizedText("en", "Whether the file is writable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13817), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13817), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13817), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13815), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode382() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13818), new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), new LocalizedText("en", "Whether the file is writable by the current user."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13818), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13818), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13818), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13815), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode383() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13819), new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), new LocalizedText("en", "The current number of open file handles."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13819), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13819), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13819), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13815), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode384() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13822), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13822), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13822), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13822), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13821), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode385() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13823), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13823), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13823), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13823), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13821), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode386() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13825), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13825), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13825), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13825), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13824), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode387() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13827), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13827), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13827), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13827), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13826), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode388() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13828), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13828), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13828), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13828), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13826), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode389() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13830), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13830), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13830), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13830), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13829), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode390() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13832), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13832), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13832), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13832), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13831), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode391() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13833), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13833), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13833), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13833), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13831), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode392() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13835), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13835), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13835), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13835), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13834), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode393() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13836), new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13836), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13836), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13836), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13815), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode394() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13838), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13838), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13838), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13838), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13837), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode395() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13839), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13839), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13839), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13839), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13837), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode396() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13847), new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13847), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13847), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13847), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13814), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode397() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13850), new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), new LocalizedText("en", "The size of the file in bytes."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 9), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13850), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13850), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13850), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13849), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode398() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13851), new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), new LocalizedText("en", "Whether the file is writable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13851), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13851), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13851), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13849), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode399() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13852), new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), new LocalizedText("en", "Whether the file is writable by the current user."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13852), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13852), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13852), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13849), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode400() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13853), new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), new LocalizedText("en", "The current number of open file handles."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13853), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13853), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13853), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13849), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode401() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13856), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13856), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13856), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13856), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13855), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode402() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13857), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13857), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13857), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13857), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13855), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode403() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13859), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13859), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13859), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13859), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13858), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode404() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13861), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13861), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13861), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13861), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13860), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode405() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13862), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13862), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13862), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13862), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13860), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode406() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13864), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13864), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13864), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13864), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13863), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode407() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13866), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13866), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13866), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13866), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13865), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode408() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13867), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13867), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13867), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13867), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13865), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode409() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13869), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13869), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13869), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13869), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13868), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode410() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13870), new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13870), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13870), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13870), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13849), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode411() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13872), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13872), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13872), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13872), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13871), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode412() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13873), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13873), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13873), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13873), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13871), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode413() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13881), new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13881), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13881), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13881), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13848), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode414() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13884), new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), new LocalizedText("en", "The size of the file in bytes."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 9), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13884), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13884), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13884), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13883), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode415() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13885), new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), new LocalizedText("en", "Whether the file is writable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13885), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13885), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13885), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13883), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode416() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13886), new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), new LocalizedText("en", "Whether the file is writable by the current user."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13886), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13886), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13886), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13883), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode417() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13887), new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), new LocalizedText("en", "The current number of open file handles."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13887), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13887), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13887), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13883), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode418() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13890), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13890), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13890), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13890), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13889), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode419() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13891), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13891), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13891), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13891), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13889), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode420() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13893), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13893), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13893), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13893), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13892), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode421() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13895), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13895), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13895), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13895), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13894), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode422() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13896), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13896), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13896), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13896), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13894), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode423() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13898), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13898), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13898), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13898), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13897), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode424() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13900), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13900), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13900), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13900), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13899), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode425() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13901), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13901), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13901), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13901), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13899), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode426() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13903), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13903), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13903), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13903), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13902), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode427() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13904), new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13904), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13904), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13904), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13883), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode428() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13906), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13906), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13906), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13906), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13905), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode429() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13907), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13907), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13907), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13907), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13905), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode430() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13915), new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13915), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13915), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13915), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13882), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode431() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13918), new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), new LocalizedText("en", "The size of the file in bytes."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 9), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13918), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13918), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13918), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13917), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode432() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13919), new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), new LocalizedText("en", "Whether the file is writable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13919), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13919), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13919), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13917), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode433() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13920), new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), new LocalizedText("en", "Whether the file is writable by the current user."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13920), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13920), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13920), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13917), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode434() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13921), new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), new LocalizedText("en", "The current number of open file handles."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13921), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13921), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13921), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13917), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode435() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13924), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13924), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13924), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13924), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13923), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode436() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13925), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13925), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13925), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13925), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13923), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode437() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13927), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13927), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13927), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13927), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13926), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode438() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13929), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13929), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13929), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13929), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13928), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode439() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13930), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13930), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13930), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13930), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13928), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode440() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13932), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13932), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13932), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13932), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13931), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode441() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13934), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13934), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13934), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13934), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13933), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode442() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13935), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13935), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13935), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13935), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13933), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode443() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13937), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13937), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13937), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13937), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13936), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode444() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13938), new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13938), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13938), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13938), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13917), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode445() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13940), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13940), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13940), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13940), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13939), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode446() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13941), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13941), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13941), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13941), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13939), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode447() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13949), new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13949), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13949), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13949), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13916), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode448() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13953), new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), new LocalizedText("en", "The size of the file in bytes."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 9), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13953), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13953), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13953), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13952), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode449() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13954), new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), new LocalizedText("en", "Whether the file is writable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13954), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13954), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13954), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13952), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode450() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13955), new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), new LocalizedText("en", "Whether the file is writable by the current user."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13955), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13955), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13955), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13952), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode451() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13956), new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), new LocalizedText("en", "The current number of open file handles."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13956), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13956), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13956), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13952), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode452() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13959), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13959), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13959), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13959), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13958), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode453() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13960), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13960), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13960), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13960), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13958), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode454() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13962), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13962), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13962), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13962), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13961), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode455() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13964), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13964), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13964), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13964), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13963), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode456() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13965), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13965), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13965), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13965), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13963), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode457() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13967), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13967), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13967), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13967), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13966), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode458() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13969), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13969), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13969), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13969), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13968), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode459() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13970), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13970), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13970), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13970), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13968), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode460() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13972), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13972), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13972), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13972), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13971), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode461() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13973), new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13973), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13973), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13973), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13952), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode462() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13975), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13975), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13975), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13975), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13974), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode463() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13976), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13976), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13976), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13976), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13974), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode464() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 13984), new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 13984), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13984), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 13984), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13951), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode465() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9905), new QualifiedName(0, "SetpointNode"), new LocalizedText("en", "SetpointNode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9905), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9905), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9905), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9764), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode466() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 9963), new QualifiedName(0, "ActiveState"), new LocalizedText("en", "ActiveState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9963), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9964), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9963), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10020), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9963), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10029), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9963), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10038), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9963), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10047), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9963), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9963), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9963), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9906), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode467() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 9964), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 9964), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9964), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 9964), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9963), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode468() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14090), new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), new LocalizedText("en", "The size of the file in bytes."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 9), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14090), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14090), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14089), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode469() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14091), new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), new LocalizedText("en", "Whether the file is writable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14091), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14091), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14089), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode470() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14092), new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), new LocalizedText("en", "Whether the file is writable by the current user."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14092), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14092), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14089), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode471() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14093), new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), new LocalizedText("en", "The current number of open file handles."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14093), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14093), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14089), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode472() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14096), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14096), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14096), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14095), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode473() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14097), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14097), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14097), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14095), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode474() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14099), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14099), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14099), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14098), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode475() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14101), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14101), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14101), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14100), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode476() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14102), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14102), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14102), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14100), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode477() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14104), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14104), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14104), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14103), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode478() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14106), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14106), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14106), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14105), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode479() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14107), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14107), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14107), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14105), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode480() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14109), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14109), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14109), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14108), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode481() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14110), new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14110), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14110), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14089), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode482() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14112), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14112), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14112), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14111), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode483() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14113), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14113), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14113), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14111), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode484() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14115), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14115), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14115), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14114), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode485() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 10020), new QualifiedName(0, "HighHighState"), new LocalizedText("en", "HighHighState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 10020), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10021), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10020), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10025), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10020), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9963), UInteger.valueOf(0)), false));
        node.addReference(new Reference(new NodeId(0, 10020), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10020), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10020), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9906), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode486() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14116), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14116), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14116), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14114), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ApplyChangesRequired</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode487() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 10021), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 10021), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10021), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10021), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10020), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode488() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14118), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14118), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14118), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14117), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificate</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode489() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14120), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14120), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14120), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14119), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Thumbprint</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode490() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 10025), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 10025), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10025), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10025), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10020), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode491() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14121), new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14121), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14121), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14088), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode492() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14124), new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), new LocalizedText("en", "The size of the file in bytes."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 9), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14124), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14124), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14123), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode493() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 10029), new QualifiedName(0, "HighState"), new LocalizedText("en", "HighState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 10029), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10030), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10029), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10034), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10029), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9963), UInteger.valueOf(0)), false));
        node.addReference(new Reference(new NodeId(0, 10029), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10029), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10029), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9906), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode494() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14125), new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), new LocalizedText("en", "Whether the file is writable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14125), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14125), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14123), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode495() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 10030), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 10030), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10030), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10030), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10029), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode496() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14126), new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), new LocalizedText("en", "Whether the file is writable by the current user."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14126), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14126), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14123), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode497() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14127), new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), new LocalizedText("en", "The current number of open file handles."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14127), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14127), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14123), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode498() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 10034), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 10034), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10034), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10034), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10029), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode499() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14130), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14130), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14130), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14129), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode500() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14131), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14131), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14131), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14129), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode501() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14133), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14133), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14133), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14132), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode502() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 10038), new QualifiedName(0, "LowState"), new LocalizedText("en", "LowState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 10038), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10039), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10038), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10043), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10038), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9963), UInteger.valueOf(0)), false));
        node.addReference(new Reference(new NodeId(0, 10038), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10038), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10038), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9906), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode503() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 10039), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 10039), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10039), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10039), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10038), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode504() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14135), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14135), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14135), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14134), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode505() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14136), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14136), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14136), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14134), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode506() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14138), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14138), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14138), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14137), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode507() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 10043), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 10043), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10043), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10043), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10038), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode508() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14140), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14140), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14140), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14139), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode509() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14141), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14141), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14141), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14139), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode510() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, new NodeId(0, 10047), new QualifiedName(0, "LowLowState"), new LocalizedText("en", "LowLowState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 10047), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10048), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10047), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10052), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10047), new NodeId(0, 9004), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9963), UInteger.valueOf(0)), false));
        node.addReference(new Reference(new NodeId(0, 10047), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10047), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10047), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9906), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode511() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14143), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14143), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14143), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14142), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode512() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 10048), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 10048), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10048), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10048), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10047), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode513() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14144), new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14144), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14144), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14123), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode514() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14146), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14146), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14146), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14145), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode515() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14147), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14147), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14147), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14145), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode516() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 10052), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 10052), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10052), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10052), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10047), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode517() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14149), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14149), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14149), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14148), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode518() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14150), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14150), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14150), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14148), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ApplyChangesRequired</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode519() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14152), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14152), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14152), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14151), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificate</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode520() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14154), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14154), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14154), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14153), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Thumbprint</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode521() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14155), new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14155), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14155), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14122), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode522() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14157), new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), new LocalizedText("en", "Whether the file is writable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14157), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14157), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12642), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode523() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14158), new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), new LocalizedText("en", "Whether the file is writable by the current user."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14158), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14158), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12642), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode524() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14160), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14160), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14160), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12666), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode525() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14161), new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14161), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14161), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(14156), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode526() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 6098), new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 6098), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 6098), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 6098), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2930), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode527() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 6100), new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 6100), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 6100), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 6100), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2932), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode528() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2005), new QualifiedName(0, "ServerArray"), new LocalizedText("en", "ServerArray"), new LocalizedText("en", "The list of server URIs used by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2005), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2005), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2005), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2004), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode529() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 6101), new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 6101), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 6101), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 6101), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2933), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode530() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2006), new QualifiedName(0, "NamespaceArray"), new LocalizedText("en", "NamespaceArray"), new LocalizedText("en", "The list of namespace URIs used by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2006), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2006), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2006), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2004), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode531() {
        ServerStatusTypeNode node = new ServerStatusTypeNode(this.context, new NodeId(0, 2007), new QualifiedName(0, "ServerStatus"), new LocalizedText("en", "ServerStatus"), new LocalizedText("en", "The current status of the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 862), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2007), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3074), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2007), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3075), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2007), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3076), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2007), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3077), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2007), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3084), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2007), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3085), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2007), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2138), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2007), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2007), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2004), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode532() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2008), new QualifiedName(0, "ServiceLevel"), new LocalizedText("en", "ServiceLevel"), new LocalizedText("en", "A value indicating the level of service the server can provide. 255 indicates the best."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 3), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2008), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2008), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2008), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2004), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode533() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2014), new QualifiedName(0, "ServerProfileArray"), new LocalizedText("en", "ServerProfileArray"), new LocalizedText("en", "A list of profiles supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2014), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2014), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2014), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2013), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode534() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2016), new QualifiedName(0, "LocaleIdArray"), new LocalizedText("en", "LocaleIdArray"), new LocalizedText("en", "A list of locales supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 295), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2016), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2016), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2016), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2013), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode535() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2017), new QualifiedName(0, "MinSupportedSampleRate"), new LocalizedText("en", "MinSupportedSampleRate"), new LocalizedText("en", "The minimum sampling interval supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2017), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2017), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2017), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2013), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode536() {
        ServerDiagnosticsSummaryTypeNode node = new ServerDiagnosticsSummaryTypeNode(this.context, new NodeId(0, 2021), new QualifiedName(0, "ServerDiagnosticsSummary"), new LocalizedText("en", "ServerDiagnosticsSummary"), new LocalizedText("en", "A summary of server level diagnostics."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 859), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3116), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3117), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3118), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3119), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3120), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3121), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3122), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3124), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3125), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3126), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3127), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3128), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2021), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2020), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode537() {
        SamplingIntervalDiagnosticsArrayTypeNode node = new SamplingIntervalDiagnosticsArrayTypeNode(this.context, new NodeId(0, 2022), new QualifiedName(0, "SamplingIntervalDiagnosticsArray"), new LocalizedText("en", "SamplingIntervalDiagnosticsArray"), new LocalizedText("en", "A list of diagnostics for each sampling interval supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 856), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2022), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2164), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2022), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2022), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2020), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode538() {
        SubscriptionDiagnosticsArrayTypeNode node = new SubscriptionDiagnosticsArrayTypeNode(this.context, new NodeId(0, 2023), new QualifiedName(0, "SubscriptionDiagnosticsArray"), new LocalizedText("en", "SubscriptionDiagnosticsArray"), new LocalizedText("en", "A list of diagnostics for each active subscription."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 874), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2023), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2171), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2023), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2023), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2020), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode539() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2025), new QualifiedName(0, "EnabledFlag"), new LocalizedText("en", "EnabledFlag"), new LocalizedText("en", "If TRUE the diagnostics collection is enabled."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(3), UByte.valueOf(3), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2025), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2025), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2025), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2020), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode540() {
        SessionDiagnosticsArrayTypeNode node = new SessionDiagnosticsArrayTypeNode(this.context, new NodeId(0, 2027), new QualifiedName(0, "SessionDiagnosticsArray"), new LocalizedText("en", "SessionDiagnosticsArray"), new LocalizedText("en", "A list of diagnostics for each active session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 865), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2027), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2196), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2027), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2027), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2026), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode541() {
        SessionSecurityDiagnosticsArrayTypeNode node = new SessionSecurityDiagnosticsArrayTypeNode(this.context, new NodeId(0, 2028), new QualifiedName(0, "SessionSecurityDiagnosticsArray"), new LocalizedText("en", "SessionSecurityDiagnosticsArray"), new LocalizedText("en", "A list of security related diagnostics for each active session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 868), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2028), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2243), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2028), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2028), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2026), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode542() {
        SessionDiagnosticsVariableTypeNode node = new SessionDiagnosticsVariableTypeNode(this.context, new NodeId(0, 2030), new QualifiedName(0, "SessionDiagnostics"), new LocalizedText("en", "SessionDiagnostics"), new LocalizedText("en", "Diagnostics information for an active session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 865), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3131), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3132), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3133), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3134), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3135), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3136), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3137), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3138), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3139), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3140), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3141), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3142), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3143), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8898), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11891), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3151), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3152), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3153), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3154), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3155), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3156), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3157), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3158), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3159), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3160), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3161), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3162), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3163), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3164), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3165), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3166), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3167), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3168), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3169), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3170), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3171), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3172), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3173), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3174), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3175), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3176), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3177), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3178), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2030), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2029), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode543() {
        SessionSecurityDiagnosticsTypeNode node = new SessionSecurityDiagnosticsTypeNode(this.context, new NodeId(0, 2031), new QualifiedName(0, "SessionSecurityDiagnostics"), new LocalizedText("en", "SessionSecurityDiagnostics"), new LocalizedText("en", "Security related diagnostics information for an active session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 868), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2031), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3179), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2031), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3180), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2031), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3181), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2031), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3182), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2031), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3183), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2031), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3184), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2031), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3185), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2031), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3186), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2031), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3187), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2031), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2244), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2031), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2031), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2029), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode544() {
        SubscriptionDiagnosticsArrayTypeNode node = new SubscriptionDiagnosticsArrayTypeNode(this.context, new NodeId(0, 2032), new QualifiedName(0, "SubscriptionDiagnosticsArray"), new LocalizedText("en", "SubscriptionDiagnosticsArray"), new LocalizedText("en", "A list of diagnostics for each subscription owned by the session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 874), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2032), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2171), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2032), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2032), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2029), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode545() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2035), new QualifiedName(0, "RedundancySupport"), new LocalizedText("en", "RedundancySupport"), new LocalizedText("en", "Indicates what style of redundancy is supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 851), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2035), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2035), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2035), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2034), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode546() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2037), new QualifiedName(0, "CurrentServerId"), new LocalizedText("en", "CurrentServerId"), new LocalizedText("en", "The ID of the server that is currently in use."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2037), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2037), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2037), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2036), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode547() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2038), new QualifiedName(0, "RedundantServerArray"), new LocalizedText("en", "RedundantServerArray"), new LocalizedText("en", "A list of servers in the same redundant set."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 853), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2038), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2038), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2038), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2036), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode548() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2040), new QualifiedName(0, "ServerUriArray"), new LocalizedText("en", "ServerUriArray"), new LocalizedText("en", "A list of servers in the same redundant set."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2040), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2040), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2040), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2039), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode549() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2042), new QualifiedName(0, "EventId"), new LocalizedText("en", "EventId"), new LocalizedText("en", "A globally unique identifier for the event."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2042), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2042), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2042), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2041), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode550() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2043), new QualifiedName(0, "EventType"), new LocalizedText("en", "EventType"), new LocalizedText("en", "The identifier for the event type."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2043), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2043), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2043), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2041), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode551() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2044), new QualifiedName(0, "SourceNode"), new LocalizedText("en", "SourceNode"), new LocalizedText("en", "The source of the event."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2044), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2044), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2044), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2041), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode552() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2045), new QualifiedName(0, "SourceName"), new LocalizedText("en", "SourceName"), new LocalizedText("en", "A description of the source of the event."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2045), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2045), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2045), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2041), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode553() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2046), new QualifiedName(0, "Time"), new LocalizedText("en", "Time"), new LocalizedText("en", "When the event occurred."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2046), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2046), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2046), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2041), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode554() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2047), new QualifiedName(0, "ReceiveTime"), new LocalizedText("en", "ReceiveTime"), new LocalizedText("en", "When the server received the event from the underlying system."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2047), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2047), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2047), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2041), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode555() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2050), new QualifiedName(0, "Message"), new LocalizedText("en", "Message"), new LocalizedText("en", "A localized description of the event."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2050), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2050), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2050), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2041), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode556() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2051), new QualifiedName(0, "Severity"), new LocalizedText("en", "Severity"), new LocalizedText("en", "Indicates how urgent an event is."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2051), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2051), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2051), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2041), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode557() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2053), new QualifiedName(0, "ActionTimeStamp"), new LocalizedText("en", "ActionTimeStamp"), new LocalizedText("en", "When the action triggering the event occurred."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2053), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2053), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2053), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2052), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode558() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2054), new QualifiedName(0, "Status"), new LocalizedText("en", "Status"), new LocalizedText("en", "If TRUE the action was performed. If FALSE the action failed and the server state did not change."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2054), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2054), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2054), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2052), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode559() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2055), new QualifiedName(0, "ServerId"), new LocalizedText("en", "ServerId"), new LocalizedText("en", "The unique identifier for the server generating the event."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2055), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2055), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2055), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2052), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode560() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2056), new QualifiedName(0, "ClientAuditEntryId"), new LocalizedText("en", "ClientAuditEntryId"), new LocalizedText("en", "The log entry id provided in the request that initiated the action."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2056), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2056), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2056), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2052), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode561() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2057), new QualifiedName(0, "ClientUserId"), new LocalizedText("en", "ClientUserId"), new LocalizedText("en", "The user identity associated with the session that initiated the action."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2057), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2057), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2057), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2052), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode562() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2061), new QualifiedName(0, "ClientCertificate"), new LocalizedText("en", "ClientCertificate"), new LocalizedText("en", "The certificate provided by the client."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2061), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2061), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2061), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2060), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode563() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2062), new QualifiedName(0, "RequestType"), new LocalizedText("en", "RequestType"), new LocalizedText("en", "The type of request (NEW or RENEW)."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 315), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2062), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2062), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2062), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2060), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode564() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2063), new QualifiedName(0, "SecurityPolicyUri"), new LocalizedText("en", "SecurityPolicyUri"), new LocalizedText("en", "The security policy used by the channel."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2063), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2063), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2063), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2060), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode565() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2065), new QualifiedName(0, "SecurityMode"), new LocalizedText("en", "SecurityMode"), new LocalizedText("en", "The security mode used by the channel."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 302), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2065), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2065), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2065), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2060), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode566() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2066), new QualifiedName(0, "RequestedLifetime"), new LocalizedText("en", "RequestedLifetime"), new LocalizedText("en", "The lifetime of the channel requested by the client."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2066), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2066), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2066), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2060), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode567() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2070), new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), new LocalizedText("en", "The unique identifier for the session,."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2070), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2070), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2070), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2069), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode568() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2072), new QualifiedName(0, "SecureChannelId"), new LocalizedText("en", "SecureChannelId"), new LocalizedText("en", "The secure channel associated with the session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2072), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2072), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2072), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2071), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode569() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2073), new QualifiedName(0, "ClientCertificate"), new LocalizedText("en", "ClientCertificate"), new LocalizedText("en", "The certificate provided by the client."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2073), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2073), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2073), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2071), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode570() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2074), new QualifiedName(0, "RevisedSessionTimeout"), new LocalizedText("en", "RevisedSessionTimeout"), new LocalizedText("en", "The timeout for the session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2074), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2074), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2074), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2071), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode571() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2076), new QualifiedName(0, "ClientSoftwareCertificates"), new LocalizedText("en", "ClientSoftwareCertificates"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 344), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2076), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2076), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2076), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2075), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode572() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2077), new QualifiedName(0, "UserIdentityToken"), new LocalizedText("en", "UserIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 316), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2077), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2077), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2077), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2075), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode573() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2079), new QualifiedName(0, "RequestHandle"), new LocalizedText("en", "RequestHandle"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2079), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2079), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2079), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2078), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode574() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2081), new QualifiedName(0, "Certificate"), new LocalizedText("en", "Certificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2081), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2081), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2081), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2080), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode575() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2083), new QualifiedName(0, "InvalidHostname"), new LocalizedText("en", "InvalidHostname"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2083), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2083), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2083), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2082), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode576() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2084), new QualifiedName(0, "InvalidUri"), new LocalizedText("en", "InvalidUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2084), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2084), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2084), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2082), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode577() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2092), new QualifiedName(0, "NodesToAdd"), new LocalizedText("en", "NodesToAdd"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 376), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2092), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2092), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2092), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2091), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode578() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2094), new QualifiedName(0, "NodesToDelete"), new LocalizedText("en", "NodesToDelete"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 382), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2094), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2094), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2094), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2093), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode579() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2096), new QualifiedName(0, "ReferencesToAdd"), new LocalizedText("en", "ReferencesToAdd"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 379), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2096), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2096), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2096), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2095), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode580() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2098), new QualifiedName(0, "ReferencesToDelete"), new LocalizedText("en", "ReferencesToDelete"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 385), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2098), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2098), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2098), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2097), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode581() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2101), new QualifiedName(0, "IndexRange"), new LocalizedText("en", "IndexRange"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 291), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2101), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2101), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2101), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2100), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode582() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2102), new QualifiedName(0, "OldValue"), new LocalizedText("en", "OldValue"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2102), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2102), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2102), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2100), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode583() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2103), new QualifiedName(0, "NewValue"), new LocalizedText("en", "NewValue"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2103), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2103), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2103), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2100), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode584() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14415), new QualifiedName(0, "ServerNetworkGroups"), new LocalizedText("en", "ServerNetworkGroups"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 11944), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14415), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14415), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2296), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode585() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2128), new QualifiedName(0, "MethodId"), new LocalizedText("en", "MethodId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2128), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2128), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2128), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2127), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode586() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2129), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2129), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2129), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2129), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2127), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode587() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2134), new QualifiedName(0, "Changes"), new LocalizedText("en", "Changes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 877), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2134), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2134), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2134), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2133), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode588() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2139), new QualifiedName(0, "StartTime"), new LocalizedText("en", "StartTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2139), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2139), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2139), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2138), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode589() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2140), new QualifiedName(0, "CurrentTime"), new LocalizedText("en", "CurrentTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2140), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2140), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2140), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2138), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode590() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2141), new QualifiedName(0, "State"), new LocalizedText("en", "State"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 852), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2141), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2141), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2141), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2138), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode591() {
        BuildInfoTypeNode node = new BuildInfoTypeNode(this.context, new NodeId(0, 2142), new QualifiedName(0, "BuildInfo"), new LocalizedText("en", "BuildInfo"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 338), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3698), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3699), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3700), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3701), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3702), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3703), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2142), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3051), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2142), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2138), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode592() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2151), new QualifiedName(0, "ServerViewCount"), new LocalizedText("en", "ServerViewCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2151), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2151), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2151), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode593() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2152), new QualifiedName(0, "CurrentSessionCount"), new LocalizedText("en", "CurrentSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2152), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2152), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2152), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode594() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2153), new QualifiedName(0, "CumulatedSessionCount"), new LocalizedText("en", "CumulatedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2153), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2153), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2153), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode595() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2154), new QualifiedName(0, "SecurityRejectedSessionCount"), new LocalizedText("en", "SecurityRejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2154), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2154), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2154), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode596() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2155), new QualifiedName(0, "RejectedSessionCount"), new LocalizedText("en", "RejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2155), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2155), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2155), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode597() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2156), new QualifiedName(0, "SessionTimeoutCount"), new LocalizedText("en", "SessionTimeoutCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2156), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2156), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2156), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode598() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2157), new QualifiedName(0, "SessionAbortCount"), new LocalizedText("en", "SessionAbortCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2157), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2157), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2157), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode599() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2159), new QualifiedName(0, "PublishingIntervalCount"), new LocalizedText("en", "PublishingIntervalCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2159), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2159), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2159), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode600() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2160), new QualifiedName(0, "CurrentSubscriptionCount"), new LocalizedText("en", "CurrentSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2160), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2160), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2160), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode601() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2161), new QualifiedName(0, "CumulatedSubscriptionCount"), new LocalizedText("en", "CumulatedSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2161), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2161), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2161), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode602() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2162), new QualifiedName(0, "SecurityRejectedRequestsCount"), new LocalizedText("en", "SecurityRejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2162), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2162), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2162), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode603() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2163), new QualifiedName(0, "RejectedRequestsCount"), new LocalizedText("en", "RejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2163), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2163), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2163), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode604() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2166), new QualifiedName(0, "SamplingInterval"), new LocalizedText("en", "SamplingInterval"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2166), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2166), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2166), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2165), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode605() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2173), new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2173), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2173), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2173), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode606() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2174), new QualifiedName(0, "SubscriptionId"), new LocalizedText("en", "SubscriptionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2174), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2174), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2174), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode607() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2175), new QualifiedName(0, "Priority"), new LocalizedText("en", "Priority"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 3), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2175), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2175), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2175), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode608() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2176), new QualifiedName(0, "PublishingInterval"), new LocalizedText("en", "PublishingInterval"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 11), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2176), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2176), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2176), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode609() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2177), new QualifiedName(0, "MaxKeepAliveCount"), new LocalizedText("en", "MaxKeepAliveCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2177), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2177), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2177), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode610() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2179), new QualifiedName(0, "MaxNotificationsPerPublish"), new LocalizedText("en", "MaxNotificationsPerPublish"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2179), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2179), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2179), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode611() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2180), new QualifiedName(0, "PublishingEnabled"), new LocalizedText("en", "PublishingEnabled"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2180), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2180), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2180), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode612() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2181), new QualifiedName(0, "ModifyCount"), new LocalizedText("en", "ModifyCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2181), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2181), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2181), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode613() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2182), new QualifiedName(0, "EnableCount"), new LocalizedText("en", "EnableCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2182), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2182), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2182), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode614() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2183), new QualifiedName(0, "DisableCount"), new LocalizedText("en", "DisableCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2183), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2183), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2183), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode615() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2184), new QualifiedName(0, "RepublishRequestCount"), new LocalizedText("en", "RepublishRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2184), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2184), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2184), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode616() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2185), new QualifiedName(0, "RepublishMessageRequestCount"), new LocalizedText("en", "RepublishMessageRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2185), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2185), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2185), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode617() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2186), new QualifiedName(0, "RepublishMessageCount"), new LocalizedText("en", "RepublishMessageCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2186), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2186), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2186), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode618() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2187), new QualifiedName(0, "TransferRequestCount"), new LocalizedText("en", "TransferRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2187), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2187), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2187), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode619() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2188), new QualifiedName(0, "TransferredToAltClientCount"), new LocalizedText("en", "TransferredToAltClientCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2188), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2188), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2188), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode620() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2189), new QualifiedName(0, "TransferredToSameClientCount"), new LocalizedText("en", "TransferredToSameClientCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2189), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2189), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2189), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode621() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2190), new QualifiedName(0, "PublishRequestCount"), new LocalizedText("en", "PublishRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2190), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2190), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2190), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode622() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2191), new QualifiedName(0, "DataChangeNotificationsCount"), new LocalizedText("en", "DataChangeNotificationsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2191), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2191), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2191), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode623() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2193), new QualifiedName(0, "NotificationsCount"), new LocalizedText("en", "NotificationsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2193), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2193), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2193), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode624() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2198), new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2198), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2198), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2198), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode625() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2199), new QualifiedName(0, "SessionName"), new LocalizedText("en", "SessionName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2199), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2199), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2199), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode626() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2200), new QualifiedName(0, "ClientDescription"), new LocalizedText("en", "ClientDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 308), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2200), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2200), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2200), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode627() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2201), new QualifiedName(0, "ServerUri"), new LocalizedText("en", "ServerUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2201), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2201), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2201), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode628() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2202), new QualifiedName(0, "EndpointUrl"), new LocalizedText("en", "EndpointUrl"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2202), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2202), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2202), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode629() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2203), new QualifiedName(0, "LocaleIds"), new LocalizedText("en", "LocaleIds"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 295), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2203), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2203), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2203), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode630() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2204), new QualifiedName(0, "ActualSessionTimeout"), new LocalizedText("en", "ActualSessionTimeout"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2204), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2204), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2204), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode631() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2205), new QualifiedName(0, "ClientConnectionTime"), new LocalizedText("en", "ClientConnectionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2205), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2205), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2205), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode632() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2206), new QualifiedName(0, "ClientLastContactTime"), new LocalizedText("en", "ClientLastContactTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2206), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2206), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2206), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode633() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2207), new QualifiedName(0, "CurrentSubscriptionsCount"), new LocalizedText("en", "CurrentSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2207), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2207), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2207), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode634() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2208), new QualifiedName(0, "CurrentMonitoredItemsCount"), new LocalizedText("en", "CurrentMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2208), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2208), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2208), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode635() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2209), new QualifiedName(0, "CurrentPublishRequestsInQueue"), new LocalizedText("en", "CurrentPublishRequestsInQueue"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2209), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2209), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2209), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode636() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2217), new QualifiedName(0, "ReadCount"), new LocalizedText("en", "ReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2217), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2217), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2217), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode637() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2218), new QualifiedName(0, "HistoryReadCount"), new LocalizedText("en", "HistoryReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2218), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2218), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2218), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode638() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2219), new QualifiedName(0, "WriteCount"), new LocalizedText("en", "WriteCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2219), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2219), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2219), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode639() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2220), new QualifiedName(0, "HistoryUpdateCount"), new LocalizedText("en", "HistoryUpdateCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2220), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2220), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2220), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode640() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2221), new QualifiedName(0, "CallCount"), new LocalizedText("en", "CallCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2221), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2221), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2221), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode641() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2222), new QualifiedName(0, "CreateMonitoredItemsCount"), new LocalizedText("en", "CreateMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2222), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2222), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2222), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode642() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2223), new QualifiedName(0, "ModifyMonitoredItemsCount"), new LocalizedText("en", "ModifyMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2223), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2223), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2223), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode643() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2224), new QualifiedName(0, "SetMonitoringModeCount"), new LocalizedText("en", "SetMonitoringModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2224), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2224), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2224), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode644() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2225), new QualifiedName(0, "SetTriggeringCount"), new LocalizedText("en", "SetTriggeringCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2225), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2225), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2225), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode645() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2226), new QualifiedName(0, "DeleteMonitoredItemsCount"), new LocalizedText("en", "DeleteMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2226), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2226), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2226), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode646() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2227), new QualifiedName(0, "CreateSubscriptionCount"), new LocalizedText("en", "CreateSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2227), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2227), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2227), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode647() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2228), new QualifiedName(0, "ModifySubscriptionCount"), new LocalizedText("en", "ModifySubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2228), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2228), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2228), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode648() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2229), new QualifiedName(0, "SetPublishingModeCount"), new LocalizedText("en", "SetPublishingModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2229), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2229), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2229), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode649() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2230), new QualifiedName(0, "PublishCount"), new LocalizedText("en", "PublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2230), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2230), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2230), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode650() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2231), new QualifiedName(0, "RepublishCount"), new LocalizedText("en", "RepublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2231), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2231), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2231), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode651() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2232), new QualifiedName(0, "TransferSubscriptionsCount"), new LocalizedText("en", "TransferSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2232), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2232), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2232), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode652() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2233), new QualifiedName(0, "DeleteSubscriptionsCount"), new LocalizedText("en", "DeleteSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2233), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2233), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2233), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode653() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2234), new QualifiedName(0, "AddNodesCount"), new LocalizedText("en", "AddNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2234), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2234), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2234), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode654() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2235), new QualifiedName(0, "AddReferencesCount"), new LocalizedText("en", "AddReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2235), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2235), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2235), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode655() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2236), new QualifiedName(0, "DeleteNodesCount"), new LocalizedText("en", "DeleteNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2236), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2236), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2236), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode656() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2237), new QualifiedName(0, "DeleteReferencesCount"), new LocalizedText("en", "DeleteReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2237), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2237), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2237), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode657() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2238), new QualifiedName(0, "BrowseCount"), new LocalizedText("en", "BrowseCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2238), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2238), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2238), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode658() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2239), new QualifiedName(0, "BrowseNextCount"), new LocalizedText("en", "BrowseNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2239), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2239), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2239), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode659() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2240), new QualifiedName(0, "TranslateBrowsePathsToNodeIdsCount"), new LocalizedText("en", "TranslateBrowsePathsToNodeIdsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2240), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2240), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2240), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode660() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2241), new QualifiedName(0, "QueryFirstCount"), new LocalizedText("en", "QueryFirstCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2241), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2241), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2241), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode661() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2242), new QualifiedName(0, "QueryNextCount"), new LocalizedText("en", "QueryNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2242), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2242), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2242), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode662() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2245), new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2245), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2245), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2245), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2244), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode663() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2246), new QualifiedName(0, "ClientUserIdOfSession"), new LocalizedText("en", "ClientUserIdOfSession"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2246), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2246), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2246), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2244), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode664() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2247), new QualifiedName(0, "ClientUserIdHistory"), new LocalizedText("en", "ClientUserIdHistory"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2247), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2247), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2247), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2244), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode665() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2248), new QualifiedName(0, "AuthenticationMechanism"), new LocalizedText("en", "AuthenticationMechanism"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2248), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2248), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2248), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2244), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode666() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2249), new QualifiedName(0, "Encoding"), new LocalizedText("en", "Encoding"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2249), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2249), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2249), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2244), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode667() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2250), new QualifiedName(0, "TransportProtocol"), new LocalizedText("en", "TransportProtocol"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2250), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2250), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2250), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2244), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode668() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2251), new QualifiedName(0, "SecurityMode"), new LocalizedText("en", "SecurityMode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 302), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2251), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2251), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2251), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2244), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode669() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2252), new QualifiedName(0, "SecurityPolicyUri"), new LocalizedText("en", "SecurityPolicyUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2252), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2252), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2252), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2244), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode670() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2254), new QualifiedName(0, "ServerArray"), new LocalizedText("en", "ServerArray"), new LocalizedText("en", "The list of server URIs used by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2254), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2254), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2253), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode671() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2255), new QualifiedName(0, "NamespaceArray"), new LocalizedText("en", "NamespaceArray"), new LocalizedText("en", "The list of namespace URIs used by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2255), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2255), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2253), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode672() {
        ServerStatusTypeNode node = new ServerStatusTypeNode(this.context, new NodeId(0, 2256), new QualifiedName(0, "ServerStatus"), new LocalizedText("en", "ServerStatus"), new LocalizedText("en", "The current status of the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 862), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2256), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2257), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2256), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2258), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2256), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2259), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2256), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2260), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2256), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2992), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2256), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2993), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2256), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2138), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2256), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2253), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode673() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2257), new QualifiedName(0, "StartTime"), new LocalizedText("en", "StartTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2257), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2257), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2256), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode674() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2258), new QualifiedName(0, "CurrentTime"), new LocalizedText("en", "CurrentTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2258), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2258), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2256), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode675() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2259), new QualifiedName(0, "State"), new LocalizedText("en", "State"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 852), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2259), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2259), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2256), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode676() {
        BuildInfoTypeNode node = new BuildInfoTypeNode(this.context, new NodeId(0, 2260), new QualifiedName(0, "BuildInfo"), new LocalizedText("en", "BuildInfo"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 338), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2260), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2262), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2260), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2263), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2260), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2261), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2260), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2264), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2260), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2265), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2260), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2266), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2260), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3051), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2260), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2256), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode677() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2261), new QualifiedName(0, "ProductName"), new LocalizedText("en", "ProductName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2261), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2261), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2260), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode678() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2262), new QualifiedName(0, "ProductUri"), new LocalizedText("en", "ProductUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2262), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2262), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2260), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode679() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2263), new QualifiedName(0, "ManufacturerName"), new LocalizedText("en", "ManufacturerName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2263), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2263), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2260), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode680() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2264), new QualifiedName(0, "SoftwareVersion"), new LocalizedText("en", "SoftwareVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2264), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2264), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2260), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode681() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2265), new QualifiedName(0, "BuildNumber"), new LocalizedText("en", "BuildNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2265), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2265), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2260), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode682() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2266), new QualifiedName(0, "BuildDate"), new LocalizedText("en", "BuildDate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2266), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2266), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2260), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode683() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2267), new QualifiedName(0, "ServiceLevel"), new LocalizedText("en", "ServiceLevel"), new LocalizedText("en", "A value indicating the level of service the server can provide. 255 indicates the best."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 3), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2267), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2267), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2253), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode684() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2269), new QualifiedName(0, "ServerProfileArray"), new LocalizedText("en", "ServerProfileArray"), new LocalizedText("en", "A list of profiles supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2269), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2269), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2268), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode685() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2271), new QualifiedName(0, "LocaleIdArray"), new LocalizedText("en", "LocaleIdArray"), new LocalizedText("en", "A list of locales supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 295), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2271), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2271), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2268), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode686() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2272), new QualifiedName(0, "MinSupportedSampleRate"), new LocalizedText("en", "MinSupportedSampleRate"), new LocalizedText("en", "The minimum sampling interval supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2272), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2272), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2268), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode687() {
        ServerDiagnosticsSummaryTypeNode node = new ServerDiagnosticsSummaryTypeNode(this.context, new NodeId(0, 2275), new QualifiedName(0, "ServerDiagnosticsSummary"), new LocalizedText("en", "ServerDiagnosticsSummary"), new LocalizedText("en", "A summary of server level diagnostics."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 859), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2275), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2276), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2275), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2277), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2275), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2278), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2275), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2279), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2275), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3705), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2275), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2281), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2275), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2282), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2275), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2284), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2275), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2285), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2275), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2286), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2275), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2287), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2275), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2288), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2275), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2275), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2274), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode688() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2276), new QualifiedName(0, "ServerViewCount"), new LocalizedText("en", "ServerViewCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2276), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2276), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2275), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode689() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2277), new QualifiedName(0, "CurrentSessionCount"), new LocalizedText("en", "CurrentSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2277), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2277), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2275), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode690() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2278), new QualifiedName(0, "CumulatedSessionCount"), new LocalizedText("en", "CumulatedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2278), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2278), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2275), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode691() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2279), new QualifiedName(0, "SecurityRejectedSessionCount"), new LocalizedText("en", "SecurityRejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2279), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2279), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2275), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode692() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2281), new QualifiedName(0, "SessionTimeoutCount"), new LocalizedText("en", "SessionTimeoutCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2281), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2281), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2275), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode693() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2282), new QualifiedName(0, "SessionAbortCount"), new LocalizedText("en", "SessionAbortCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2282), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2282), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2275), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode694() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2284), new QualifiedName(0, "PublishingIntervalCount"), new LocalizedText("en", "PublishingIntervalCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2284), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2284), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2275), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode695() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2285), new QualifiedName(0, "CurrentSubscriptionCount"), new LocalizedText("en", "CurrentSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2285), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2285), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2275), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode696() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2286), new QualifiedName(0, "CumulatedSubscriptionCount"), new LocalizedText("en", "CumulatedSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2286), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2286), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2275), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode697() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2287), new QualifiedName(0, "SecurityRejectedRequestsCount"), new LocalizedText("en", "SecurityRejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2287), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2287), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2275), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode698() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2288), new QualifiedName(0, "RejectedRequestsCount"), new LocalizedText("en", "RejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2288), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2288), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2275), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode699() {
        SamplingIntervalDiagnosticsArrayTypeNode node = new SamplingIntervalDiagnosticsArrayTypeNode(this.context, new NodeId(0, 2289), new QualifiedName(0, "SamplingIntervalDiagnosticsArray"), new LocalizedText("en", "SamplingIntervalDiagnosticsArray"), new LocalizedText("en", "A list of diagnostics for each sampling interval supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 856), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2289), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2164), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2289), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2274), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode700() {
        SubscriptionDiagnosticsArrayTypeNode node = new SubscriptionDiagnosticsArrayTypeNode(this.context, new NodeId(0, 2290), new QualifiedName(0, "SubscriptionDiagnosticsArray"), new LocalizedText("en", "SubscriptionDiagnosticsArray"), new LocalizedText("en", "A list of diagnostics for each active subscription."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 874), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2290), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2171), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2290), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2274), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode701() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2294), new QualifiedName(0, "EnabledFlag"), new LocalizedText("en", "EnabledFlag"), new LocalizedText("en", "If TRUE the diagnostics collection is enabled."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(3), UByte.valueOf(3), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2294), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2294), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2274), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode702() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2308), new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2308), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2308), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2308), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2307), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode703() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2312), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2312), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2312), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2312), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2310), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode704() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2323), new QualifiedName(0, "Stepped"), new LocalizedText("en", "Stepped"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2323), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2323), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2323), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2318), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode705() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2324), new QualifiedName(0, "Definition"), new LocalizedText("en", "Definition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2324), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2324), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2324), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2318), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode706() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2325), new QualifiedName(0, "MaxTimeInterval"), new LocalizedText("en", "MaxTimeInterval"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2325), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2325), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2325), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2318), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode707() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2326), new QualifiedName(0, "MinTimeInterval"), new LocalizedText("en", "MinTimeInterval"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2326), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2326), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2326), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2318), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode708() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2327), new QualifiedName(0, "ExceptionDeviation"), new LocalizedText("en", "ExceptionDeviation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 11), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2327), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2327), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2327), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2318), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode709() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2328), new QualifiedName(0, "ExceptionDeviationFormat"), new LocalizedText("en", "ExceptionDeviationFormat"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 890), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2328), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2328), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2328), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2318), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode710() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 10522), new QualifiedName(0, "SetpointNode"), new LocalizedText("en", "SetpointNode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 10522), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10522), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 10522), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10368), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode711() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2331), new QualifiedName(0, "AccessHistoryDataCapability"), new LocalizedText("en", "AccessHistoryDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2331), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2331), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2331), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2330), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode712() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2332), new QualifiedName(0, "AccessHistoryEventsCapability"), new LocalizedText("en", "AccessHistoryEventsCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2332), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2332), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2332), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2330), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode713() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2334), new QualifiedName(0, "InsertDataCapability"), new LocalizedText("en", "InsertDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2334), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2334), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2334), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2330), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode714() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2335), new QualifiedName(0, "ReplaceDataCapability"), new LocalizedText("en", "ReplaceDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2335), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2335), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2335), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2330), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode715() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2336), new QualifiedName(0, "UpdateDataCapability"), new LocalizedText("en", "UpdateDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2336), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2336), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2336), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2330), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode716() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2337), new QualifiedName(0, "DeleteRawCapability"), new LocalizedText("en", "DeleteRawCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2337), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2337), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2337), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2330), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode717() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2338), new QualifiedName(0, "DeleteAtTimeCapability"), new LocalizedText("en", "DeleteAtTimeCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2338), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2338), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2338), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2330), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode718() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2366), new QualifiedName(0, "Definition"), new LocalizedText("en", "Definition"), new LocalizedText("en", "A vendor-specific, human readable string that specifies how the value of this DataItem is calculated."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2366), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2366), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2366), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2365), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode719() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2367), new QualifiedName(0, "ValuePrecision"), new LocalizedText("en", "ValuePrecision"), new LocalizedText("en", "The maximum precision that the server can maintain for the item based on restrictions in the target environment."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 11), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2367), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2367), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2367), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2365), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode720() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2369), new QualifiedName(0, "EURange"), new LocalizedText("en", "EURange"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 884), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2369), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2369), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2369), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2368), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode721() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2370), new QualifiedName(0, "InstrumentRange"), new LocalizedText("en", "InstrumentRange"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 884), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2370), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2370), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2370), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2368), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode722() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2371), new QualifiedName(0, "EngineeringUnits"), new LocalizedText("en", "EngineeringUnits"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 887), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2371), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2371), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2371), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2368), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode723() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2374), new QualifiedName(0, "FalseState"), new LocalizedText("en", "FalseState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2374), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2374), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2374), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2373), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode724() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2375), new QualifiedName(0, "TrueState"), new LocalizedText("en", "TrueState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2375), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2375), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2375), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2373), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode725() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2377), new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2377), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2377), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2377), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2376), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode726() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2379), new QualifiedName(0, "IntermediateResult"), new LocalizedText("en", "IntermediateResult"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2379), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2379), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2379), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2378), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode727() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2381), new QualifiedName(0, "CreateSessionId"), new LocalizedText("en", "CreateSessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2381), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2381), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2381), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2380), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode728() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2382), new QualifiedName(0, "CreateClientName"), new LocalizedText("en", "CreateClientName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2382), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2382), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2382), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2380), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode729() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2383), new QualifiedName(0, "InvocationCreationTime"), new LocalizedText("en", "InvocationCreationTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2383), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2383), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2383), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2380), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode730() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2384), new QualifiedName(0, "LastTransitionTime"), new LocalizedText("en", "LastTransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2384), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2384), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2384), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2380), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode731() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2385), new QualifiedName(0, "LastMethodCall"), new LocalizedText("en", "LastMethodCall"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2385), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2385), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2385), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2380), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode732() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2386), new QualifiedName(0, "LastMethodSessionId"), new LocalizedText("en", "LastMethodSessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2386), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2386), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2386), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2380), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode733() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2387), new QualifiedName(0, "LastMethodInputArguments"), new LocalizedText("en", "LastMethodInputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2387), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2387), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2387), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2380), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode734() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2388), new QualifiedName(0, "LastMethodOutputArguments"), new LocalizedText("en", "LastMethodOutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2388), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2388), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2388), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2380), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode735() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2389), new QualifiedName(0, "LastMethodCallTime"), new LocalizedText("en", "LastMethodCallTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2389), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2389), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2389), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2380), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode736() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2390), new QualifiedName(0, "LastMethodReturnStatus"), new LocalizedText("en", "LastMethodReturnStatus"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 299), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2390), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2390), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2390), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2380), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode737() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2392), new QualifiedName(0, "Creatable"), new LocalizedText("en", "Creatable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2392), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2392), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2391), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode738() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2393), new QualifiedName(0, "Deletable"), new LocalizedText("en", "Deletable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2393), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2393), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2393), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2391), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode739() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2394), new QualifiedName(0, "AutoDelete"), new LocalizedText("en", "AutoDelete"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2394), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2394), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(79), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2394), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2391), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode740() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2395), new QualifiedName(0, "RecycleCount"), new LocalizedText("en", "RecycleCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 6), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2395), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2395), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2395), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2391), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode741() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2396), new QualifiedName(0, "InstanceCount"), new LocalizedText("en", "InstanceCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2396), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2396), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2391), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode742() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2397), new QualifiedName(0, "MaxInstanceCount"), new LocalizedText("en", "MaxInstanceCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2397), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2397), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2391), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode743() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2398), new QualifiedName(0, "MaxRecycleCount"), new LocalizedText("en", "MaxRecycleCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2398), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2398), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2391), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode744() {
        ProgramDiagnosticTypeNode node = new ProgramDiagnosticTypeNode(this.context, new NodeId(0, 2399), new QualifiedName(0, "ProgramDiagnostics"), new LocalizedText("en", "ProgramDiagnostics"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 894), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2399), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3840), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2399), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3841), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2399), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3842), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2399), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3843), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2399), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3844), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2399), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3845), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2399), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3846), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2399), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3847), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2399), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3848), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2399), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3849), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2399), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2380), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2399), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2399), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2391), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode745() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2401), new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2401), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2401), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2401), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2400), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">1</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode746() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2403), new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2403), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2403), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2403), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2402), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">2</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode747() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2405), new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2405), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2405), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2405), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2404), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">3</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode748() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2407), new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2407), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2407), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2407), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2406), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">4</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode749() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2409), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2409), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2409), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2409), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2408), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">1</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode750() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2411), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2411), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2411), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2411), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2410), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">2</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode751() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2413), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2413), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2413), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2413), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2412), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">3</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode752() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2415), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2415), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2415), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2415), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2414), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">4</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode753() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2417), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2417), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2417), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2417), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2416), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">5</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode754() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2419), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2419), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2419), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2419), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2418), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">6</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode755() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2421), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2421), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2421), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2421), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2420), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">7</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode756() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2423), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2423), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2423), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2423), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2422), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">8</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode757() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2425), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2425), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2425), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2425), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2424), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">9</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode758() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 14900), new QualifiedName(0, "ExpirationLimit"), new LocalizedText("en", "ExpirationLimit"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 14900), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14900), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 14900), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(13225), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode759() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2730), new QualifiedName(0, "RegisterNodesCount"), new LocalizedText("en", "RegisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2730), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2730), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2730), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode760() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2731), new QualifiedName(0, "UnregisterNodesCount"), new LocalizedText("en", "UnregisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2731), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2731), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2731), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode761() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2732), new QualifiedName(0, "MaxBrowseContinuationPoints"), new LocalizedText("en", "MaxBrowseContinuationPoints"), new LocalizedText("en", "The maximum number of continuation points for Browse operations per session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2732), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2732), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2732), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2013), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode762() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2733), new QualifiedName(0, "MaxQueryContinuationPoints"), new LocalizedText("en", "MaxQueryContinuationPoints"), new LocalizedText("en", "The maximum number of continuation points for Query operations per session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2733), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2733), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2733), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2013), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode763() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2734), new QualifiedName(0, "MaxHistoryContinuationPoints"), new LocalizedText("en", "MaxHistoryContinuationPoints"), new LocalizedText("en", "The maximum number of continuation points for ReadHistory operations per session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2734), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2734), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2734), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2013), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode764() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2735), new QualifiedName(0, "MaxBrowseContinuationPoints"), new LocalizedText("en", "MaxBrowseContinuationPoints"), new LocalizedText("en", "The maximum number of continuation points for Browse operations per session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2735), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2735), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2268), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode765() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2736), new QualifiedName(0, "MaxQueryContinuationPoints"), new LocalizedText("en", "MaxQueryContinuationPoints"), new LocalizedText("en", "The maximum number of continuation points for Query operations per session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2736), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2736), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2268), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode766() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2737), new QualifiedName(0, "MaxHistoryContinuationPoints"), new LocalizedText("en", "MaxHistoryContinuationPoints"), new LocalizedText("en", "The maximum number of continuation points for ReadHistory operations per session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2737), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2737), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2268), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode767() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2739), new QualifiedName(0, "Changes"), new LocalizedText("en", "Changes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 897), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2739), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2739), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2739), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2738), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode768() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2742), new QualifiedName(0, "Auditing"), new LocalizedText("en", "Auditing"), new LocalizedText("en", "A flag indicating whether the server is currently generating audit events."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2742), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2742), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2742), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2004), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode769() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2745), new QualifiedName(0, "SecureChannelId"), new LocalizedText("en", "SecureChannelId"), new LocalizedText("en", "The identifier for the secure channel that was changed."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2745), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2745), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2745), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2059), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode770() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2746), new QualifiedName(0, "ClientCertificateThumbprint"), new LocalizedText("en", "ClientCertificateThumbprint"), new LocalizedText("en", "The thumbprint for certificate provided by the client."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2746), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2746), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2746), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2060), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode771() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2747), new QualifiedName(0, "ClientCertificateThumbprint"), new LocalizedText("en", "ClientCertificateThumbprint"), new LocalizedText("en", "The thumbprint of the certificate provided by the client."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2747), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2747), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2747), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2071), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode772() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2749), new QualifiedName(0, "EndpointUrl"), new LocalizedText("en", "EndpointUrl"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2749), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2749), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2749), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2748), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode773() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2750), new QualifiedName(0, "AttributeId"), new LocalizedText("en", "AttributeId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2750), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2750), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2750), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2100), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode774() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2751), new QualifiedName(0, "ParameterDataTypeId"), new LocalizedText("en", "ParameterDataTypeId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2751), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2751), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2751), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2104), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode775() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2752), new QualifiedName(0, "SecondsTillShutdown"), new LocalizedText("en", "SecondsTillShutdown"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2752), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2752), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2752), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2138), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode776() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2753), new QualifiedName(0, "ShutdownReason"), new LocalizedText("en", "ShutdownReason"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2753), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2753), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2753), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2138), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode777() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2756), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2756), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2756), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2756), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2755), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode778() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2757), new QualifiedName(0, "Name"), new LocalizedText("en", "Name"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 20), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2757), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2757), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2757), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2755), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode779() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2758), new QualifiedName(0, "Number"), new LocalizedText("en", "Number"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2758), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2758), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2758), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2755), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode780() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2759), new QualifiedName(0, "EffectiveDisplayName"), new LocalizedText("en", "EffectiveDisplayName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2759), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2759), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2759), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2755), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode781() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2761), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2761), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2761), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2761), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2760), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode782() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2763), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2763), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2763), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2763), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2762), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode783() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2764), new QualifiedName(0, "Name"), new LocalizedText("en", "Name"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 20), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2764), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2764), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2764), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2762), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode784() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2765), new QualifiedName(0, "Number"), new LocalizedText("en", "Number"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2765), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2765), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2765), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2762), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode785() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2766), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2766), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2766), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2766), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2762), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode786() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2768), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2768), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2768), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2768), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2767), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode787() {
        StateVariableTypeNode node = new StateVariableTypeNode(this.context, new NodeId(0, 2769), new QualifiedName(0, "CurrentState"), new LocalizedText("en", "CurrentState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2769), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3720), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2769), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2755), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2769), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2769), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2299), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode788() {
        TransitionVariableTypeNode node = new TransitionVariableTypeNode(this.context, new NodeId(0, 2770), new QualifiedName(0, "LastTransition"), new LocalizedText("en", "LastTransition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2770), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3724), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2770), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2762), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2770), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2770), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2299), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode789() {
        FiniteStateVariableTypeNode node = new FiniteStateVariableTypeNode(this.context, new NodeId(0, 2772), new QualifiedName(0, "CurrentState"), new LocalizedText("en", "CurrentState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2772), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3728), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2772), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2760), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2772), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2772), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2771), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode790() {
        FiniteTransitionVariableTypeNode node = new FiniteTransitionVariableTypeNode(this.context, new NodeId(0, 2773), new QualifiedName(0, "LastTransition"), new LocalizedText("en", "LastTransition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2773), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3732), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2773), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2767), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2773), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2773), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2771), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode791() {
        TransitionVariableTypeNode node = new TransitionVariableTypeNode(this.context, new NodeId(0, 2774), new QualifiedName(0, "Transition"), new LocalizedText("en", "Transition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2774), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3754), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2774), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2762), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2774), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2774), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2311), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode792() {
        StateVariableTypeNode node = new StateVariableTypeNode(this.context, new NodeId(0, 2775), new QualifiedName(0, "FromState"), new LocalizedText("en", "FromState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2775), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3746), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2775), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2755), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2775), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2775), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2311), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode793() {
        StateVariableTypeNode node = new StateVariableTypeNode(this.context, new NodeId(0, 2776), new QualifiedName(0, "ToState"), new LocalizedText("en", "ToState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2776), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3750), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2776), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2755), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2776), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2776), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2311), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode794() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2777), new QualifiedName(0, "OldStateId"), new LocalizedText("en", "OldStateId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2777), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2777), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2777), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2315), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode795() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2778), new QualifiedName(0, "NewStateId"), new LocalizedText("en", "NewStateId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2778), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2778), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2778), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2315), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode796() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2831), new QualifiedName(0, "Prompt"), new LocalizedText("en", "Prompt"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2831), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2831), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2831), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2830), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode797() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 15183), new QualifiedName(0, "NamespaceUri"), new LocalizedText("en", "NamespaceUri"), new LocalizedText("en", "The URI of the namespace."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 15183), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 15183), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(15182), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">http://opcfoundation.org/UA/</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode798() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 15184), new QualifiedName(0, "NamespaceVersion"), new LocalizedText("en", "NamespaceVersion"), new LocalizedText("en", "The human readable string representing version of the namespace."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 15184), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 15184), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(15182), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">1.03</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode799() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 15185), new QualifiedName(0, "NamespacePublicationDate"), new LocalizedText("en", "NamespacePublicationDate"), new LocalizedText("en", "The publication date for the namespace."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 13), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 15185), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 15185), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(15182), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">2016-04-15</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode800() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 15186), new QualifiedName(0, "IsNamespaceSubset"), new LocalizedText("en", "IsNamespaceSubset"), new LocalizedText("en", "If TRUE then the server only supports a subset of the namespace."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 15186), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 15186), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(15182), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Boolean xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">false</Boolean>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode801() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 15187), new QualifiedName(0, "StaticNodeIdTypes"), new LocalizedText("en", "StaticNodeIdTypes"), new LocalizedText("en", "A list of IdTypes for nodes which are the same in every server that exposes them."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 256), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 15187), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 15187), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(15182), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode802() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 15188), new QualifiedName(0, "StaticNumericNodeIdRange"), new LocalizedText("en", "StaticNumericNodeIdRange"), new LocalizedText("en", "A list of ranges for numeric node ids which are the same in every server that exposes them."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 291), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 15188), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 15188), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(15182), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode803() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 15189), new QualifiedName(0, "StaticStringNodeIdPattern"), new LocalizedText("en", "StaticStringNodeIdPattern"), new LocalizedText("en", "A regular expression which matches string node ids are the same in every server that exposes them."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 15189), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 15189), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(15182), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode804() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11110), new QualifiedName(0, "TrueState"), new LocalizedText("en", "TrueState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11110), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11110), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11110), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode805() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11111), new QualifiedName(0, "FalseState"), new LocalizedText("en", "FalseState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11111), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11111), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11111), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8995), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode806() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11112), new QualifiedName(0, "ConditionClassId"), new LocalizedText("en", "ConditionClassId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11112), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11112), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11112), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2782), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode807() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11113), new QualifiedName(0, "ConditionClassName"), new LocalizedText("en", "ConditionClassName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11113), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11113), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11113), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2782), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode808() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11120), new QualifiedName(0, "InputNode"), new LocalizedText("en", "InputNode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11120), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11120), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11120), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2915), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode809() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11124), new QualifiedName(0, "HighHighLimit"), new LocalizedText("en", "HighHighLimit"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 11), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11124), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11124), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11124), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2955), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode810() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11125), new QualifiedName(0, "HighLimit"), new LocalizedText("en", "HighLimit"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 11), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11125), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11125), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11125), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2955), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode811() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11126), new QualifiedName(0, "LowLimit"), new LocalizedText("en", "LowLimit"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 11), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11126), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11126), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11126), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2955), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode812() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11127), new QualifiedName(0, "LowLowLimit"), new LocalizedText("en", "LowLowLimit"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 11), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11127), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11127), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11127), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2955), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode813() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11158), new QualifiedName(0, "NormalState"), new LocalizedText("en", "NormalState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11158), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11158), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11158), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(10637), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode814() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11168), new QualifiedName(0, "TreatUncertainAsBad"), new LocalizedText("en", "TreatUncertainAsBad"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11168), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11168), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11168), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3059), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode815() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11169), new QualifiedName(0, "PercentDataBad"), new LocalizedText("en", "PercentDataBad"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 3), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11169), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11169), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11169), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3059), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode816() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11170), new QualifiedName(0, "PercentDataGood"), new LocalizedText("en", "PercentDataGood"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 3), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11170), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11170), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11170), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3059), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode817() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11171), new QualifiedName(0, "UseSlopedExtrapolation"), new LocalizedText("en", "UseSlopedExtrapolation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11171), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11171), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11171), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3059), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode818() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2991), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2991), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2991), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2991), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2949), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ShelvingTime</Name><DataType><Identifier>i=290</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>If not 0, this parameter specifies a fixed time for which the Alarm is to be shelved.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode819() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2992), new QualifiedName(0, "SecondsTillShutdown"), new LocalizedText("en", "SecondsTillShutdown"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2992), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2992), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2256), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode820() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2993), new QualifiedName(0, "ShutdownReason"), new LocalizedText("en", "ShutdownReason"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2993), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2993), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2256), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode821() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 2994), new QualifiedName(0, "Auditing"), new LocalizedText("en", "Auditing"), new LocalizedText("en", "A flag indicating whether the server is currently generating audit events."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 2994), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2994), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2253), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode822() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11188), new QualifiedName(0, "TreatUncertainAsBad"), new LocalizedText("en", "TreatUncertainAsBad"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11188), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11188), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11188), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11187), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode823() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11189), new QualifiedName(0, "PercentDataBad"), new LocalizedText("en", "PercentDataBad"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 3), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11189), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11189), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11189), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11187), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode824() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 2998), new QualifiedName(0, "EventNotificationsCount"), new LocalizedText("en", "EventNotificationsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 2998), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2998), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 2998), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2172), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode825() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11190), new QualifiedName(0, "PercentDataGood"), new LocalizedText("en", "PercentDataGood"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 3), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11190), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11190), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11190), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11187), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode826() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11191), new QualifiedName(0, "UseSlopedExtrapolation"), new LocalizedText("en", "UseSlopedExtrapolation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11191), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11191), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11191), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11187), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode827() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11193), new QualifiedName(0, "AccessHistoryDataCapability"), new LocalizedText("en", "AccessHistoryDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11193), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11193), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11192), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode828() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3003), new QualifiedName(0, "Filter"), new LocalizedText("en", "Filter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 725), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3003), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3003), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3003), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2999), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode829() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11196), new QualifiedName(0, "InsertDataCapability"), new LocalizedText("en", "InsertDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11196), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11196), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11192), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode830() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11197), new QualifiedName(0, "ReplaceDataCapability"), new LocalizedText("en", "ReplaceDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11197), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11197), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11192), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode831() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11198), new QualifiedName(0, "UpdateDataCapability"), new LocalizedText("en", "UpdateDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11198), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11198), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11192), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode832() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11199), new QualifiedName(0, "DeleteRawCapability"), new LocalizedText("en", "DeleteRawCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11199), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11199), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11192), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode833() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11200), new QualifiedName(0, "DeleteAtTimeCapability"), new LocalizedText("en", "DeleteAtTimeCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11200), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11200), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11192), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode834() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11204), new QualifiedName(0, "TreatUncertainAsBad"), new LocalizedText("en", "TreatUncertainAsBad"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11204), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11204), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11203), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode835() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11205), new QualifiedName(0, "PercentDataBad"), new LocalizedText("en", "PercentDataBad"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 3), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11205), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11205), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11203), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode836() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11206), new QualifiedName(0, "PercentDataGood"), new LocalizedText("en", "PercentDataGood"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 3), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11206), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11206), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11203), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode837() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11207), new QualifiedName(0, "UseSlopedExtrapolation"), new LocalizedText("en", "UseSlopedExtrapolation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11207), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11207), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11203), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode838() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3015), new QualifiedName(0, "IsDeleteModified"), new LocalizedText("en", "IsDeleteModified"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3015), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3015), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3015), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3014), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode839() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11208), new QualifiedName(0, "Stepped"), new LocalizedText("en", "Stepped"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11208), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11208), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11202), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode840() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3016), new QualifiedName(0, "StartTime"), new LocalizedText("en", "StartTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3016), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3016), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3016), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3014), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode841() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3017), new QualifiedName(0, "EndTime"), new LocalizedText("en", "EndTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3017), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3017), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3017), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3014), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode842() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3020), new QualifiedName(0, "ReqTimes"), new LocalizedText("en", "ReqTimes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3020), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3020), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3020), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3019), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode843() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3021), new QualifiedName(0, "OldValues"), new LocalizedText("en", "OldValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 23), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3021), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3021), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3021), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3019), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode844() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11214), new QualifiedName(0, "Annotations"), new LocalizedText("en", "Annotations"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 891), -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11214), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode845() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11215), new QualifiedName(0, "HistoricalEventFilter"), new LocalizedText("en", "HistoricalEventFilter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 725), -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11215), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode846() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3023), new QualifiedName(0, "EventIds"), new LocalizedText("en", "EventIds"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3023), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3023), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3023), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3022), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode847() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3024), new QualifiedName(0, "OldValues"), new LocalizedText("en", "OldValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 920), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3024), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3024), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3024), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3022), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode848() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3025), new QualifiedName(0, "UpdatedNode"), new LocalizedText("en", "UpdatedNode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3025), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3025), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3025), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2999), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode849() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3026), new QualifiedName(0, "UpdatedNode"), new LocalizedText("en", "UpdatedNode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3026), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3026), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3026), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3006), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode850() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3027), new QualifiedName(0, "UpdatedNode"), new LocalizedText("en", "UpdatedNode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3027), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3027), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3027), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3012), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode851() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3028), new QualifiedName(0, "PerformInsertReplace"), new LocalizedText("en", "PerformInsertReplace"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 11293), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3028), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3028), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3028), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2999), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode852() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3029), new QualifiedName(0, "NewValues"), new LocalizedText("en", "NewValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 920), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3029), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3029), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3029), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2999), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode853() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3030), new QualifiedName(0, "OldValues"), new LocalizedText("en", "OldValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 920), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3030), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3030), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3030), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2999), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode854() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3031), new QualifiedName(0, "PerformInsertReplace"), new LocalizedText("en", "PerformInsertReplace"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 11293), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3031), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3031), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3031), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3006), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode855() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3032), new QualifiedName(0, "NewValues"), new LocalizedText("en", "NewValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 23), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3032), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3032), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3032), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3006), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode856() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3033), new QualifiedName(0, "OldValues"), new LocalizedText("en", "OldValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 23), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3033), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3033), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3033), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3006), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode857() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3034), new QualifiedName(0, "OldValues"), new LocalizedText("en", "OldValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 23), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3034), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3034), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3034), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3014), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode858() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3049), new QualifiedName(0, "SoftwareCertificates"), new LocalizedText("en", "SoftwareCertificates"), new LocalizedText("en", "The software certificates owned by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 344), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3049), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3049), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3049), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2013), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode859() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11241), new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7594), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11241), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11241), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11241), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11238), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode860() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3050), new QualifiedName(0, "MaxResponseMessageSize"), new LocalizedText("en", "MaxResponseMessageSize"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3050), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3050), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3050), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode861() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11242), new QualifiedName(0, "AccessHistoryEventsCapability"), new LocalizedText("en", "AccessHistoryEventsCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11242), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11242), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11192), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode862() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3052), new QualifiedName(0, "ProductUri"), new LocalizedText("en", "ProductUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3052), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3052), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3052), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3051), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode863() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3053), new QualifiedName(0, "ManufacturerName"), new LocalizedText("en", "ManufacturerName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3053), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3053), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3053), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3051), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode864() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3054), new QualifiedName(0, "ProductName"), new LocalizedText("en", "ProductName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3054), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3054), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3054), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3051), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode865() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3055), new QualifiedName(0, "SoftwareVersion"), new LocalizedText("en", "SoftwareVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3055), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3055), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3055), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3051), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode866() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3056), new QualifiedName(0, "BuildNumber"), new LocalizedText("en", "BuildNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3056), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3056), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3056), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3051), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode867() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3057), new QualifiedName(0, "BuildDate"), new LocalizedText("en", "BuildDate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3057), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3057), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3057), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3051), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode868() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3058), new QualifiedName(0, "ClientCertificate"), new LocalizedText("en", "ClientCertificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3058), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3058), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3058), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2244), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode869() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3067), new QualifiedName(0, "Icon"), new LocalizedText("en", "Icon"), new LocalizedText("en", "A small image representing the object."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 30), -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3067), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode870() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3068), new QualifiedName(0, "NodeVersion"), new LocalizedText("en", "NodeVersion"), new LocalizedText("en", "The version number of the node (used to indicate changes to references of the owning node)."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3068), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode871() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3069), new QualifiedName(0, "LocalTime"), new LocalizedText("en", "LocalTime"), new LocalizedText("en", "The local time where the owning variable value was collected."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 8912), -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3069), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode872() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3070), new QualifiedName(0, "AllowNulls"), new LocalizedText("en", "AllowNulls"), new LocalizedText("en", "Whether the value of the owning variable is allowed to be null."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3070), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode873() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3071), new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), new LocalizedText("en", "The human readable strings associated with the values of an enumerated value (when values have no sequence)."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7594), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3071), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode874() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3072), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), new LocalizedText("en", "The input arguments for a method."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3072), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode875() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3073), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), new LocalizedText("en", "The output arguments for a method."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3073), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode876() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3074), new QualifiedName(0, "StartTime"), new LocalizedText("en", "StartTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3074), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3074), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3074), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2007), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode877() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3075), new QualifiedName(0, "CurrentTime"), new LocalizedText("en", "CurrentTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3075), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3075), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3075), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2007), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode878() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3076), new QualifiedName(0, "State"), new LocalizedText("en", "State"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 852), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3076), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3076), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3076), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2007), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode879() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11268), new QualifiedName(0, "MaxReturnDataValues"), new LocalizedText("en", "MaxReturnDataValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11268), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11268), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11268), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2330), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode880() {
        BuildInfoTypeNode node = new BuildInfoTypeNode(this.context, new NodeId(0, 3077), new QualifiedName(0, "BuildInfo"), new LocalizedText("en", "BuildInfo"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 338), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3077), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3078), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3077), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3079), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3077), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3080), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3077), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3081), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3077), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3082), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3077), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3083), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3077), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3051), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3077), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3077), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2007), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode881() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11269), new QualifiedName(0, "MaxReturnEventValues"), new LocalizedText("en", "MaxReturnEventValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11269), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11269), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11269), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2330), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode882() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3078), new QualifiedName(0, "ProductUri"), new LocalizedText("en", "ProductUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3078), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3078), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3078), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3077), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode883() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11270), new QualifiedName(0, "InsertAnnotationCapability"), new LocalizedText("en", "InsertAnnotationCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11270), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11270), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11270), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2330), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode884() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3079), new QualifiedName(0, "ManufacturerName"), new LocalizedText("en", "ManufacturerName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3079), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3079), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3079), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3077), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode885() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3080), new QualifiedName(0, "ProductName"), new LocalizedText("en", "ProductName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3080), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3080), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3080), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3077), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode886() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3081), new QualifiedName(0, "SoftwareVersion"), new LocalizedText("en", "SoftwareVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3081), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3081), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3081), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3077), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode887() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11273), new QualifiedName(0, "MaxReturnDataValues"), new LocalizedText("en", "MaxReturnDataValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11273), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11273), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11192), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode888() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3082), new QualifiedName(0, "BuildNumber"), new LocalizedText("en", "BuildNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3082), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3082), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3082), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3077), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode889() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11274), new QualifiedName(0, "MaxReturnEventValues"), new LocalizedText("en", "MaxReturnEventValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11274), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11274), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11192), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode890() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3083), new QualifiedName(0, "BuildDate"), new LocalizedText("en", "BuildDate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3083), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3083), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3083), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3077), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode891() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11275), new QualifiedName(0, "InsertAnnotationCapability"), new LocalizedText("en", "InsertAnnotationCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11275), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11275), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11192), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode892() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3084), new QualifiedName(0, "SecondsTillShutdown"), new LocalizedText("en", "SecondsTillShutdown"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3084), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3084), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3084), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2007), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode893() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3085), new QualifiedName(0, "ShutdownReason"), new LocalizedText("en", "ShutdownReason"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3085), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3085), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3085), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2007), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode894() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3086), new QualifiedName(0, "ServerProfileArray"), new LocalizedText("en", "ServerProfileArray"), new LocalizedText("en", "A list of profiles supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3086), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3086), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3086), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2009), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode895() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11278), new QualifiedName(0, "InsertEventCapability"), new LocalizedText("en", "InsertEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11278), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11278), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11278), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2330), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode896() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3087), new QualifiedName(0, "LocaleIdArray"), new LocalizedText("en", "LocaleIdArray"), new LocalizedText("en", "A list of locales supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 295), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3087), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3087), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3087), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2009), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode897() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11279), new QualifiedName(0, "ReplaceEventCapability"), new LocalizedText("en", "ReplaceEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11279), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11279), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11279), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2330), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode898() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3088), new QualifiedName(0, "MinSupportedSampleRate"), new LocalizedText("en", "MinSupportedSampleRate"), new LocalizedText("en", "The minimum sampling interval supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3088), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3088), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3088), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2009), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode899() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11280), new QualifiedName(0, "UpdateEventCapability"), new LocalizedText("en", "UpdateEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11280), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11280), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11280), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2330), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode900() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3089), new QualifiedName(0, "MaxBrowseContinuationPoints"), new LocalizedText("en", "MaxBrowseContinuationPoints"), new LocalizedText("en", "The maximum number of continuation points for Browse operations per session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3089), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3089), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3089), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2009), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode901() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11281), new QualifiedName(0, "InsertEventCapability"), new LocalizedText("en", "InsertEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11281), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11281), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11192), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode902() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3090), new QualifiedName(0, "MaxQueryContinuationPoints"), new LocalizedText("en", "MaxQueryContinuationPoints"), new LocalizedText("en", "The maximum number of continuation points for Query operations per session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3090), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3090), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3090), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2009), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode903() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11282), new QualifiedName(0, "ReplaceEventCapability"), new LocalizedText("en", "ReplaceEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11282), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11282), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11192), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode904() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3091), new QualifiedName(0, "MaxHistoryContinuationPoints"), new LocalizedText("en", "MaxHistoryContinuationPoints"), new LocalizedText("en", "The maximum number of continuation points for ReadHistory operations per session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3091), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3091), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3091), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2009), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode905() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11283), new QualifiedName(0, "UpdateEventCapability"), new LocalizedText("en", "UpdateEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11283), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11283), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11192), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode906() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3092), new QualifiedName(0, "SoftwareCertificates"), new LocalizedText("en", "SoftwareCertificates"), new LocalizedText("en", "The software certificates owned by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 344), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3092), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3092), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3092), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2009), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode907() {
        ServerDiagnosticsSummaryTypeNode node = new ServerDiagnosticsSummaryTypeNode(this.context, new NodeId(0, 3095), new QualifiedName(0, "ServerDiagnosticsSummary"), new LocalizedText("en", "ServerDiagnosticsSummary"), new LocalizedText("en", "A summary of server level diagnostics."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 859), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3096), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3097), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3098), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3099), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3100), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3101), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3102), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3104), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3105), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3106), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3107), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3108), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2150), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3095), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2010), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode908() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3096), new QualifiedName(0, "ServerViewCount"), new LocalizedText("en", "ServerViewCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3096), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3096), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3096), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3095), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode909() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3097), new QualifiedName(0, "CurrentSessionCount"), new LocalizedText("en", "CurrentSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3097), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3097), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3097), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3095), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode910() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3098), new QualifiedName(0, "CumulatedSessionCount"), new LocalizedText("en", "CumulatedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3098), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3098), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3095), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode911() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3099), new QualifiedName(0, "SecurityRejectedSessionCount"), new LocalizedText("en", "SecurityRejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3099), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3099), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3099), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3095), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode912() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3100), new QualifiedName(0, "RejectedSessionCount"), new LocalizedText("en", "RejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3100), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3100), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3100), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3095), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode913() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3101), new QualifiedName(0, "SessionTimeoutCount"), new LocalizedText("en", "SessionTimeoutCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3101), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3101), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3101), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3095), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode914() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3102), new QualifiedName(0, "SessionAbortCount"), new LocalizedText("en", "SessionAbortCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3102), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3102), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3102), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3095), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode915() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3104), new QualifiedName(0, "PublishingIntervalCount"), new LocalizedText("en", "PublishingIntervalCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3104), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3104), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3104), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3095), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode916() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3105), new QualifiedName(0, "CurrentSubscriptionCount"), new LocalizedText("en", "CurrentSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3105), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3105), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3105), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3095), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode917() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3106), new QualifiedName(0, "CumulatedSubscriptionCount"), new LocalizedText("en", "CumulatedSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3106), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3106), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3106), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3095), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode918() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3107), new QualifiedName(0, "SecurityRejectedRequestsCount"), new LocalizedText("en", "SecurityRejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3107), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3107), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3107), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3095), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode919() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3108), new QualifiedName(0, "RejectedRequestsCount"), new LocalizedText("en", "RejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3108), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3108), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3108), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3095), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode920() {
        SubscriptionDiagnosticsArrayTypeNode node = new SubscriptionDiagnosticsArrayTypeNode(this.context, new NodeId(0, 3110), new QualifiedName(0, "SubscriptionDiagnosticsArray"), new LocalizedText("en", "SubscriptionDiagnosticsArray"), new LocalizedText("en", "A list of diagnostics for each active subscription."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 874), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3110), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2171), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3110), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3110), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2010), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode921() {
        SessionDiagnosticsArrayTypeNode node = new SessionDiagnosticsArrayTypeNode(this.context, new NodeId(0, 3112), new QualifiedName(0, "SessionDiagnosticsArray"), new LocalizedText("en", "SessionDiagnosticsArray"), new LocalizedText("en", "A list of diagnostics for each active session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 865), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3112), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2196), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3112), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3112), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3111), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode922() {
        SessionSecurityDiagnosticsArrayTypeNode node = new SessionSecurityDiagnosticsArrayTypeNode(this.context, new NodeId(0, 3113), new QualifiedName(0, "SessionSecurityDiagnosticsArray"), new LocalizedText("en", "SessionSecurityDiagnosticsArray"), new LocalizedText("en", "A list of security related diagnostics for each active session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 868), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3113), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2243), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3113), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3113), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3111), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode923() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3114), new QualifiedName(0, "EnabledFlag"), new LocalizedText("en", "EnabledFlag"), new LocalizedText("en", "If TRUE the diagnostics collection is enabled."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(3), UByte.valueOf(3), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3114), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3114), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3114), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2010), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode924() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3115), new QualifiedName(0, "RedundancySupport"), new LocalizedText("en", "RedundancySupport"), new LocalizedText("en", "Indicates what style of redundancy is supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 851), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3115), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3115), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3115), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2012), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode925() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3116), new QualifiedName(0, "ServerViewCount"), new LocalizedText("en", "ServerViewCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3116), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3116), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3116), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode926() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3117), new QualifiedName(0, "CurrentSessionCount"), new LocalizedText("en", "CurrentSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3117), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3117), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3117), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode927() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3118), new QualifiedName(0, "CumulatedSessionCount"), new LocalizedText("en", "CumulatedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3118), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3118), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3118), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode928() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3119), new QualifiedName(0, "SecurityRejectedSessionCount"), new LocalizedText("en", "SecurityRejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3119), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3119), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3119), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode929() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3120), new QualifiedName(0, "RejectedSessionCount"), new LocalizedText("en", "RejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3120), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3120), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3120), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode930() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11312), new QualifiedName(0, "CurrentServerId"), new LocalizedText("en", "CurrentServerId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11312), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11312), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2296), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode931() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3121), new QualifiedName(0, "SessionTimeoutCount"), new LocalizedText("en", "SessionTimeoutCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3121), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3121), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3121), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode932() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11313), new QualifiedName(0, "RedundantServerArray"), new LocalizedText("en", "RedundantServerArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 853), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11313), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11313), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2296), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode933() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3122), new QualifiedName(0, "SessionAbortCount"), new LocalizedText("en", "SessionAbortCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3122), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3122), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3122), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode934() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11314), new QualifiedName(0, "ServerUriArray"), new LocalizedText("en", "ServerUriArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11314), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11314), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2296), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode935() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3124), new QualifiedName(0, "PublishingIntervalCount"), new LocalizedText("en", "PublishingIntervalCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3124), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3124), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3124), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode936() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3125), new QualifiedName(0, "CurrentSubscriptionCount"), new LocalizedText("en", "CurrentSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3125), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3125), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3125), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode937() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3126), new QualifiedName(0, "CumulatedSubscriptionCount"), new LocalizedText("en", "CumulatedSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3126), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3126), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3126), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode938() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3127), new QualifiedName(0, "SecurityRejectedRequestsCount"), new LocalizedText("en", "SecurityRejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3127), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3127), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3127), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode939() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3128), new QualifiedName(0, "RejectedRequestsCount"), new LocalizedText("en", "RejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3128), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3128), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3128), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode940() {
        SessionDiagnosticsArrayTypeNode node = new SessionDiagnosticsArrayTypeNode(this.context, new NodeId(0, 3129), new QualifiedName(0, "SessionDiagnosticsArray"), new LocalizedText("en", "SessionDiagnosticsArray"), new LocalizedText("en", "A list of diagnostics for each active session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 865), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3129), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2196), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3129), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3129), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2744), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode941() {
        SessionSecurityDiagnosticsArrayTypeNode node = new SessionSecurityDiagnosticsArrayTypeNode(this.context, new NodeId(0, 3130), new QualifiedName(0, "SessionSecurityDiagnosticsArray"), new LocalizedText("en", "SessionSecurityDiagnosticsArray"), new LocalizedText("en", "A list of security related diagnostics for each active session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 868), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3130), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2243), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3130), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3130), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2744), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode942() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11322), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11322), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11322), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11322), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2935), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode943() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3131), new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3131), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3131), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3131), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode944() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11323), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11323), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11323), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11323), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2936), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode945() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3132), new QualifiedName(0, "SessionName"), new LocalizedText("en", "SessionName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3132), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3132), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3132), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode946() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11324), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11324), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11324), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11324), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2940), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode947() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3133), new QualifiedName(0, "ClientDescription"), new LocalizedText("en", "ClientDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 308), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3133), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3133), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3133), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode948() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11325), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11325), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11325), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11325), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2942), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode949() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3134), new QualifiedName(0, "ServerUri"), new LocalizedText("en", "ServerUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3134), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3134), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3134), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode950() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11326), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11326), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11326), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11326), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2943), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode951() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3135), new QualifiedName(0, "EndpointUrl"), new LocalizedText("en", "EndpointUrl"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3135), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3135), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3135), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode952() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11327), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11327), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11327), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11327), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2945), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode953() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3136), new QualifiedName(0, "LocaleIds"), new LocalizedText("en", "LocaleIds"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 295), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3136), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3136), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3136), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode954() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3137), new QualifiedName(0, "ActualSessionTimeout"), new LocalizedText("en", "ActualSessionTimeout"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3137), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3137), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3137), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode955() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3138), new QualifiedName(0, "MaxResponseMessageSize"), new LocalizedText("en", "MaxResponseMessageSize"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3138), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3138), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3138), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode956() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3139), new QualifiedName(0, "ClientConnectionTime"), new LocalizedText("en", "ClientConnectionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3139), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3139), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3139), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode957() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3140), new QualifiedName(0, "ClientLastContactTime"), new LocalizedText("en", "ClientLastContactTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3140), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3140), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3140), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode958() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3141), new QualifiedName(0, "CurrentSubscriptionsCount"), new LocalizedText("en", "CurrentSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3141), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3141), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3141), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode959() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3142), new QualifiedName(0, "CurrentMonitoredItemsCount"), new LocalizedText("en", "CurrentMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3142), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3142), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode960() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3143), new QualifiedName(0, "CurrentPublishRequestsInQueue"), new LocalizedText("en", "CurrentPublishRequestsInQueue"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3143), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3143), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3143), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode961() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11340), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11340), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11340), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11340), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9337), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode962() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11341), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11341), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11341), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11341), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9338), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode963() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11342), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11342), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11342), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11342), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9339), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode964() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3151), new QualifiedName(0, "ReadCount"), new LocalizedText("en", "ReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3151), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3151), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3151), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode965() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11343), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11343), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11343), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11343), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(9340), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode966() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3152), new QualifiedName(0, "HistoryReadCount"), new LocalizedText("en", "HistoryReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3152), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3152), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3152), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode967() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3153), new QualifiedName(0, "WriteCount"), new LocalizedText("en", "WriteCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3153), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3153), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3153), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode968() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3154), new QualifiedName(0, "HistoryUpdateCount"), new LocalizedText("en", "HistoryUpdateCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3154), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3154), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3154), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode969() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3155), new QualifiedName(0, "CallCount"), new LocalizedText("en", "CallCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3155), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3155), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3155), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode970() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3156), new QualifiedName(0, "CreateMonitoredItemsCount"), new LocalizedText("en", "CreateMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3156), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3156), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3156), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode971() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3157), new QualifiedName(0, "ModifyMonitoredItemsCount"), new LocalizedText("en", "ModifyMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3157), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3157), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3157), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode972() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3158), new QualifiedName(0, "SetMonitoringModeCount"), new LocalizedText("en", "SetMonitoringModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3158), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3158), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3158), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode973() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3159), new QualifiedName(0, "SetTriggeringCount"), new LocalizedText("en", "SetTriggeringCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3159), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3159), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3159), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode974() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3160), new QualifiedName(0, "DeleteMonitoredItemsCount"), new LocalizedText("en", "DeleteMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3160), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3160), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3160), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode975() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3161), new QualifiedName(0, "CreateSubscriptionCount"), new LocalizedText("en", "CreateSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3161), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3161), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3161), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode976() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3162), new QualifiedName(0, "ModifySubscriptionCount"), new LocalizedText("en", "ModifySubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3162), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3162), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3162), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode977() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3163), new QualifiedName(0, "SetPublishingModeCount"), new LocalizedText("en", "SetPublishingModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3163), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3163), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3163), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode978() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3164), new QualifiedName(0, "PublishCount"), new LocalizedText("en", "PublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3164), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3164), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3164), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode979() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3165), new QualifiedName(0, "RepublishCount"), new LocalizedText("en", "RepublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3165), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3165), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3165), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode980() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3166), new QualifiedName(0, "TransferSubscriptionsCount"), new LocalizedText("en", "TransferSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3166), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3166), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3166), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode981() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3167), new QualifiedName(0, "DeleteSubscriptionsCount"), new LocalizedText("en", "DeleteSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3167), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3167), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3167), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode982() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3168), new QualifiedName(0, "AddNodesCount"), new LocalizedText("en", "AddNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3168), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3168), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3168), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode983() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3169), new QualifiedName(0, "AddReferencesCount"), new LocalizedText("en", "AddReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3169), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3169), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3169), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode984() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3170), new QualifiedName(0, "DeleteNodesCount"), new LocalizedText("en", "DeleteNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3170), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3170), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3170), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode985() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3171), new QualifiedName(0, "DeleteReferencesCount"), new LocalizedText("en", "DeleteReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3171), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3171), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3171), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode986() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3172), new QualifiedName(0, "BrowseCount"), new LocalizedText("en", "BrowseCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3172), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3172), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3172), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode987() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3173), new QualifiedName(0, "BrowseNextCount"), new LocalizedText("en", "BrowseNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3173), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3173), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3173), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode988() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3174), new QualifiedName(0, "TranslateBrowsePathsToNodeIdsCount"), new LocalizedText("en", "TranslateBrowsePathsToNodeIdsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3174), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3174), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3174), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode989() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3175), new QualifiedName(0, "QueryFirstCount"), new LocalizedText("en", "QueryFirstCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3175), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3175), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3175), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode990() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3176), new QualifiedName(0, "QueryNextCount"), new LocalizedText("en", "QueryNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3176), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3176), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3176), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode991() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3177), new QualifiedName(0, "RegisterNodesCount"), new LocalizedText("en", "RegisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3177), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3177), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3177), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode992() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3178), new QualifiedName(0, "UnregisterNodesCount"), new LocalizedText("en", "UnregisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3178), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3178), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3178), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode993() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3179), new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3179), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3179), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3179), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2031), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode994() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3180), new QualifiedName(0, "ClientUserIdOfSession"), new LocalizedText("en", "ClientUserIdOfSession"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3180), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3180), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3180), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2031), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode995() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3181), new QualifiedName(0, "ClientUserIdHistory"), new LocalizedText("en", "ClientUserIdHistory"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3181), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3181), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3181), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2031), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode996() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3182), new QualifiedName(0, "AuthenticationMechanism"), new LocalizedText("en", "AuthenticationMechanism"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3182), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3182), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3182), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2031), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode997() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3183), new QualifiedName(0, "Encoding"), new LocalizedText("en", "Encoding"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3183), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3183), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3183), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2031), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode998() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3184), new QualifiedName(0, "TransportProtocol"), new LocalizedText("en", "TransportProtocol"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3184), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3184), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3184), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2031), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode999() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3185), new QualifiedName(0, "SecurityMode"), new LocalizedText("en", "SecurityMode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 302), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3185), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3185), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3185), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2031), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1000() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3186), new QualifiedName(0, "SecurityPolicyUri"), new LocalizedText("en", "SecurityPolicyUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3186), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3186), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3186), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2031), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1001() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3187), new QualifiedName(0, "ClientCertificate"), new LocalizedText("en", "ClientCertificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3187), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3187), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3187), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2031), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1002() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3190), new QualifiedName(0, "LocalTime"), new LocalizedText("en", "LocalTime"), new LocalizedText("en", "Information about the local time where the event originated."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 8912), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3190), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3190), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3190), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2041), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1003() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11432), new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), new LocalizedText("en", "The human readable strings associated with the values of an enumerated value (when values are sequential)."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11432), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode1004() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11433), new QualifiedName(0, "ValueAsText"), new LocalizedText("en", "ValueAsText"), new LocalizedText("en", "The string representation of the current value for a variable with an enumerated data type."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11433), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode1005() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11456), new QualifiedName(0, "EffectiveTransitionTime"), new LocalizedText("en", "EffectiveTransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11456), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11456), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11456), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2762), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1006() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11461), new QualifiedName(0, "ValueAsText"), new LocalizedText("en", "ValueAsText"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11461), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11461), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11461), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11238), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1007() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11485), new QualifiedName(0, "SecureChannelId"), new LocalizedText("en", "SecureChannelId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11485), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11485), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11485), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2075), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1008() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11488), new QualifiedName(0, "OptionSetValues"), new LocalizedText("en", "OptionSetValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11488), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11488), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11488), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11487), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1009() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11490), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11490), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11490), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11490), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11489), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1010() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11491), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11491), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11491), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11491), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11489), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ServerHandles</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ClientHandles</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1011() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11493), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11493), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11493), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11492), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1012() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11494), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11494), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11494), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11492), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ServerHandles</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ClientHandles</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1013() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11498), new QualifiedName(0, "MaxStringLength"), new LocalizedText("en", "MaxStringLength"), new LocalizedText("en", "The maximum length for a string that can be stored in the owning variable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11498), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode1014() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11499), new QualifiedName(0, "StartOfArchive"), new LocalizedText("en", "StartOfArchive"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11499), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11499), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11499), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2318), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1015() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11500), new QualifiedName(0, "StartOfOnlineArchive"), new LocalizedText("en", "StartOfOnlineArchive"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11500), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11500), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11500), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2318), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1016() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11501), new QualifiedName(0, "DeleteEventCapability"), new LocalizedText("en", "DeleteEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11501), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11501), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11501), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2330), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1017() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11502), new QualifiedName(0, "DeleteEventCapability"), new LocalizedText("en", "DeleteEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11502), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11502), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11192), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1018() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11509), new QualifiedName(0, "NamingRule"), new LocalizedText("en", "NamingRule"), new LocalizedText("en", "Specified the significances of the BrowseName when a type is instantiated."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 120), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11509), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11509), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11508), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Int32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">2</Int32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1019() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11511), new QualifiedName(0, "NamingRule"), new LocalizedText("en", "NamingRule"), new LocalizedText("en", "Specified the significances of the BrowseName when a type is instantiated."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 120), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11511), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11511), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11510), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Int32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">1</Int32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1020() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11512), new QualifiedName(0, "MaxArrayLength"), new LocalizedText("en", "MaxArrayLength"), new LocalizedText("en", "The maximum length for an array that can be stored in the owning variable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11512), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode1021() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11513), new QualifiedName(0, "EngineeringUnits"), new LocalizedText("en", "EngineeringUnits"), new LocalizedText("en", "The engineering units for the value of the owning variable."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 887), -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11513), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode1022() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11549), new QualifiedName(0, "MaxArrayLength"), new LocalizedText("en", "MaxArrayLength"), new LocalizedText("en", "The maximum length for an array value supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11549), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11549), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11549), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2013), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1023() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11550), new QualifiedName(0, "MaxStringLength"), new LocalizedText("en", "MaxStringLength"), new LocalizedText("en", "The maximum length for a string value supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11550), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11550), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11550), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2013), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1024() {
        ServerVendorCapabilityTypeNode node = new ServerVendorCapabilityTypeNode(this.context, new NodeId(0, 11562), new QualifiedName(0, "<VendorCapability>"), new LocalizedText("en", "<VendorCapability>"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11562), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2137), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11562), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11508), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11562), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2013), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1025() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11565), new QualifiedName(0, "MaxNodesPerRead"), new LocalizedText("en", "MaxNodesPerRead"), new LocalizedText("en", "The maximum number of operations in a single Read request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11565), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11565), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11565), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11564), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1026() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11567), new QualifiedName(0, "MaxNodesPerWrite"), new LocalizedText("en", "MaxNodesPerWrite"), new LocalizedText("en", "The maximum number of operations in a single Write request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11567), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11567), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11567), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11564), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1027() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11569), new QualifiedName(0, "MaxNodesPerMethodCall"), new LocalizedText("en", "MaxNodesPerMethodCall"), new LocalizedText("en", "The maximum number of operations in a single Call request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11569), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11569), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11569), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11564), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1028() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11570), new QualifiedName(0, "MaxNodesPerBrowse"), new LocalizedText("en", "MaxNodesPerBrowse"), new LocalizedText("en", "The maximum number of operations in a single Browse request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11570), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11570), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11570), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11564), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1029() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11571), new QualifiedName(0, "MaxNodesPerRegisterNodes"), new LocalizedText("en", "MaxNodesPerRegisterNodes"), new LocalizedText("en", "The maximum number of operations in a single RegisterNodes request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11571), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11571), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11571), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11564), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1030() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11572), new QualifiedName(0, "MaxNodesPerTranslateBrowsePathsToNodeIds"), new LocalizedText("en", "MaxNodesPerTranslateBrowsePathsToNodeIds"), new LocalizedText("en", "The maximum number of operations in a single TranslateBrowsePathsToNodeIds request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11572), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11572), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11572), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11564), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1031() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11573), new QualifiedName(0, "MaxNodesPerNodeManagement"), new LocalizedText("en", "MaxNodesPerNodeManagement"), new LocalizedText("en", "The maximum number of operations in a single AddNodes, AddReferences, DeleteNodes or DeleteReferences request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11573), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11573), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11573), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11564), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1032() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11574), new QualifiedName(0, "MaxMonitoredItemsPerCall"), new LocalizedText("en", "MaxMonitoredItemsPerCall"), new LocalizedText("en", "The maximum number of operations in a single MonitoredItem related request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11574), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11574), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11574), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11564), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1033() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11576), new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), new LocalizedText("en", "The size of the file in bytes."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 9), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11576), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11576), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11576), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11575), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1034() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11579), new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), new LocalizedText("en", "The current number of open file handles."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11579), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11579), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11579), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11575), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1035() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11581), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11581), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11581), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11581), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11580), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1036() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11582), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11582), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11582), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11582), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11580), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1037() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11584), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11584), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11584), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11584), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11583), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1038() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11586), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11586), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11586), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11586), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11585), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1039() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11587), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11587), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11587), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11587), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11585), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1040() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11589), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11589), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11589), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11589), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11588), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1041() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11591), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11591), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11591), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11591), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11590), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1042() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11592), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11592), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11592), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11592), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11590), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1043() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11594), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11594), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11594), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11594), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11593), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1044() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11617), new QualifiedName(0, "NamespaceUri"), new LocalizedText("en", "NamespaceUri"), new LocalizedText("en", "The URI of the namespace."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11617), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11617), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11617), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11616), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1045() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11618), new QualifiedName(0, "NamespaceVersion"), new LocalizedText("en", "NamespaceVersion"), new LocalizedText("en", "The human readable string representing version of the namespace."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11618), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11618), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11618), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11616), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1046() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11619), new QualifiedName(0, "NamespacePublicationDate"), new LocalizedText("en", "NamespacePublicationDate"), new LocalizedText("en", "The publication date for the namespace."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 13), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11619), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11619), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11619), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11616), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1047() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11620), new QualifiedName(0, "IsNamespaceSubset"), new LocalizedText("en", "IsNamespaceSubset"), new LocalizedText("en", "If TRUE then the server only supports a subset of the namespace."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11620), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11620), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11620), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11616), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1048() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11621), new QualifiedName(0, "StaticNodeIdTypes"), new LocalizedText("en", "StaticNodeIdTypes"), new LocalizedText("en", "A list of IdTypes for nodes which are the same in every server that exposes them."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 256), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11621), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11621), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11621), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11616), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1049() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11622), new QualifiedName(0, "StaticNumericNodeIdRange"), new LocalizedText("en", "StaticNumericNodeIdRange"), new LocalizedText("en", "A list of ranges for numeric node ids which are the same in every server that exposes them."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 291), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11622), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11622), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11622), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11616), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1050() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11623), new QualifiedName(0, "StaticStringNodeIdPattern"), new LocalizedText("en", "StaticStringNodeIdPattern"), new LocalizedText("en", "A regular expression which matches string node ids are the same in every server that exposes them."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11623), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11623), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11623), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11616), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1051() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11625), new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), new LocalizedText("en", "The size of the file in bytes."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 9), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11625), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11625), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11625), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11624), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1052() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11628), new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), new LocalizedText("en", "The current number of open file handles."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11628), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11628), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11628), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11624), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1053() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11630), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11630), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11630), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11630), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11629), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1054() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11631), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11631), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11631), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11631), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11629), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1055() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11633), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11633), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11633), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11633), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11632), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1056() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11635), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11635), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11635), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11635), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11634), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1057() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11636), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11636), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11636), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11636), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11634), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1058() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11638), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11638), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11638), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11638), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11637), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1059() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11640), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11640), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11640), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11640), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11639), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1060() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11641), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11641), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11641), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11641), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11639), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1061() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11643), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11643), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11643), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11643), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11642), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1062() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11647), new QualifiedName(0, "NamespaceUri"), new LocalizedText("en", "NamespaceUri"), new LocalizedText("en", "The URI of the namespace."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11647), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11647), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11647), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11646), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1063() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11648), new QualifiedName(0, "NamespaceVersion"), new LocalizedText("en", "NamespaceVersion"), new LocalizedText("en", "The human readable string representing version of the namespace."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11648), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11648), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11648), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11646), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1064() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11649), new QualifiedName(0, "NamespacePublicationDate"), new LocalizedText("en", "NamespacePublicationDate"), new LocalizedText("en", "The publication date for the namespace."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 13), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11649), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11649), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11649), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11646), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1065() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11650), new QualifiedName(0, "IsNamespaceSubset"), new LocalizedText("en", "IsNamespaceSubset"), new LocalizedText("en", "If TRUE then the server only supports a subset of the namespace."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11650), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11650), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11650), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11646), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1066() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11651), new QualifiedName(0, "StaticNodeIdTypes"), new LocalizedText("en", "StaticNodeIdTypes"), new LocalizedText("en", "A list of IdTypes for nodes which are the same in every server that exposes them."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 256), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11651), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11651), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11651), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11646), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1067() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11652), new QualifiedName(0, "StaticNumericNodeIdRange"), new LocalizedText("en", "StaticNumericNodeIdRange"), new LocalizedText("en", "A list of ranges for numeric node ids which are the same in every server that exposes them."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 291), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11652), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11652), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11652), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11646), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1068() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11653), new QualifiedName(0, "StaticStringNodeIdPattern"), new LocalizedText("en", "StaticStringNodeIdPattern"), new LocalizedText("en", "A regular expression which matches string node ids are the same in every server that exposes them."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11653), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11653), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11653), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11646), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1069() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11676), new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), new LocalizedText("en", "The size of the file in bytes."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 9), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11676), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11676), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11676), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11675), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1070() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11679), new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), new LocalizedText("en", "The current number of open file handles."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 5), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11679), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11679), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11679), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11675), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1071() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11681), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11681), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11681), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11681), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11680), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1072() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11682), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11682), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11682), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11682), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11680), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1073() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11684), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11684), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11684), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11684), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11683), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1074() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11686), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11686), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11686), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11686), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11685), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1075() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11687), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11687), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11687), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11687), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11685), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1076() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 7591), new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7591), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7591), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7591), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(256), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><LocalizedText><Locale>          </Locale><Text>Numeric</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>String</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Guid</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Opaque</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1077() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11689), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11689), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11689), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11689), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11688), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1078() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11691), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11691), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11691), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11691), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11690), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1079() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 7595), new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7595), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7595), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7595), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(302), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><LocalizedText><Locale>          </Locale><Text>Invalid</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>None</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Sign</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>SignAndEncrypt</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1080() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11692), new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11692), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11692), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11692), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11690), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1081() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 7596), new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7596), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7596), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7596), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(303), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><LocalizedText><Locale>          </Locale><Text>Anonymous</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>UserName</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Certificate</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>IssuedToken</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1082() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 7597), new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7597), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7597), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7597), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(307), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><LocalizedText><Locale>          </Locale><Text>Server</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Client</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>ClientAndServer</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>DiscoveryServer</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1083() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11694), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11694), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11694), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11694), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11693), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1084() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 7598), new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7598), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7598), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7598), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(315), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><LocalizedText><Locale>          </Locale><Text>Issue</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Renew</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1085() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11696), new QualifiedName(0, "SystemState"), new LocalizedText("en", "SystemState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 852), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11696), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11696), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11696), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11446), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1086() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 11697), new QualifiedName(0, "SampledMonitoredItemsCount"), new LocalizedText("en", "SampledMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11697), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11697), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11697), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2165), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1087() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 11698), new QualifiedName(0, "MaxSampledMonitoredItemsCount"), new LocalizedText("en", "MaxSampledMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11698), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11698), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11698), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2165), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1088() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 11699), new QualifiedName(0, "DisabledMonitoredItemsSamplingCount"), new LocalizedText("en", "DisabledMonitoredItemsSamplingCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11699), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11699), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11699), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2165), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1089() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11701), new QualifiedName(0, "BitMask"), new LocalizedText("en", "BitMask"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11701), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11701), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11701), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11487), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1090() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 7605), new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7605), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7605), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7605), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(576), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><LocalizedText><Locale>          </Locale><Text>Equals</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>IsNull</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>GreaterThan</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>LessThan</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>GreaterThanOrEqual</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>LessThanOrEqual</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Like</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Not</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Between</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>InList</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>And</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Or</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Cast</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>InView</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>OfType</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>RelatedTo</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>BitwiseAnd</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>BitwiseOr</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1091() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11702), new QualifiedName(0, "MaxArrayLength"), new LocalizedText("en", "MaxArrayLength"), new LocalizedText("en", "The maximum length for an array value supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11702), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11702), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2268), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1092() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11703), new QualifiedName(0, "MaxStringLength"), new LocalizedText("en", "MaxStringLength"), new LocalizedText("en", "The maximum length for a string value supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11703), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11703), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2268), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1093() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11705), new QualifiedName(0, "MaxNodesPerRead"), new LocalizedText("en", "MaxNodesPerRead"), new LocalizedText("en", "The maximum number of operations in a single Read request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11705), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11705), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11704), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1094() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11707), new QualifiedName(0, "MaxNodesPerWrite"), new LocalizedText("en", "MaxNodesPerWrite"), new LocalizedText("en", "The maximum number of operations in a single Write request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11707), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11707), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11704), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1095() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 7611), new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7611), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7611), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7611), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(851), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><LocalizedText><Locale>          </Locale><Text>None</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Cold</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Warm</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Hot</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Transparent</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>HotAndMirrored</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1096() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 7612), new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7612), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7612), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7612), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(852), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><LocalizedText><Locale>          </Locale><Text>Running</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Failed</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>NoConfiguration</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Suspended</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Shutdown</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Test</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>CommunicationFault</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Unknown</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1097() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11709), new QualifiedName(0, "MaxNodesPerMethodCall"), new LocalizedText("en", "MaxNodesPerMethodCall"), new LocalizedText("en", "The maximum number of operations in a single Call request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11709), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11709), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11704), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1098() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11710), new QualifiedName(0, "MaxNodesPerBrowse"), new LocalizedText("en", "MaxNodesPerBrowse"), new LocalizedText("en", "The maximum number of operations in a single Browse request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11710), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11710), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11704), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1099() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 7614), new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7614), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7614), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7614), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(890), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><LocalizedText><Locale>          </Locale><Text>AbsoluteValue</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>PercentOfValue</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>PercentOfRange</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>PercentOfEURange</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Unknown</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1100() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11711), new QualifiedName(0, "MaxNodesPerRegisterNodes"), new LocalizedText("en", "MaxNodesPerRegisterNodes"), new LocalizedText("en", "The maximum number of operations in a single RegisterNodes request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11711), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11711), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11704), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1101() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11712), new QualifiedName(0, "MaxNodesPerTranslateBrowsePathsToNodeIds"), new LocalizedText("en", "MaxNodesPerTranslateBrowsePathsToNodeIds"), new LocalizedText("en", "The maximum number of operations in a single TranslateBrowsePathsToNodeIds request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11712), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11712), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11704), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1102() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11713), new QualifiedName(0, "MaxNodesPerNodeManagement"), new LocalizedText("en", "MaxNodesPerNodeManagement"), new LocalizedText("en", "The maximum number of operations in a single AddNodes, AddReferences, DeleteNodes or DeleteReferences request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11713), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11713), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11704), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1103() throws IOException, SAXException {
        DataTypeDictionaryTypeNode node = new DataTypeDictionaryTypeNode(this.context, new NodeId(0, 7617), new QualifiedName(0, "Opc.Ua"), new LocalizedText("en", "Opc.Ua"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7619), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12681), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7650), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7656), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12767), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12770), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8914), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7665), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12213), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7662), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7668), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7782), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12902), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12905), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7698), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7671), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7674), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7677), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7680), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7683), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7728), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7731), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7734), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7737), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12718), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12721), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7686), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7929), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7932), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7935), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7938), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7941), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7944), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7947), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8004), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8067), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8073), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8076), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8172), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7692), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8208), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11959), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11962), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8211), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8214), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8217), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8220), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8223), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8226), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7659), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8229), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8232), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8235), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8238), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8241), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12183), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12186), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12091), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12094), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8247), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8244), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(93), UInteger.valueOf(0)), false));
        node.addReference(new Reference(new NodeId(0, 7617), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(72), UInteger.valueOf(0)), true));
        StringBuilder sb = new StringBuilder();
        sb.append("<ByteString xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">");
        sb.append("");
        sb.append("");
        sb.append("");
        sb.append("");
        sb.append("</ByteString>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1104() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11714), new QualifiedName(0, "MaxMonitoredItemsPerCall"), new LocalizedText("en", "MaxMonitoredItemsPerCall"), new LocalizedText("en", "The maximum number of operations in a single MonitoredItem related request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11714), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11714), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11704), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1105() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 7619), new QualifiedName(0, "NamespaceUri"), new LocalizedText("en", "NamespaceUri"), new LocalizedText("en", "A URI that uniquely identifies the dictionary."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7619), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7619), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">http://opcfoundation.org/UA/</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1106() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7650), new QualifiedName(0, "Argument"), new LocalizedText("en", "Argument"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7650), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7650), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">Argument</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1107() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7656), new QualifiedName(0, "EnumValueType"), new LocalizedText("en", "EnumValueType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7656), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7656), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">EnumValueType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1108() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7659), new QualifiedName(0, "StatusResult"), new LocalizedText("en", "StatusResult"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7659), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7659), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">StatusResult</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1109() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7662), new QualifiedName(0, "UserTokenPolicy"), new LocalizedText("en", "UserTokenPolicy"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7662), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7662), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">UserTokenPolicy</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1110() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7665), new QualifiedName(0, "ApplicationDescription"), new LocalizedText("en", "ApplicationDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7665), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7665), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">ApplicationDescription</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1111() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7668), new QualifiedName(0, "EndpointDescription"), new LocalizedText("en", "EndpointDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7668), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7668), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">EndpointDescription</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1112() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7671), new QualifiedName(0, "UserIdentityToken"), new LocalizedText("en", "UserIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7671), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7671), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">UserIdentityToken</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1113() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7674), new QualifiedName(0, "AnonymousIdentityToken"), new LocalizedText("en", "AnonymousIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7674), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7674), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">AnonymousIdentityToken</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1114() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7677), new QualifiedName(0, "UserNameIdentityToken"), new LocalizedText("en", "UserNameIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7677), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7677), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">UserNameIdentityToken</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1115() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7680), new QualifiedName(0, "X509IdentityToken"), new LocalizedText("en", "X509IdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7680), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7680), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">X509IdentityToken</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1116() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7683), new QualifiedName(0, "IssuedIdentityToken"), new LocalizedText("en", "IssuedIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7683), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7683), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">IssuedIdentityToken</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1117() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7686), new QualifiedName(0, "EndpointConfiguration"), new LocalizedText("en", "EndpointConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7686), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7686), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">EndpointConfiguration</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1118() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7692), new QualifiedName(0, "BuildInfo"), new LocalizedText("en", "BuildInfo"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7692), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7692), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">BuildInfo</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1119() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7698), new QualifiedName(0, "SignedSoftwareCertificate"), new LocalizedText("en", "SignedSoftwareCertificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7698), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7698), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">SignedSoftwareCertificate</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1120() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7728), new QualifiedName(0, "AddNodesItem"), new LocalizedText("en", "AddNodesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7728), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7728), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">AddNodesItem</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1121() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7731), new QualifiedName(0, "AddReferencesItem"), new LocalizedText("en", "AddReferencesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7731), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7731), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">AddReferencesItem</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1122() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7734), new QualifiedName(0, "DeleteNodesItem"), new LocalizedText("en", "DeleteNodesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7734), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7734), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">DeleteNodesItem</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1123() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7737), new QualifiedName(0, "DeleteReferencesItem"), new LocalizedText("en", "DeleteReferencesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7737), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7737), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">DeleteReferencesItem</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1124() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11851), new QualifiedName(0, "Comment"), new LocalizedText("en", "Comment"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11851), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11851), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11851), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2829), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1125() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11852), new QualifiedName(0, "SelectedResponse"), new LocalizedText("en", "SelectedResponse"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 6), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11852), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11852), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11852), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8927), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1126() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11853), new QualifiedName(0, "Comment"), new LocalizedText("en", "Comment"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11853), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11853), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11853), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8944), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1127() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11854), new QualifiedName(0, "Comment"), new LocalizedText("en", "Comment"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11854), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11854), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11854), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8961), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1128() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11855), new QualifiedName(0, "ShelvingTime"), new LocalizedText("en", "ShelvingTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11855), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11855), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11855), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11093), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1129() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11875), new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11875), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11875), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11875), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11856), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1130() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11878), new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7594), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11878), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11878), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11878), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(257), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>0</Value><DisplayName><Locale>                </Locale><Text>Unspecified</Text>              </DisplayName><Description><Locale>                </Locale><Text>No classes are selected.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>Object</Text>              </DisplayName><Description><Locale>                </Locale><Text>The node is an object.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>Variable</Text>              </DisplayName><Description><Locale>                </Locale><Text>The node is a variable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4</Value><DisplayName><Locale>                </Locale><Text>Method</Text>              </DisplayName><Description><Locale>                </Locale><Text>The node is a method.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>8</Value><DisplayName><Locale>                </Locale><Text>ObjectType</Text>              </DisplayName><Description><Locale>                </Locale><Text>The node is an object type.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>16</Value><DisplayName><Locale>                </Locale><Text>VariableType</Text>              </DisplayName><Description><Locale>                </Locale><Text>The node is an variable type.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>32</Value><DisplayName><Locale>                </Locale><Text>ReferenceType</Text>              </DisplayName><Description><Locale>                </Locale><Text>The node is a reference type.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>64</Value><DisplayName><Locale>                </Locale><Text>DataType</Text>              </DisplayName><Description><Locale>                </Locale><Text>The node is a data type.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>128</Value><DisplayName><Locale>                </Locale><Text>View</Text>              </DisplayName><Description><Locale>                </Locale><Text>The node is a view.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1131() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7782), new QualifiedName(0, "RegisteredServer"), new LocalizedText("en", "RegisteredServer"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7782), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7782), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">RegisteredServer</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1132() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11881), new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7594), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11881), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11881), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11881), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(348), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>0</Value><DisplayName><Locale>                </Locale><Text>None</Text>              </DisplayName><Description><Locale>                </Locale><Text>No attribuites provided.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>AccessLevel</Text>              </DisplayName><Description><Locale>                </Locale><Text>The access level attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>ArrayDimensions</Text>              </DisplayName><Description><Locale>                </Locale><Text>The array dimensions attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4</Value><DisplayName><Locale>                </Locale><Text>BrowseName</Text>              </DisplayName><Description><Locale>                </Locale><Text>The browse name attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>8</Value><DisplayName><Locale>                </Locale><Text>ContainsNoLoops</Text>              </DisplayName><Description><Locale>                </Locale><Text>The contains no loops attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>16</Value><DisplayName><Locale>                </Locale><Text>DataType</Text>              </DisplayName><Description><Locale>                </Locale><Text>The data type attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>32</Value><DisplayName><Locale>                </Locale><Text>Description</Text>              </DisplayName><Description><Locale>                </Locale><Text>The description attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>64</Value><DisplayName><Locale>                </Locale><Text>DisplayName</Text>              </DisplayName><Description><Locale>                </Locale><Text>The display name attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>128</Value><DisplayName><Locale>                </Locale><Text>EventNotifier</Text>              </DisplayName><Description><Locale>                </Locale><Text>The event notifier attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>256</Value><DisplayName><Locale>                </Locale><Text>Executable</Text>              </DisplayName><Description><Locale>                </Locale><Text>The executable attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>512</Value><DisplayName><Locale>                </Locale><Text>Historizing</Text>              </DisplayName><Description><Locale>                </Locale><Text>The historizing attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1024</Value><DisplayName><Locale>                </Locale><Text>InverseName</Text>              </DisplayName><Description><Locale>                </Locale><Text>The inverse name attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2048</Value><DisplayName><Locale>                </Locale><Text>IsAbstract</Text>              </DisplayName><Description><Locale>                </Locale><Text>The is abstract attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4096</Value><DisplayName><Locale>                </Locale><Text>MinimumSamplingInterval</Text>              </DisplayName><Description><Locale>                </Locale><Text>The minimum sampling interval attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>8192</Value><DisplayName><Locale>                </Locale><Text>NodeClass</Text>              </DisplayName><Description><Locale>                </Locale><Text>The node class attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>16384</Value><DisplayName><Locale>                </Locale><Text>NodeId</Text>              </DisplayName><Description><Locale>                </Locale><Text>The node id attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>32768</Value><DisplayName><Locale>                </Locale><Text>Symmetric</Text>              </DisplayName><Description><Locale>                </Locale><Text>The symmetric attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>65536</Value><DisplayName><Locale>                </Locale><Text>UserAccessLevel</Text>              </DisplayName><Description><Locale>                </Locale><Text>The user access level attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>131072</Value><DisplayName><Locale>                </Locale><Text>UserExecutable</Text>              </DisplayName><Description><Locale>                </Locale><Text>The user executable attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>262144</Value><DisplayName><Locale>                </Locale><Text>UserWriteMask</Text>              </DisplayName><Description><Locale>                </Locale><Text>The user write mask attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>524288</Value><DisplayName><Locale>                </Locale><Text>ValueRank</Text>              </DisplayName><Description><Locale>                </Locale><Text>The value rank attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1048576</Value><DisplayName><Locale>                </Locale><Text>WriteMask</Text>              </DisplayName><Description><Locale>                </Locale><Text>The write mask attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2097152</Value><DisplayName><Locale>                </Locale><Text>Value</Text>              </DisplayName><Description><Locale>                </Locale><Text>The value attribute is specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4194303</Value><DisplayName><Locale>                </Locale><Text>All</Text>              </DisplayName><Description><Locale>                </Locale><Text>All attributes are specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1335396</Value><DisplayName><Locale>                </Locale><Text>BaseNode</Text>              </DisplayName><Description><Locale>                </Locale><Text>All base attributes are specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1335524</Value><DisplayName><Locale>                </Locale><Text>Object</Text>              </DisplayName><Description><Locale>                </Locale><Text>All object attributes are specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1337444</Value><DisplayName><Locale>                </Locale><Text>ObjectTypeOrDataType</Text>              </DisplayName><Description><Locale>                </Locale><Text>All object type or data type attributes are specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4026999</Value><DisplayName><Locale>                </Locale><Text>Variable</Text>              </DisplayName><Description><Locale>                </Locale><Text>All variable attributes are specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>3958902</Value><DisplayName><Locale>                </Locale><Text>VariableType</Text>              </DisplayName><Description><Locale>                </Locale><Text>All variable type attributes are specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1466724</Value><DisplayName><Locale>                </Locale><Text>Method</Text>              </DisplayName><Description><Locale>                </Locale><Text>All method attributes are specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1371236</Value><DisplayName><Locale>                </Locale><Text>ReferenceType</Text>              </DisplayName><Description><Locale>                </Locale><Text>All reference type attributes are specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1335532</Value><DisplayName><Locale>                </Locale><Text>View</Text>              </DisplayName><Description><Locale>                </Locale><Text>All view attributes are specified.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1133() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11882), new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7594), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11882), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11882), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11882), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(347), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>0</Value><DisplayName><Locale>                </Locale><Text>None</Text>              </DisplayName><Description><Locale>                </Locale><Text>No attributes are writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>AccessLevel</Text>              </DisplayName><Description><Locale>                </Locale><Text>The access level attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>ArrayDimensions</Text>              </DisplayName><Description><Locale>                </Locale><Text>The array dimensions attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4</Value><DisplayName><Locale>                </Locale><Text>BrowseName</Text>              </DisplayName><Description><Locale>                </Locale><Text>The browse name attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>8</Value><DisplayName><Locale>                </Locale><Text>ContainsNoLoops</Text>              </DisplayName><Description><Locale>                </Locale><Text>The contains no loops attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>16</Value><DisplayName><Locale>                </Locale><Text>DataType</Text>              </DisplayName><Description><Locale>                </Locale><Text>The data type attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>32</Value><DisplayName><Locale>                </Locale><Text>Description</Text>              </DisplayName><Description><Locale>                </Locale><Text>The description attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>64</Value><DisplayName><Locale>                </Locale><Text>DisplayName</Text>              </DisplayName><Description><Locale>                </Locale><Text>The display name attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>128</Value><DisplayName><Locale>                </Locale><Text>EventNotifier</Text>              </DisplayName><Description><Locale>                </Locale><Text>The event notifier attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>256</Value><DisplayName><Locale>                </Locale><Text>Executable</Text>              </DisplayName><Description><Locale>                </Locale><Text>The executable attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>512</Value><DisplayName><Locale>                </Locale><Text>Historizing</Text>              </DisplayName><Description><Locale>                </Locale><Text>The historizing attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1024</Value><DisplayName><Locale>                </Locale><Text>InverseName</Text>              </DisplayName><Description><Locale>                </Locale><Text>The inverse name attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2048</Value><DisplayName><Locale>                </Locale><Text>IsAbstract</Text>              </DisplayName><Description><Locale>                </Locale><Text>The is abstract attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4096</Value><DisplayName><Locale>                </Locale><Text>MinimumSamplingInterval</Text>              </DisplayName><Description><Locale>                </Locale><Text>The minimum sampling interval attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>8192</Value><DisplayName><Locale>                </Locale><Text>NodeClass</Text>              </DisplayName><Description><Locale>                </Locale><Text>The node class attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>16384</Value><DisplayName><Locale>                </Locale><Text>NodeId</Text>              </DisplayName><Description><Locale>                </Locale><Text>The node id attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>32768</Value><DisplayName><Locale>                </Locale><Text>Symmetric</Text>              </DisplayName><Description><Locale>                </Locale><Text>The symmetric attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>65536</Value><DisplayName><Locale>                </Locale><Text>UserAccessLevel</Text>              </DisplayName><Description><Locale>                </Locale><Text>The user access level attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>131072</Value><DisplayName><Locale>                </Locale><Text>UserExecutable</Text>              </DisplayName><Description><Locale>                </Locale><Text>The user executable attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>262144</Value><DisplayName><Locale>                </Locale><Text>UserWriteMask</Text>              </DisplayName><Description><Locale>                </Locale><Text>The user write mask attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>524288</Value><DisplayName><Locale>                </Locale><Text>ValueRank</Text>              </DisplayName><Description><Locale>                </Locale><Text>The value rank attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1048576</Value><DisplayName><Locale>                </Locale><Text>WriteMask</Text>              </DisplayName><Description><Locale>                </Locale><Text>The write mask attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2097152</Value><DisplayName><Locale>                </Locale><Text>ValueForVariableType</Text>              </DisplayName><Description><Locale>                </Locale><Text>The value attribute is writable.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1134() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11884), new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7594), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11884), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11884), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11884), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11234), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>Insert</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>Replace</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>3</Value><DisplayName><Locale>                </Locale><Text>Update</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4</Value><DisplayName><Locale>                </Locale><Text>Delete</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1135() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11885), new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7594), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11885), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11885), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11885), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11293), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>Insert</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>Replace</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>3</Value><DisplayName><Locale>                </Locale><Text>Update</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4</Value><DisplayName><Locale>                </Locale><Text>Remove</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1136() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3698), new QualifiedName(0, "ProductUri"), new LocalizedText("en", "ProductUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3698), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3698), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3698), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1137() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 11891), new QualifiedName(0, "UnauthorizedRequestCount"), new LocalizedText("en", "UnauthorizedRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11891), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11891), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11891), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2030), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1138() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3699), new QualifiedName(0, "ManufacturerName"), new LocalizedText("en", "ManufacturerName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3699), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3699), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3699), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1139() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3700), new QualifiedName(0, "ProductName"), new LocalizedText("en", "ProductName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3700), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3700), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3700), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1140() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 11892), new QualifiedName(0, "UnauthorizedRequestCount"), new LocalizedText("en", "UnauthorizedRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11892), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11892), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11892), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1141() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3701), new QualifiedName(0, "SoftwareVersion"), new LocalizedText("en", "SoftwareVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3701), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3701), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3701), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1142() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3702), new QualifiedName(0, "BuildNumber"), new LocalizedText("en", "BuildNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3702), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3702), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3702), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1143() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3703), new QualifiedName(0, "BuildDate"), new LocalizedText("en", "BuildDate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(new NodeId(0, 3703), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3703), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3703), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1144() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3704), new QualifiedName(0, "SoftwareCertificates"), new LocalizedText("en", "SoftwareCertificates"), new LocalizedText("en", "The software certificates owned by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 344), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3704), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3704), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2268), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1145() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 3705), new QualifiedName(0, "RejectedSessionCount"), new LocalizedText("en", "RejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3705), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3705), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2275), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1146() {
        SessionDiagnosticsArrayTypeNode node = new SessionDiagnosticsArrayTypeNode(this.context, new NodeId(0, 3707), new QualifiedName(0, "SessionDiagnosticsArray"), new LocalizedText("en", "SessionDiagnosticsArray"), new LocalizedText("en", "A list of diagnostics for each active session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 865), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3707), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2196), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3707), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3706), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1147() {
        SessionSecurityDiagnosticsArrayTypeNode node = new SessionSecurityDiagnosticsArrayTypeNode(this.context, new NodeId(0, 3708), new QualifiedName(0, "SessionSecurityDiagnosticsArray"), new LocalizedText("en", "SessionSecurityDiagnosticsArray"), new LocalizedText("en", "A list of security related diagnostics for each active session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 868), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3708), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2243), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3708), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3706), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1148() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3709), new QualifiedName(0, "RedundancySupport"), new LocalizedText("en", "RedundancySupport"), new LocalizedText("en", "Indicates what style of redundancy is supported by the server."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 851), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3709), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3709), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2296), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1149() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3720), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3720), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3720), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3720), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2769), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1150() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3724), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3724), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3724), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3724), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2770), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1151() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3728), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3728), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3728), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3728), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2772), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1152() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3732), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3732), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3732), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3732), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2773), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1153() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3746), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3746), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3746), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3746), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2775), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1154() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11940), new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7594), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11940), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11940), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11940), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11939), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>Read</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>Write</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4</Value><DisplayName><Locale>                </Locale><Text>EraseExisting</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>8</Value><DisplayName><Locale>                </Locale><Text>Append</Text>              </DisplayName><Description xmlns:p5=\"http://www.w3.org/2001/XMLSchema-instance\" p5:nil=\"true\"/>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1155() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3750), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3750), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3750), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3750), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2776), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1156() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3754), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 24), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3754), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3754), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3754), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2774), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1157() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 11948), new QualifiedName(0, "ServerNetworkGroups"), new LocalizedText("en", "ServerNetworkGroups"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 11944), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11948), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11948), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11948), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11945), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1158() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 11951), new QualifiedName(0, "EndpointUrlListDataType"), new LocalizedText("en", "EndpointUrlListDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11951), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11951), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='EndpointUrlListDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1159() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 11954), new QualifiedName(0, "NetworkGroupDataType"), new LocalizedText("en", "NetworkGroupDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11954), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11954), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='NetworkGroupDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1160() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 11959), new QualifiedName(0, "EndpointUrlListDataType"), new LocalizedText("en", "EndpointUrlListDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11959), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11959), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">EndpointUrlListDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1161() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 11962), new QualifiedName(0, "NetworkGroupDataType"), new LocalizedText("en", "NetworkGroupDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 11962), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 11962), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">NetworkGroupDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1162() {
        FiniteTransitionVariableTypeNode node = new FiniteTransitionVariableTypeNode(this.context, new NodeId(0, 3825), new QualifiedName(0, "Transition"), new LocalizedText("en", "Transition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3825), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3826), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3825), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2767), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3825), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3825), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3806), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1163() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3826), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3826), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3826), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3826), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3825), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1164() {
        FiniteStateVariableTypeNode node = new FiniteStateVariableTypeNode(this.context, new NodeId(0, 3830), new QualifiedName(0, "CurrentState"), new LocalizedText("en", "CurrentState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3830), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3831), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3830), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3833), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3830), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2760), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3830), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3830), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2391), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1165() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3831), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3831), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3831), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3831), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3830), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1166() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12024), new QualifiedName(0, "InstrumentRange"), new LocalizedText("en", "InstrumentRange"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 884), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12024), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12024), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12024), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1167() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12025), new QualifiedName(0, "EURange"), new LocalizedText("en", "EURange"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 884), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12025), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12025), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12025), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1168() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3833), new QualifiedName(0, "Number"), new LocalizedText("en", "Number"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3833), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3833), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3833), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3830), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1169() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7929), new QualifiedName(0, "ContentFilterElement"), new LocalizedText("en", "ContentFilterElement"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7929), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7929), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">ContentFilterElement</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1170() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12026), new QualifiedName(0, "EngineeringUnits"), new LocalizedText("en", "EngineeringUnits"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 887), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12026), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12026), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12026), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1171() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12027), new QualifiedName(0, "Title"), new LocalizedText("en", "Title"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12027), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12027), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12027), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1172() {
        FiniteTransitionVariableTypeNode node = new FiniteTransitionVariableTypeNode(this.context, new NodeId(0, 3835), new QualifiedName(0, "LastTransition"), new LocalizedText("en", "LastTransition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3835), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3836), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3835), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3838), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3835), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3839), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3835), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2767), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3835), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3835), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2391), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1173() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12028), new QualifiedName(0, "AxisScaleType"), new LocalizedText("en", "AxisScaleType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12077), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12028), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12028), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12028), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12021), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1174() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3836), new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3836), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3836), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3836), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3835), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1175() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7932), new QualifiedName(0, "ContentFilter"), new LocalizedText("en", "ContentFilter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7932), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7932), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">ContentFilter</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1176() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3838), new QualifiedName(0, "Number"), new LocalizedText("en", "Number"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3838), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3838), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3838), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3835), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1177() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3839), new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3839), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3839), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3839), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3835), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1178() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7935), new QualifiedName(0, "FilterOperand"), new LocalizedText("en", "FilterOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7935), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7935), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">FilterOperand</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1179() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3840), new QualifiedName(0, "CreateSessionId"), new LocalizedText("en", "CreateSessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3840), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3840), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3840), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2399), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1180() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3841), new QualifiedName(0, "CreateClientName"), new LocalizedText("en", "CreateClientName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3841), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3841), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3841), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2399), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1181() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3842), new QualifiedName(0, "InvocationCreationTime"), new LocalizedText("en", "InvocationCreationTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3842), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3842), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3842), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2399), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1182() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7938), new QualifiedName(0, "ElementOperand"), new LocalizedText("en", "ElementOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7938), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7938), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">ElementOperand</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1183() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3843), new QualifiedName(0, "LastTransitionTime"), new LocalizedText("en", "LastTransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3843), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3843), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3843), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2399), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1184() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3844), new QualifiedName(0, "LastMethodCall"), new LocalizedText("en", "LastMethodCall"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3844), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3844), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3844), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2399), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1185() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12037), new QualifiedName(0, "XAxisDefinition"), new LocalizedText("en", "XAxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12079), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12037), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12037), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12037), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12029), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1186() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3845), new QualifiedName(0, "LastMethodSessionId"), new LocalizedText("en", "LastMethodSessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3845), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3845), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3845), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2399), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1187() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7941), new QualifiedName(0, "LiteralOperand"), new LocalizedText("en", "LiteralOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7941), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7941), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">LiteralOperand</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1188() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3846), new QualifiedName(0, "LastMethodInputArguments"), new LocalizedText("en", "LastMethodInputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3846), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3846), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3846), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2399), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1189() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3847), new QualifiedName(0, "LastMethodOutputArguments"), new LocalizedText("en", "LastMethodOutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3847), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3847), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3847), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2399), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1190() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3848), new QualifiedName(0, "LastMethodCallTime"), new LocalizedText("en", "LastMethodCallTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3848), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3848), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3848), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2399), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1191() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7944), new QualifiedName(0, "AttributeOperand"), new LocalizedText("en", "AttributeOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7944), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7944), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">AttributeOperand</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1192() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3849), new QualifiedName(0, "LastMethodReturnStatus"), new LocalizedText("en", "LastMethodReturnStatus"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 299), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3849), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3849), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3849), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2399), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1193() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 7947), new QualifiedName(0, "SimpleAttributeOperand"), new LocalizedText("en", "SimpleAttributeOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 7947), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 7947), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">SimpleAttributeOperand</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1194() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12046), new QualifiedName(0, "XAxisDefinition"), new LocalizedText("en", "XAxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12079), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12046), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12046), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12046), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12038), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1195() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12055), new QualifiedName(0, "XAxisDefinition"), new LocalizedText("en", "XAxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12079), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12055), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12055), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12055), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12047), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1196() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12056), new QualifiedName(0, "YAxisDefinition"), new LocalizedText("en", "YAxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12079), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12056), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12056), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12056), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12047), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1197() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12065), new QualifiedName(0, "XAxisDefinition"), new LocalizedText("en", "XAxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12079), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12065), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12065), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12065), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12057), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1198() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12066), new QualifiedName(0, "YAxisDefinition"), new LocalizedText("en", "YAxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12079), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12066), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12066), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12066), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12057), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1199() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3874), new QualifiedName(0, "Retain"), new LocalizedText("en", "Retain"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 1), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3874), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3874), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3874), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2782), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1200() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12067), new QualifiedName(0, "ZAxisDefinition"), new LocalizedText("en", "ZAxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12079), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12067), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12067), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12067), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12057), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1201() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 3876), new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 296), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 3876), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3876), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 3876), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(3875), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=288</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The identifier for the suscription to refresh.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1202() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12076), new QualifiedName(0, "AxisDefinition"), new LocalizedText("en", "AxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12079), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12076), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12076), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12076), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12068), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1203() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12078), new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 21), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12078), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12078), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12078), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12077), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><LocalizedText><Locale>          </Locale><Text>Linear</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Log</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Ln</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1204() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12083), new QualifiedName(0, "AxisInformation"), new LocalizedText("en", "AxisInformation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12083), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12083), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='AxisInformation']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1205() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12086), new QualifiedName(0, "XVType"), new LocalizedText("en", "XVType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12086), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12086), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='XVType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1206() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12091), new QualifiedName(0, "AxisInformation"), new LocalizedText("en", "AxisInformation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12091), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12091), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">AxisInformation</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1207() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12094), new QualifiedName(0, "XVType"), new LocalizedText("en", "XVType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12094), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12094), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">XVType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1208() {
        SessionDiagnosticsVariableTypeNode node = new SessionDiagnosticsVariableTypeNode(this.context, new NodeId(0, 12098), new QualifiedName(0, "SessionDiagnostics"), new LocalizedText("en", "SessionDiagnostics"), new LocalizedText("en", "Diagnostics information for an active session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 865), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12099), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12100), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12101), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12102), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12103), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12104), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12105), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12106), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12107), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12108), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12109), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12110), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12111), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12112), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12113), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12114), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12115), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12116), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12117), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12118), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12119), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12120), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12121), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12122), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12123), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12124), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12125), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12126), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12127), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12128), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12129), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12130), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12131), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12132), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12133), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12134), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12135), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12136), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12137), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12138), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12139), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12140), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12141), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2197), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12098), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12097), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1209() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12099), new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12099), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12099), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12099), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1210() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12100), new QualifiedName(0, "SessionName"), new LocalizedText("en", "SessionName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12100), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12100), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12100), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1211() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8004), new QualifiedName(0, "HistoryEvent"), new LocalizedText("en", "HistoryEvent"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8004), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8004), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">HistoryEvent</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1212() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12101), new QualifiedName(0, "ClientDescription"), new LocalizedText("en", "ClientDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 308), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12101), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12101), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12101), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1213() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12102), new QualifiedName(0, "ServerUri"), new LocalizedText("en", "ServerUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12102), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12102), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12102), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1214() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12103), new QualifiedName(0, "EndpointUrl"), new LocalizedText("en", "EndpointUrl"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12103), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12103), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12103), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1215() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12104), new QualifiedName(0, "LocaleIds"), new LocalizedText("en", "LocaleIds"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 295), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12104), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12104), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12104), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1216() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12105), new QualifiedName(0, "ActualSessionTimeout"), new LocalizedText("en", "ActualSessionTimeout"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 290), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12105), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12105), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12105), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1217() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12106), new QualifiedName(0, "MaxResponseMessageSize"), new LocalizedText("en", "MaxResponseMessageSize"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12106), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12106), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12106), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1218() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12107), new QualifiedName(0, "ClientConnectionTime"), new LocalizedText("en", "ClientConnectionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12107), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12107), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12107), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1219() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12108), new QualifiedName(0, "ClientLastContactTime"), new LocalizedText("en", "ClientLastContactTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 294), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12108), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12108), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12108), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1220() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12109), new QualifiedName(0, "CurrentSubscriptionsCount"), new LocalizedText("en", "CurrentSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12109), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12109), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12109), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1221() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12110), new QualifiedName(0, "CurrentMonitoredItemsCount"), new LocalizedText("en", "CurrentMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12110), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12110), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12110), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1222() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12111), new QualifiedName(0, "CurrentPublishRequestsInQueue"), new LocalizedText("en", "CurrentPublishRequestsInQueue"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12111), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12111), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12111), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1223() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12112), new QualifiedName(0, "TotalRequestCount"), new LocalizedText("en", "TotalRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12112), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12112), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12112), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1224() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12113), new QualifiedName(0, "UnauthorizedRequestCount"), new LocalizedText("en", "UnauthorizedRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12113), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12113), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12113), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1225() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12114), new QualifiedName(0, "ReadCount"), new LocalizedText("en", "ReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12114), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12114), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12114), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1226() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12115), new QualifiedName(0, "HistoryReadCount"), new LocalizedText("en", "HistoryReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12115), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12115), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12115), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1227() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12116), new QualifiedName(0, "WriteCount"), new LocalizedText("en", "WriteCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12116), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12116), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12116), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1228() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12117), new QualifiedName(0, "HistoryUpdateCount"), new LocalizedText("en", "HistoryUpdateCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12117), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12117), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12117), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1229() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12118), new QualifiedName(0, "CallCount"), new LocalizedText("en", "CallCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12118), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12118), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12118), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1230() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12119), new QualifiedName(0, "CreateMonitoredItemsCount"), new LocalizedText("en", "CreateMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12119), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12119), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12119), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1231() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12120), new QualifiedName(0, "ModifyMonitoredItemsCount"), new LocalizedText("en", "ModifyMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12120), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12120), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12120), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1232() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12121), new QualifiedName(0, "SetMonitoringModeCount"), new LocalizedText("en", "SetMonitoringModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12121), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12121), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12121), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1233() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12122), new QualifiedName(0, "SetTriggeringCount"), new LocalizedText("en", "SetTriggeringCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12122), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12122), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12122), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1234() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12123), new QualifiedName(0, "DeleteMonitoredItemsCount"), new LocalizedText("en", "DeleteMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12123), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12123), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12123), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1235() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12124), new QualifiedName(0, "CreateSubscriptionCount"), new LocalizedText("en", "CreateSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12124), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12124), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12124), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1236() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12125), new QualifiedName(0, "ModifySubscriptionCount"), new LocalizedText("en", "ModifySubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12125), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12125), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12125), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1237() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12126), new QualifiedName(0, "SetPublishingModeCount"), new LocalizedText("en", "SetPublishingModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12126), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12126), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12126), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1238() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12127), new QualifiedName(0, "PublishCount"), new LocalizedText("en", "PublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12127), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12127), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12127), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1239() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12128), new QualifiedName(0, "RepublishCount"), new LocalizedText("en", "RepublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12128), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12128), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12128), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1240() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12129), new QualifiedName(0, "TransferSubscriptionsCount"), new LocalizedText("en", "TransferSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12129), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12129), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12129), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1241() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12130), new QualifiedName(0, "DeleteSubscriptionsCount"), new LocalizedText("en", "DeleteSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12130), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12130), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12130), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1242() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12131), new QualifiedName(0, "AddNodesCount"), new LocalizedText("en", "AddNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12131), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12131), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12131), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1243() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12132), new QualifiedName(0, "AddReferencesCount"), new LocalizedText("en", "AddReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12132), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12132), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12132), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1244() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12133), new QualifiedName(0, "DeleteNodesCount"), new LocalizedText("en", "DeleteNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12133), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12133), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12133), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1245() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12134), new QualifiedName(0, "DeleteReferencesCount"), new LocalizedText("en", "DeleteReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12134), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12134), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12134), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1246() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12135), new QualifiedName(0, "BrowseCount"), new LocalizedText("en", "BrowseCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12135), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12135), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12135), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1247() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12136), new QualifiedName(0, "BrowseNextCount"), new LocalizedText("en", "BrowseNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12136), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12136), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12136), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1248() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12137), new QualifiedName(0, "TranslateBrowsePathsToNodeIdsCount"), new LocalizedText("en", "TranslateBrowsePathsToNodeIdsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12137), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12137), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12137), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1249() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12138), new QualifiedName(0, "QueryFirstCount"), new LocalizedText("en", "QueryFirstCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12138), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12138), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12138), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1250() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12139), new QualifiedName(0, "QueryNextCount"), new LocalizedText("en", "QueryNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12139), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12139), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12139), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1251() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12140), new QualifiedName(0, "RegisterNodesCount"), new LocalizedText("en", "RegisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12140), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12140), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12140), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1252() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12141), new QualifiedName(0, "UnregisterNodesCount"), new LocalizedText("en", "UnregisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 871), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12141), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12141), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12141), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12098), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1253() {
        SessionSecurityDiagnosticsTypeNode node = new SessionSecurityDiagnosticsTypeNode(this.context, new NodeId(0, 12142), new QualifiedName(0, "SessionSecurityDiagnostics"), new LocalizedText("en", "SessionSecurityDiagnostics"), new LocalizedText("en", "Security related diagnostics information for an active session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 868), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12143), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12144), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12145), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12146), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12147), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12148), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12149), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12150), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12151), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12142), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2244), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12142), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12142), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12097), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1254() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12143), new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 17), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12143), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12143), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12143), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1255() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12144), new QualifiedName(0, "ClientUserIdOfSession"), new LocalizedText("en", "ClientUserIdOfSession"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12144), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12144), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12144), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1256() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12145), new QualifiedName(0, "ClientUserIdHistory"), new LocalizedText("en", "ClientUserIdHistory"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12145), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12145), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12145), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1257() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12146), new QualifiedName(0, "AuthenticationMechanism"), new LocalizedText("en", "AuthenticationMechanism"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12146), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12146), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12146), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1258() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12147), new QualifiedName(0, "Encoding"), new LocalizedText("en", "Encoding"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12147), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12147), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12147), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1259() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12148), new QualifiedName(0, "TransportProtocol"), new LocalizedText("en", "TransportProtocol"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12148), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12148), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12148), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1260() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12149), new QualifiedName(0, "SecurityMode"), new LocalizedText("en", "SecurityMode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 302), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12149), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12149), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12149), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1261() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12150), new QualifiedName(0, "SecurityPolicyUri"), new LocalizedText("en", "SecurityPolicyUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12150), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12150), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12150), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1262() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, new NodeId(0, 12151), new QualifiedName(0, "ClientCertificate"), new LocalizedText("en", "ClientCertificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 15), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12151), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(63), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12151), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12151), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12142), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1263() {
        SubscriptionDiagnosticsArrayTypeNode node = new SubscriptionDiagnosticsArrayTypeNode(this.context, new NodeId(0, 12152), new QualifiedName(0, "SubscriptionDiagnosticsArray"), new LocalizedText("en", "SubscriptionDiagnosticsArray"), new LocalizedText("en", "A list of diagnostics for each subscription owned by the session."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 874), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12152), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(2171), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12152), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12152), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(12097), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1264() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12161), new QualifiedName(0, "MaxNodesPerHistoryReadData"), new LocalizedText("en", "MaxNodesPerHistoryReadData"), new LocalizedText("en", "The maximum number of operations in a single data HistoryRead request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12161), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12161), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12161), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11564), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1265() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12162), new QualifiedName(0, "MaxNodesPerHistoryReadEvents"), new LocalizedText("en", "MaxNodesPerHistoryReadEvents"), new LocalizedText("en", "The maximum number of operations in a single event HistoryRead request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12162), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12162), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12162), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11564), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1266() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12163), new QualifiedName(0, "MaxNodesPerHistoryUpdateData"), new LocalizedText("en", "MaxNodesPerHistoryUpdateData"), new LocalizedText("en", "The maximum number of operations in a single data HistoryUpdate request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12163), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12163), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12163), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11564), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1267() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8067), new QualifiedName(0, "MonitoringFilter"), new LocalizedText("en", "MonitoringFilter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8067), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8067), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">MonitoringFilter</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1268() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12164), new QualifiedName(0, "MaxNodesPerHistoryUpdateEvents"), new LocalizedText("en", "MaxNodesPerHistoryUpdateEvents"), new LocalizedText("en", "The maximum number of operations in a single event HistoryUpdate request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12164), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12164), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(80), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12164), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11564), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1269() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12165), new QualifiedName(0, "MaxNodesPerHistoryReadData"), new LocalizedText("en", "MaxNodesPerHistoryReadData"), new LocalizedText("en", "The maximum number of operations in a single data HistoryRead request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12165), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12165), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11704), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1270() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12166), new QualifiedName(0, "MaxNodesPerHistoryReadEvents"), new LocalizedText("en", "MaxNodesPerHistoryReadEvents"), new LocalizedText("en", "The maximum number of operations in a single event HistoryRead request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12166), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12166), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11704), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1271() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12167), new QualifiedName(0, "MaxNodesPerHistoryUpdateData"), new LocalizedText("en", "MaxNodesPerHistoryUpdateData"), new LocalizedText("en", "The maximum number of operations in a single data HistoryUpdate request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12167), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12167), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11704), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1272() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12168), new QualifiedName(0, "MaxNodesPerHistoryUpdateEvents"), new LocalizedText("en", "MaxNodesPerHistoryUpdateEvents"), new LocalizedText("en", "The maximum number of operations in a single event HistoryUpdate request."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12168), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12168), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(11704), UInteger.valueOf(0)), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1273() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12169), new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7594), 1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12169), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12169), new NodeId(0, 37), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(78), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12169), new NodeId(0, 46), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(120), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>Mandatory</Text>              </DisplayName><Description><Locale>                </Locale><Text>The BrowseName must appear in all instances of the type.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>Optional</Text>              </DisplayName><Description><Locale>                </Locale><Text>The BrowseName may appear in an instance of the type.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>3</Value><DisplayName><Locale>                </Locale><Text>Constraint</Text>              </DisplayName><Description><Locale>                </Locale><Text>The modelling rule defines a constraint and the BrowseName is not used in an instance of the type.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1274() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8073), new QualifiedName(0, "EventFilter"), new LocalizedText("en", "EventFilter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8073), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8073), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">EventFilter</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1275() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 12170), new QualifiedName(0, "ViewVersion"), new LocalizedText("en", "ViewVersion"), new LocalizedText("en", "The version number of the view."), UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 7), -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12170), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(68), UInteger.valueOf(0)), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode1276() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8076), new QualifiedName(0, "AggregateConfiguration"), new LocalizedText("en", "AggregateConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8076), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8076), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">AggregateConfiguration</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1277() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12175), new QualifiedName(0, "ComplexNumberType"), new LocalizedText("en", "ComplexNumberType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12175), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12175), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='ComplexNumberType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1278() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12178), new QualifiedName(0, "DoubleComplexNumberType"), new LocalizedText("en", "DoubleComplexNumberType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12178), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12178), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='DoubleComplexNumberType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1279() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12183), new QualifiedName(0, "ComplexNumberType"), new LocalizedText("en", "ComplexNumberType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12183), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12183), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">ComplexNumberType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1280() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12186), new QualifiedName(0, "DoubleComplexNumberType"), new LocalizedText("en", "DoubleComplexNumberType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12186), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12186), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">DoubleComplexNumberType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1281() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12201), new QualifiedName(0, "ServerOnNetwork"), new LocalizedText("en", "ServerOnNetwork"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12201), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12201), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(8252), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">//xs:element[@name='ServerOnNetwork']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1282() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 12213), new QualifiedName(0, "ServerOnNetwork"), new LocalizedText("en", "ServerOnNetwork"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 12213), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 12213), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">ServerOnNetwork</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1283() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, new NodeId(0, 8172), new QualifiedName(0, "HistoryEventFieldList"), new LocalizedText("en", "HistoryEventFieldList"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), new NodeId(0, 12), -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 8172), new NodeId(0, 40), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(69), UInteger.valueOf(0)), true));
        node.addReference(new Reference(new NodeId(0, 8172), new NodeId(0, 47), new ExpandedNodeId(UShort.valueOf(0), null, UInteger.valueOf(7617), UInteger.valueOf(0)), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">HistoryEventFieldList</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    public void loadAllNodes() throws IOException, SAXException {
        loadNode0();
        loadNode1();
        loadNode2();
        loadNode3();
        loadNode4();
        loadNode5();
        loadNode6();
        loadNode7();
        loadNode8();
        loadNode9();
        loadNode10();
        loadNode11();
        loadNode12();
        loadNode13();
        loadNode14();
        loadNode15();
        loadNode16();
        loadNode17();
        loadNode18();
        loadNode19();
        loadNode20();
        loadNode21();
        loadNode22();
        loadNode23();
        loadNode24();
        loadNode25();
        loadNode26();
        loadNode27();
        loadNode28();
        loadNode29();
        loadNode30();
        loadNode31();
        loadNode32();
        loadNode33();
        loadNode34();
        loadNode35();
        loadNode36();
        loadNode37();
        loadNode38();
        loadNode39();
        loadNode40();
        loadNode41();
        loadNode42();
        loadNode43();
        loadNode44();
        loadNode45();
        loadNode46();
        loadNode47();
        loadNode48();
        loadNode49();
        loadNode50();
        loadNode51();
        loadNode52();
        loadNode53();
        loadNode54();
        loadNode55();
        loadNode56();
        loadNode57();
        loadNode58();
        loadNode59();
        loadNode60();
        loadNode61();
        loadNode62();
        loadNode63();
        loadNode64();
        loadNode65();
        loadNode66();
        loadNode67();
        loadNode68();
        loadNode69();
        loadNode70();
        loadNode71();
        loadNode72();
        loadNode73();
        loadNode74();
        loadNode75();
        loadNode76();
        loadNode77();
        loadNode78();
        loadNode79();
        loadNode80();
        loadNode81();
        loadNode82();
        loadNode83();
        loadNode84();
        loadNode85();
        loadNode86();
        loadNode87();
        loadNode88();
        loadNode89();
        loadNode90();
        loadNode91();
        loadNode92();
        loadNode93();
        loadNode94();
        loadNode95();
        loadNode96();
        loadNode97();
        loadNode98();
        loadNode99();
        loadNode100();
        loadNode101();
        loadNode102();
        loadNode103();
        loadNode104();
        loadNode105();
        loadNode106();
        loadNode107();
        loadNode108();
        loadNode109();
        loadNode110();
        loadNode111();
        loadNode112();
        loadNode113();
        loadNode114();
        loadNode115();
        loadNode116();
        loadNode117();
        loadNode118();
        loadNode119();
        loadNode120();
        loadNode121();
        loadNode122();
        loadNode123();
        loadNode124();
        loadNode125();
        loadNode126();
        loadNode127();
        loadNode128();
        loadNode129();
        loadNode130();
        loadNode131();
        loadNode132();
        loadNode133();
        loadNode134();
        loadNode135();
        loadNode136();
        loadNode137();
        loadNode138();
        loadNode139();
        loadNode140();
        loadNode141();
        loadNode142();
        loadNode143();
        loadNode144();
        loadNode145();
        loadNode146();
        loadNode147();
        loadNode148();
        loadNode149();
        loadNode150();
        loadNode151();
        loadNode152();
        loadNode153();
        loadNode154();
        loadNode155();
        loadNode156();
        loadNode157();
        loadNode158();
        loadNode159();
        loadNode160();
        loadNode161();
        loadNode162();
        loadNode163();
        loadNode164();
        loadNode165();
        loadNode166();
        loadNode167();
        loadNode168();
        loadNode169();
        loadNode170();
        loadNode171();
        loadNode172();
        loadNode173();
        loadNode174();
        loadNode175();
        loadNode176();
        loadNode177();
        loadNode178();
        loadNode179();
        loadNode180();
        loadNode181();
        loadNode182();
        loadNode183();
        loadNode184();
        loadNode185();
        loadNode186();
        loadNode187();
        loadNode188();
        loadNode189();
        loadNode190();
        loadNode191();
        loadNode192();
        loadNode193();
        loadNode194();
        loadNode195();
        loadNode196();
        loadNode197();
        loadNode198();
        loadNode199();
        loadNode200();
        loadNode201();
        loadNode202();
        loadNode203();
        loadNode204();
        loadNode205();
        loadNode206();
        loadNode207();
        loadNode208();
        loadNode209();
        loadNode210();
        loadNode211();
        loadNode212();
        loadNode213();
        loadNode214();
        loadNode215();
        loadNode216();
        loadNode217();
        loadNode218();
        loadNode219();
        loadNode220();
        loadNode221();
        loadNode222();
        loadNode223();
        loadNode224();
        loadNode225();
        loadNode226();
        loadNode227();
        loadNode228();
        loadNode229();
        loadNode230();
        loadNode231();
        loadNode232();
        loadNode233();
        loadNode234();
        loadNode235();
        loadNode236();
        loadNode237();
        loadNode238();
        loadNode239();
        loadNode240();
        loadNode241();
        loadNode242();
        loadNode243();
        loadNode244();
        loadNode245();
        loadNode246();
        loadNode247();
        loadNode248();
        loadNode249();
        loadNode250();
        loadNode251();
        loadNode252();
        loadNode253();
        loadNode254();
        loadNode255();
        loadNode256();
        loadNode257();
        loadNode258();
        loadNode259();
        loadNode260();
        loadNode261();
        loadNode262();
        loadNode263();
        loadNode264();
        loadNode265();
        loadNode266();
        loadNode267();
        loadNode268();
        loadNode269();
        loadNode270();
        loadNode271();
        loadNode272();
        loadNode273();
        loadNode274();
        loadNode275();
        loadNode276();
        loadNode277();
        loadNode278();
        loadNode279();
        loadNode280();
        loadNode281();
        loadNode282();
        loadNode283();
        loadNode284();
        loadNode285();
        loadNode286();
        loadNode287();
        loadNode288();
        loadNode289();
        loadNode290();
        loadNode291();
        loadNode292();
        loadNode293();
        loadNode294();
        loadNode295();
        loadNode296();
        loadNode297();
        loadNode298();
        loadNode299();
        loadNode300();
        loadNode301();
        loadNode302();
        loadNode303();
        loadNode304();
        loadNode305();
        loadNode306();
        loadNode307();
        loadNode308();
        loadNode309();
        loadNode310();
        loadNode311();
        loadNode312();
        loadNode313();
        loadNode314();
        loadNode315();
        loadNode316();
        loadNode317();
        loadNode318();
        loadNode319();
        loadNode320();
        loadNode321();
        loadNode322();
        loadNode323();
        loadNode324();
        loadNode325();
        loadNode326();
        loadNode327();
        loadNode328();
        loadNode329();
        loadNode330();
        loadNode331();
        loadNode332();
        loadNode333();
        loadNode334();
        loadNode335();
        loadNode336();
        loadNode337();
        loadNode338();
        loadNode339();
        loadNode340();
        loadNode341();
        loadNode342();
        loadNode343();
        loadNode344();
        loadNode345();
        loadNode346();
        loadNode347();
        loadNode348();
        loadNode349();
        loadNode350();
        loadNode351();
        loadNode352();
        loadNode353();
        loadNode354();
        loadNode355();
        loadNode356();
        loadNode357();
        loadNode358();
        loadNode359();
        loadNode360();
        loadNode361();
        loadNode362();
        loadNode363();
        loadNode364();
        loadNode365();
        loadNode366();
        loadNode367();
        loadNode368();
        loadNode369();
        loadNode370();
        loadNode371();
        loadNode372();
        loadNode373();
        loadNode374();
        loadNode375();
        loadNode376();
        loadNode377();
        loadNode378();
        loadNode379();
        loadNode380();
        loadNode381();
        loadNode382();
        loadNode383();
        loadNode384();
        loadNode385();
        loadNode386();
        loadNode387();
        loadNode388();
        loadNode389();
        loadNode390();
        loadNode391();
        loadNode392();
        loadNode393();
        loadNode394();
        loadNode395();
        loadNode396();
        loadNode397();
        loadNode398();
        loadNode399();
        loadNode400();
        loadNode401();
        loadNode402();
        loadNode403();
        loadNode404();
        loadNode405();
        loadNode406();
        loadNode407();
        loadNode408();
        loadNode409();
        loadNode410();
        loadNode411();
        loadNode412();
        loadNode413();
        loadNode414();
        loadNode415();
        loadNode416();
        loadNode417();
        loadNode418();
        loadNode419();
        loadNode420();
        loadNode421();
        loadNode422();
        loadNode423();
        loadNode424();
        loadNode425();
        loadNode426();
        loadNode427();
        loadNode428();
        loadNode429();
        loadNode430();
        loadNode431();
        loadNode432();
        loadNode433();
        loadNode434();
        loadNode435();
        loadNode436();
        loadNode437();
        loadNode438();
        loadNode439();
        loadNode440();
        loadNode441();
        loadNode442();
        loadNode443();
        loadNode444();
        loadNode445();
        loadNode446();
        loadNode447();
        loadNode448();
        loadNode449();
        loadNode450();
        loadNode451();
        loadNode452();
        loadNode453();
        loadNode454();
        loadNode455();
        loadNode456();
        loadNode457();
        loadNode458();
        loadNode459();
        loadNode460();
        loadNode461();
        loadNode462();
        loadNode463();
        loadNode464();
        loadNode465();
        loadNode466();
        loadNode467();
        loadNode468();
        loadNode469();
        loadNode470();
        loadNode471();
        loadNode472();
        loadNode473();
        loadNode474();
        loadNode475();
        loadNode476();
        loadNode477();
        loadNode478();
        loadNode479();
        loadNode480();
        loadNode481();
        loadNode482();
        loadNode483();
        loadNode484();
        loadNode485();
        loadNode486();
        loadNode487();
        loadNode488();
        loadNode489();
        loadNode490();
        loadNode491();
        loadNode492();
        loadNode493();
        loadNode494();
        loadNode495();
        loadNode496();
        loadNode497();
        loadNode498();
        loadNode499();
        loadNode500();
        loadNode501();
        loadNode502();
        loadNode503();
        loadNode504();
        loadNode505();
        loadNode506();
        loadNode507();
        loadNode508();
        loadNode509();
        loadNode510();
        loadNode511();
        loadNode512();
        loadNode513();
        loadNode514();
        loadNode515();
        loadNode516();
        loadNode517();
        loadNode518();
        loadNode519();
        loadNode520();
        loadNode521();
        loadNode522();
        loadNode523();
        loadNode524();
        loadNode525();
        loadNode526();
        loadNode527();
        loadNode528();
        loadNode529();
        loadNode530();
        loadNode531();
        loadNode532();
        loadNode533();
        loadNode534();
        loadNode535();
        loadNode536();
        loadNode537();
        loadNode538();
        loadNode539();
        loadNode540();
        loadNode541();
        loadNode542();
        loadNode543();
        loadNode544();
        loadNode545();
        loadNode546();
        loadNode547();
        loadNode548();
        loadNode549();
        loadNode550();
        loadNode551();
        loadNode552();
        loadNode553();
        loadNode554();
        loadNode555();
        loadNode556();
        loadNode557();
        loadNode558();
        loadNode559();
        loadNode560();
        loadNode561();
        loadNode562();
        loadNode563();
        loadNode564();
        loadNode565();
        loadNode566();
        loadNode567();
        loadNode568();
        loadNode569();
        loadNode570();
        loadNode571();
        loadNode572();
        loadNode573();
        loadNode574();
        loadNode575();
        loadNode576();
        loadNode577();
        loadNode578();
        loadNode579();
        loadNode580();
        loadNode581();
        loadNode582();
        loadNode583();
        loadNode584();
        loadNode585();
        loadNode586();
        loadNode587();
        loadNode588();
        loadNode589();
        loadNode590();
        loadNode591();
        loadNode592();
        loadNode593();
        loadNode594();
        loadNode595();
        loadNode596();
        loadNode597();
        loadNode598();
        loadNode599();
        loadNode600();
        loadNode601();
        loadNode602();
        loadNode603();
        loadNode604();
        loadNode605();
        loadNode606();
        loadNode607();
        loadNode608();
        loadNode609();
        loadNode610();
        loadNode611();
        loadNode612();
        loadNode613();
        loadNode614();
        loadNode615();
        loadNode616();
        loadNode617();
        loadNode618();
        loadNode619();
        loadNode620();
        loadNode621();
        loadNode622();
        loadNode623();
        loadNode624();
        loadNode625();
        loadNode626();
        loadNode627();
        loadNode628();
        loadNode629();
        loadNode630();
        loadNode631();
        loadNode632();
        loadNode633();
        loadNode634();
        loadNode635();
        loadNode636();
        loadNode637();
        loadNode638();
        loadNode639();
        loadNode640();
        loadNode641();
        loadNode642();
        loadNode643();
        loadNode644();
        loadNode645();
        loadNode646();
        loadNode647();
        loadNode648();
        loadNode649();
        loadNode650();
        loadNode651();
        loadNode652();
        loadNode653();
        loadNode654();
        loadNode655();
        loadNode656();
        loadNode657();
        loadNode658();
        loadNode659();
        loadNode660();
        loadNode661();
        loadNode662();
        loadNode663();
        loadNode664();
        loadNode665();
        loadNode666();
        loadNode667();
        loadNode668();
        loadNode669();
        loadNode670();
        loadNode671();
        loadNode672();
        loadNode673();
        loadNode674();
        loadNode675();
        loadNode676();
        loadNode677();
        loadNode678();
        loadNode679();
        loadNode680();
        loadNode681();
        loadNode682();
        loadNode683();
        loadNode684();
        loadNode685();
        loadNode686();
        loadNode687();
        loadNode688();
        loadNode689();
        loadNode690();
        loadNode691();
        loadNode692();
        loadNode693();
        loadNode694();
        loadNode695();
        loadNode696();
        loadNode697();
        loadNode698();
        loadNode699();
        loadNode700();
        loadNode701();
        loadNode702();
        loadNode703();
        loadNode704();
        loadNode705();
        loadNode706();
        loadNode707();
        loadNode708();
        loadNode709();
        loadNode710();
        loadNode711();
        loadNode712();
        loadNode713();
        loadNode714();
        loadNode715();
        loadNode716();
        loadNode717();
        loadNode718();
        loadNode719();
        loadNode720();
        loadNode721();
        loadNode722();
        loadNode723();
        loadNode724();
        loadNode725();
        loadNode726();
        loadNode727();
        loadNode728();
        loadNode729();
        loadNode730();
        loadNode731();
        loadNode732();
        loadNode733();
        loadNode734();
        loadNode735();
        loadNode736();
        loadNode737();
        loadNode738();
        loadNode739();
        loadNode740();
        loadNode741();
        loadNode742();
        loadNode743();
        loadNode744();
        loadNode745();
        loadNode746();
        loadNode747();
        loadNode748();
        loadNode749();
        loadNode750();
        loadNode751();
        loadNode752();
        loadNode753();
        loadNode754();
        loadNode755();
        loadNode756();
        loadNode757();
        loadNode758();
        loadNode759();
        loadNode760();
        loadNode761();
        loadNode762();
        loadNode763();
        loadNode764();
        loadNode765();
        loadNode766();
        loadNode767();
        loadNode768();
        loadNode769();
        loadNode770();
        loadNode771();
        loadNode772();
        loadNode773();
        loadNode774();
        loadNode775();
        loadNode776();
        loadNode777();
        loadNode778();
        loadNode779();
        loadNode780();
        loadNode781();
        loadNode782();
        loadNode783();
        loadNode784();
        loadNode785();
        loadNode786();
        loadNode787();
        loadNode788();
        loadNode789();
        loadNode790();
        loadNode791();
        loadNode792();
        loadNode793();
        loadNode794();
        loadNode795();
        loadNode796();
        loadNode797();
        loadNode798();
        loadNode799();
        loadNode800();
        loadNode801();
        loadNode802();
        loadNode803();
        loadNode804();
        loadNode805();
        loadNode806();
        loadNode807();
        loadNode808();
        loadNode809();
        loadNode810();
        loadNode811();
        loadNode812();
        loadNode813();
        loadNode814();
        loadNode815();
        loadNode816();
        loadNode817();
        loadNode818();
        loadNode819();
        loadNode820();
        loadNode821();
        loadNode822();
        loadNode823();
        loadNode824();
        loadNode825();
        loadNode826();
        loadNode827();
        loadNode828();
        loadNode829();
        loadNode830();
        loadNode831();
        loadNode832();
        loadNode833();
        loadNode834();
        loadNode835();
        loadNode836();
        loadNode837();
        loadNode838();
        loadNode839();
        loadNode840();
        loadNode841();
        loadNode842();
        loadNode843();
        loadNode844();
        loadNode845();
        loadNode846();
        loadNode847();
        loadNode848();
        loadNode849();
        loadNode850();
        loadNode851();
        loadNode852();
        loadNode853();
        loadNode854();
        loadNode855();
        loadNode856();
        loadNode857();
        loadNode858();
        loadNode859();
        loadNode860();
        loadNode861();
        loadNode862();
        loadNode863();
        loadNode864();
        loadNode865();
        loadNode866();
        loadNode867();
        loadNode868();
        loadNode869();
        loadNode870();
        loadNode871();
        loadNode872();
        loadNode873();
        loadNode874();
        loadNode875();
        loadNode876();
        loadNode877();
        loadNode878();
        loadNode879();
        loadNode880();
        loadNode881();
        loadNode882();
        loadNode883();
        loadNode884();
        loadNode885();
        loadNode886();
        loadNode887();
        loadNode888();
        loadNode889();
        loadNode890();
        loadNode891();
        loadNode892();
        loadNode893();
        loadNode894();
        loadNode895();
        loadNode896();
        loadNode897();
        loadNode898();
        loadNode899();
        loadNode900();
        loadNode901();
        loadNode902();
        loadNode903();
        loadNode904();
        loadNode905();
        loadNode906();
        loadNode907();
        loadNode908();
        loadNode909();
        loadNode910();
        loadNode911();
        loadNode912();
        loadNode913();
        loadNode914();
        loadNode915();
        loadNode916();
        loadNode917();
        loadNode918();
        loadNode919();
        loadNode920();
        loadNode921();
        loadNode922();
        loadNode923();
        loadNode924();
        loadNode925();
        loadNode926();
        loadNode927();
        loadNode928();
        loadNode929();
        loadNode930();
        loadNode931();
        loadNode932();
        loadNode933();
        loadNode934();
        loadNode935();
        loadNode936();
        loadNode937();
        loadNode938();
        loadNode939();
        loadNode940();
        loadNode941();
        loadNode942();
        loadNode943();
        loadNode944();
        loadNode945();
        loadNode946();
        loadNode947();
        loadNode948();
        loadNode949();
        loadNode950();
        loadNode951();
        loadNode952();
        loadNode953();
        loadNode954();
        loadNode955();
        loadNode956();
        loadNode957();
        loadNode958();
        loadNode959();
        loadNode960();
        loadNode961();
        loadNode962();
        loadNode963();
        loadNode964();
        loadNode965();
        loadNode966();
        loadNode967();
        loadNode968();
        loadNode969();
        loadNode970();
        loadNode971();
        loadNode972();
        loadNode973();
        loadNode974();
        loadNode975();
        loadNode976();
        loadNode977();
        loadNode978();
        loadNode979();
        loadNode980();
        loadNode981();
        loadNode982();
        loadNode983();
        loadNode984();
        loadNode985();
        loadNode986();
        loadNode987();
        loadNode988();
        loadNode989();
        loadNode990();
        loadNode991();
        loadNode992();
        loadNode993();
        loadNode994();
        loadNode995();
        loadNode996();
        loadNode997();
        loadNode998();
        loadNode999();
        loadNode1000();
        loadNode1001();
        loadNode1002();
        loadNode1003();
        loadNode1004();
        loadNode1005();
        loadNode1006();
        loadNode1007();
        loadNode1008();
        loadNode1009();
        loadNode1010();
        loadNode1011();
        loadNode1012();
        loadNode1013();
        loadNode1014();
        loadNode1015();
        loadNode1016();
        loadNode1017();
        loadNode1018();
        loadNode1019();
        loadNode1020();
        loadNode1021();
        loadNode1022();
        loadNode1023();
        loadNode1024();
        loadNode1025();
        loadNode1026();
        loadNode1027();
        loadNode1028();
        loadNode1029();
        loadNode1030();
        loadNode1031();
        loadNode1032();
        loadNode1033();
        loadNode1034();
        loadNode1035();
        loadNode1036();
        loadNode1037();
        loadNode1038();
        loadNode1039();
        loadNode1040();
        loadNode1041();
        loadNode1042();
        loadNode1043();
        loadNode1044();
        loadNode1045();
        loadNode1046();
        loadNode1047();
        loadNode1048();
        loadNode1049();
        loadNode1050();
        loadNode1051();
        loadNode1052();
        loadNode1053();
        loadNode1054();
        loadNode1055();
        loadNode1056();
        loadNode1057();
        loadNode1058();
        loadNode1059();
        loadNode1060();
        loadNode1061();
        loadNode1062();
        loadNode1063();
        loadNode1064();
        loadNode1065();
        loadNode1066();
        loadNode1067();
        loadNode1068();
        loadNode1069();
        loadNode1070();
        loadNode1071();
        loadNode1072();
        loadNode1073();
        loadNode1074();
        loadNode1075();
        loadNode1076();
        loadNode1077();
        loadNode1078();
        loadNode1079();
        loadNode1080();
        loadNode1081();
        loadNode1082();
        loadNode1083();
        loadNode1084();
        loadNode1085();
        loadNode1086();
        loadNode1087();
        loadNode1088();
        loadNode1089();
        loadNode1090();
        loadNode1091();
        loadNode1092();
        loadNode1093();
        loadNode1094();
        loadNode1095();
        loadNode1096();
        loadNode1097();
        loadNode1098();
        loadNode1099();
        loadNode1100();
        loadNode1101();
        loadNode1102();
        loadNode1103();
        loadNode1104();
        loadNode1105();
        loadNode1106();
        loadNode1107();
        loadNode1108();
        loadNode1109();
        loadNode1110();
        loadNode1111();
        loadNode1112();
        loadNode1113();
        loadNode1114();
        loadNode1115();
        loadNode1116();
        loadNode1117();
        loadNode1118();
        loadNode1119();
        loadNode1120();
        loadNode1121();
        loadNode1122();
        loadNode1123();
        loadNode1124();
        loadNode1125();
        loadNode1126();
        loadNode1127();
        loadNode1128();
        loadNode1129();
        loadNode1130();
        loadNode1131();
        loadNode1132();
        loadNode1133();
        loadNode1134();
        loadNode1135();
        loadNode1136();
        loadNode1137();
        loadNode1138();
        loadNode1139();
        loadNode1140();
        loadNode1141();
        loadNode1142();
        loadNode1143();
        loadNode1144();
        loadNode1145();
        loadNode1146();
        loadNode1147();
        loadNode1148();
        loadNode1149();
        loadNode1150();
        loadNode1151();
        loadNode1152();
        loadNode1153();
        loadNode1154();
        loadNode1155();
        loadNode1156();
        loadNode1157();
        loadNode1158();
        loadNode1159();
        loadNode1160();
        loadNode1161();
        loadNode1162();
        loadNode1163();
        loadNode1164();
        loadNode1165();
        loadNode1166();
        loadNode1167();
        loadNode1168();
        loadNode1169();
        loadNode1170();
        loadNode1171();
        loadNode1172();
        loadNode1173();
        loadNode1174();
        loadNode1175();
        loadNode1176();
        loadNode1177();
        loadNode1178();
        loadNode1179();
        loadNode1180();
        loadNode1181();
        loadNode1182();
        loadNode1183();
        loadNode1184();
        loadNode1185();
        loadNode1186();
        loadNode1187();
        loadNode1188();
        loadNode1189();
        loadNode1190();
        loadNode1191();
        loadNode1192();
        loadNode1193();
        loadNode1194();
        loadNode1195();
        loadNode1196();
        loadNode1197();
        loadNode1198();
        loadNode1199();
        loadNode1200();
        loadNode1201();
        loadNode1202();
        loadNode1203();
        loadNode1204();
        loadNode1205();
        loadNode1206();
        loadNode1207();
        loadNode1208();
        loadNode1209();
        loadNode1210();
        loadNode1211();
        loadNode1212();
        loadNode1213();
        loadNode1214();
        loadNode1215();
        loadNode1216();
        loadNode1217();
        loadNode1218();
        loadNode1219();
        loadNode1220();
        loadNode1221();
        loadNode1222();
        loadNode1223();
        loadNode1224();
        loadNode1225();
        loadNode1226();
        loadNode1227();
        loadNode1228();
        loadNode1229();
        loadNode1230();
        loadNode1231();
        loadNode1232();
        loadNode1233();
        loadNode1234();
        loadNode1235();
        loadNode1236();
        loadNode1237();
        loadNode1238();
        loadNode1239();
        loadNode1240();
        loadNode1241();
        loadNode1242();
        loadNode1243();
        loadNode1244();
        loadNode1245();
        loadNode1246();
        loadNode1247();
        loadNode1248();
        loadNode1249();
        loadNode1250();
        loadNode1251();
        loadNode1252();
        loadNode1253();
        loadNode1254();
        loadNode1255();
        loadNode1256();
        loadNode1257();
        loadNode1258();
        loadNode1259();
        loadNode1260();
        loadNode1261();
        loadNode1262();
        loadNode1263();
        loadNode1264();
        loadNode1265();
        loadNode1266();
        loadNode1267();
        loadNode1268();
        loadNode1269();
        loadNode1270();
        loadNode1271();
        loadNode1272();
        loadNode1273();
        loadNode1274();
        loadNode1275();
        loadNode1276();
        loadNode1277();
        loadNode1278();
        loadNode1279();
        loadNode1280();
        loadNode1281();
        loadNode1282();
        loadNode1283();
    }
}
